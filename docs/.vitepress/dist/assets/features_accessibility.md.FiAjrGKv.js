import{_ as e,c as t,o as a,a6 as s}from"./chunks/framework.Bev6ATEH.js";const m=JSON.parse('{"title":"Accessibility","description":"","frontmatter":{},"headers":[],"relativePath":"features/accessibility.md","filePath":"features/accessibility.md"}'),r={name:"features/accessibility.md"},i=s('<h1 id="accessibility" tabindex="-1">Accessibility <a class="header-anchor" href="#accessibility" aria-label="Permalink to &quot;Accessibility&quot;">​</a></h1><p>Plot uses <a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA" target="_blank" rel="noreferrer">ARIA</a> to make plots more <strong>accessible</strong> through assistive technology such as screen readers, browser add-ons, and browser developer tools.</p><p>The <a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label" target="_blank" rel="noreferrer">aria-label</a> and <a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description" target="_blank" rel="noreferrer">aria-description</a> attributes on the root SVG element can be set via the top-level <strong>ariaLabel</strong> and <strong>ariaDescription</strong> <a href="./plots">plot options</a>. These default to null.</p><p><a href="./marks">Marks</a> automatically generate an aria-label attribute on the rendered SVG G element; this attribute includes the mark’s type, such as “dot”. The <a href="./../marks/axis">axis mark</a> and <a href="./../marks/grid">grid mark</a> also include the associated scale’s name, such as “y-axis tick”, “y-axis label”, or “x-grid”.</p><p>Use the <strong>ariaLabel</strong> mark option to apply per-instance aria-label attributes (<em>e.g.</em>, on individual dots in a scatterplot), say for a short, human-readable textual representation of each displayed data point. Use the <strong>ariaDescription</strong> mark option for a longer description; this is applied to the mark’s G element. These options both default to null.</p><p>Setting the <strong>ariaHidden</strong> mark option to true hides the mark from the accessibility tree. This is useful for decorative or redundant marks (such as rules or lines between dots).</p>',6),o=[i];function l(n,c,d,p,h,b){return a(),t("div",null,o)}const f=e(r,[["render",l]]);export{m as __pageData,f as default};
