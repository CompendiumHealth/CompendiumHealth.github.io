import{o as v}from"./feature.DXDMwmIR.js";function E(f,u){var h={},c={},a={},i=[],d=-1;u.forEach(function(r,s){var t=f.arcs[r<0?~r:r],n;t.length<3&&!t[1][0]&&!t[1][1]&&(n=u[++d],u[d]=r,u[s]=n)}),u.forEach(function(r){var s=m(r),t=s[0],n=s[1],e,o;if(e=a[t])if(delete a[e.end],e.push(r),e.end=n,o=c[n]){delete c[o.start];var g=o===e?e:e.concat(o);c[g.start=e.start]=a[g.end=o.end]=g}else c[e.start]=a[e.end]=e;else if(e=c[n])if(delete c[e.start],e.unshift(r),e.start=t,o=a[t]){delete a[o.end];var p=o===e?e:o.concat(e);c[p.start=o.start]=a[p.end=e.end]=p}else c[e.start]=a[e.end]=e;else e=[r],c[e.start=t]=a[e.end=n]=e});function m(r){var s=f.arcs[r<0?~r:r],t=s[0],n;return f.transform?(n=[0,0],s.forEach(function(e){n[0]+=e[0],n[1]+=e[1]})):n=s[s.length-1],r<0?[n,t]:[t,n]}function l(r,s){for(var t in r){var n=r[t];delete s[n.start],delete n.start,delete n.end,n.forEach(function(e){h[e<0?~e:e]=1}),i.push(n)}}return l(a,c),l(c,a),u.forEach(function(r){h[r<0?~r:r]||i.push([r])}),i}function A(f){return v(f,y.apply(this,arguments))}function y(f,u,h){var c,a,i;if(arguments.length>1)c=x(f,u,h);else for(a=0,c=new Array(i=f.arcs.length);a<i;++a)c[a]=a;return{type:"MultiLineString",arcs:E(f,c)}}function x(f,u,h){var c=[],a=[],i;function d(t){var n=t<0?~t:t;(a[n]||(a[n]=[])).push({i:t,g:i})}function m(t){t.forEach(d)}function l(t){t.forEach(m)}function r(t){t.forEach(l)}function s(t){switch(i=t,t.type){case"GeometryCollection":t.geometries.forEach(s);break;case"LineString":m(t.arcs);break;case"MultiLineString":case"Polygon":l(t.arcs);break;case"MultiPolygon":r(t.arcs);break}}return s(u),a.forEach(h==null?function(t){c.push(t[0].i)}:function(t){h(t[0].g,t[t.length-1].g)&&c.push(t[0].i)}),c}export{A as m};
