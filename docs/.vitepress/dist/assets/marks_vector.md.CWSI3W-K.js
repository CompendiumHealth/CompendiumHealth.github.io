import{l as K,c as D,b as Z,z as $,aE as V,B as q,br as ss,bM as is,bq as ts}from"./chunks/theme.DAWdUpF4.js";import{f as as}from"./chunks/feature.DXDMwmIR.js";import{m as L}from"./chunks/mesh.DUGB6pHu.js";import{J as W,m as S,p as es,G as J,c as M,q as e,a,L as v,s as I,a6 as _,o as R}from"./chunks/framework.Bev6ATEH.js";function*ns([s,h,k,n],c,d=30,p=K(42)){const l=k-s,r=n-h,o=l*r/(c*1.5),E=Math.sqrt(o),t=3*o,i=E*Math.SQRT1_2,u=Math.ceil(l/i),O=Math.ceil(r/i),U=new Array(u*O),F=[];yield Y(l/2+p()*E,r/2+p()*E);s:for(;F.length;){const g=p()*F.length|0,y=F[g];for(let C=0;C<d;++C){const w=2*Math.PI*p(),A=Math.sqrt(p()*t+o),f=y[0]+A*Math.cos(w),b=y[1]+A*Math.sin(w);if(0<=f&&f<l&&0<=b&&b<r&&H(f,b)){yield Y(f,b);continue s}}const B=F.pop();g<F.length&&(F[g]=B)}function H(g,y){const B=g/i|0,C=y/i|0,w=Math.max(B-2,0),A=Math.max(C-2,0),f=Math.min(B+3,u),b=Math.min(C+3,O);for(let T=A;T<b;++T){const Q=T*u;for(let P=w;P<f;++P){const j=U[Q+P];if(j){const z=j[0]-g,X=j[1]-y;if(z*z+X*X<o)return!1}}}return!0}function Y(g,y){return F.push(U[u*(y/i|0)+(g/i|0)]=[g,y]),[g+s,y+h]}}function hs(s,h){const k=Math.floor(s),n=Math.floor(h),c=k&255,d=n&255,p=G(s-=k),l=G(h-=n),r=m[c]+d,o=m[c+1]+d;return N(l,N(p,x(m[r],s,h),x(m[o],s-1,h)),N(p,x(m[r+1],s,h-1),x(m[o+1],s-1,h-1)))}function ls(s,h){return function(k,n,c){let d=0,p=1,l=1,r=0;for(let o=0;o<h;++o)r+=s(k*p,n*p,c*p)*l,d+=l,l*=.5,p*=2;return r/d}}function x(s,h,k){const n=s&1?k:h;return s&2?-n:n}function G(s){return s*s*s*(s*(s*6-15)+10)}function N(s,h,k){return h+s*(k-h)}const ps=Uint8Array.of(151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180),m=new Uint8Array(512);for(let s=0;s<256;++s)m[s]=m[s+256]=ps[s];const os={id:"vector-mark",tabindex:"-1"},rs=e("a",{class:"header-anchor",href:"#vector-mark","aria-label":'Permalink to "Vector mark <VersionBadge version="0.4.0" />"'},"​",-1),ks=_('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>See also the <a href="./arrow">arrow mark</a>, which draws arrows between two points.</p></div><p>The <strong>vector mark</strong> draws little arrows, typically positioned in <strong>x</strong> and <strong>y</strong> quantitative dimensions, with an optional magnitude (<strong>length</strong>) and direction (<strong>rotate</strong>), as in a vector field. For example, the chart below, based on a <a href="https://github.com/gicentre/litvis/blob/main/examples/windVectors.md" target="_blank" rel="noreferrer">LitVis example</a>, shows wind speed and direction for a section of western Europe.</p>',2),ds=_(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-wind-map?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  inset: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  aspectRatio: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  color: {label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Speed (m/s)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, zero: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, legend: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(wind, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;longitude&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;latitude&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      rotate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: ({</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">u</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">atan2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u, v) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 180</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: ({</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">u</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hypot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u, v),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      stroke</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: ({</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">u</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hypot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u, v)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Regarding this data, <a href="https://www.remss.com/measurements/ccmp/" target="_blank" rel="noreferrer">Remote Sensing Systems</a> says: <em>“Standard U and V coordinates apply, meaning the positive U is to the right and positive V is above the axis. U and V are relative to true north. CCMP winds are expressed using the oceanographic convention, meaning a wind blowing toward the Northeast has a positive U component and a positive V component… Longitude is given in degrees East from 0.125 to 359.875 and latitude is given in degrees North with negative values representing southern locations.”</em></p></div>`,3),Es=e("a",{href:"./../features/projections"},"projection system",-1),gs={width:"12",height:"12",viewBox:"-11 -11 12 12",style:{display:"inline-block"}},cs=e("path",{d:"M0,0l-10,-6m1,3.28l-1,-3.28l3.28,-1",stroke:"var(--vp-c-blue)","stroke-width":"1.5"},null,-1),ys=[cs],us={width:"12",height:"12",viewBox:"0 -11 12 12",style:{display:"inline-block"}},ms=e("path",{d:"M0,0l10,-6m-1,3.28l1,-3.28l-3.28,-1",stroke:"var(--vp-c-red)","stroke-width":"1.5"},null,-1),Fs=[ms],vs=_(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-election-wind-map?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  projection: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;albers-usa&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  length: {type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sqrt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, transform: Math.abs},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">geo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(statemesh, {strokeWidth: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">geo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nation),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      counties,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">centroid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        anchor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d.properties.margin2020 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d.properties.votes,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        stroke</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d.properties.margin2020 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;red&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;blue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        rotate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d.properties.margin2020 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div>`,2),fs=e("strong",null,"shape",-1),bs=e("strong",null,"anchor",-1),_s=e("strong",null,"x",-1),Cs=e("strong",null,"y",-1),Bs=e("a",{href:"#spike"},"spike constructor",-1),ws=e("strong",null,"shape",-1),As=e("em",null,"spike",-1),qs=e("strong",null,"anchor",-1),xs=e("em",null,"start",-1),Ts=e("a",{href:"https://observablehq.com/@observablehq/plot-spike",target:"_blank",rel:"noreferrer"},"spike map",-1),Ps=_(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-spike-map-example?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">688</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  projection: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;albers-usa&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  length: {range: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">geo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(statemesh, {strokeOpacity: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">geo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nation),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">spike</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(counties, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">geoCentroid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d.properties.population, stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;green&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>You can even implement a custom <strong>shape</strong> by supplying an object with a <strong>draw</strong> method. This method takes a <em>context</em> for drawing paths and the <em>length</em> of the vector. See the <a href="https://observablehq.com/@observablehq/plot-phases-of-the-moon" target="_blank" rel="noreferrer">moon phase calendar</a> for an example.</p><p>Lastly, here is an example showing a Perlin noise field, just because it’s pretty:</p>`,4),js=_(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-perlin-noise?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  inset: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  aspectRatio: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  axis: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">poisson</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: ([</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">noise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      rotate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: ([</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> noise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 360</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>This example uses a noise(<em>x</em>, <em>y</em>) function defined as:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">noise </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> octave</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(perlin2, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>See Mike Bostock’s <a href="https://observablehq.com/@mbostock/perlin-noise" target="_blank" rel="noreferrer">Perlin Noise</a> and <a href="https://observablehq.com/@mbostock/poisson-disk-sampling" target="_blank" rel="noreferrer">Poisson Disk Sampling</a> notebooks for source code.</p><h2 id="vector-options" tabindex="-1">Vector options <a class="header-anchor" href="#vector-options" aria-label="Permalink to &quot;Vector options&quot;">​</a></h2><p>In addition to the <a href="./../features/marks#mark-options">standard mark options</a>, the following optional channels are supported:</p><ul><li><strong>x</strong> - the horizontal position; bound to the <em>x</em> scale</li><li><strong>y</strong> - the vertical position; bound to the <em>y</em> scale</li><li><strong>length</strong> - the length in pixels; bound to the <em>length</em> scale; defaults to 12</li><li><strong>rotate</strong> - the rotation angle in degrees clockwise; defaults to 0</li></ul><p>If either of the <strong>x</strong> or <strong>y</strong> channels are not specified, the corresponding position is controlled by the <strong>frameAnchor</strong> option.</p><p>The following constant options are also supported:</p><ul><li><strong>shape</strong> - the shape of the vector; defaults to <em>arrow</em></li><li><strong>r</strong> - a radius in pixels; defaults to 3.5</li><li><strong>anchor</strong> - one of <em>start</em>, <em>middle</em>, or <em>end</em>; defaults to <em>middle</em></li><li><strong>frameAnchor</strong> - how to position the vector within the frame; defaults to <em>middle</em></li></ul><p>The <strong>shape</strong> option controls the visual appearance (path geometry) of the vector and supports the following values:</p><ul><li><em>arrow</em> (default) - an arrow with head size proportional to its length</li><li><em>spike</em> - an isosceles triangle with open base</li><li>any object with a <strong>draw</strong> method; it receives a <em>context</em>, <em>length</em>, and <em>radius</em></li></ul><p>If the <strong>anchor</strong> is <em>start</em>, the arrow will start at the given <em>xy</em> position and point in the direction given by the rotation angle. If the <strong>anchor</strong> is <em>end</em>, the arrow will maintain the same orientation, but be positioned such that it ends in the given <em>xy</em> position. If the <strong>anchor</strong> is <em>middle</em>, the arrow will be likewise be positioned such that its midpoint intersects the given <em>xy</em> position.</p><p>If the <strong>x</strong> channel is not specified, vectors will be horizontally centered in the plot (or facet). Likewise if the <strong>y</strong> channel is not specified, vectors will be vertically centered in the plot (or facet). Typically either <em>x</em>, <em>y</em>, or both are specified.</p><p>The <strong>rotate</strong> and <strong>length</strong> options can be specified as either channels or constants. When specified as a number, it is interpreted as a constant; otherwise it is interpreted as a channel. The length defaults to 12 pixels, and the rotate defaults to 0 degrees (pointing up↑). Vectors with a negative length will be drawn inverted. Positive angles proceed clockwise from noon.</p><p>The <strong>stroke</strong> defaults to <em>currentColor</em>. The <strong>strokeWidth</strong> defaults to 1.5, and the <strong>strokeLinecap</strong> defaults to <em>round</em>.</p><p>Vectors are drawn in input order, with the last data drawn on top. If sorting is needed, say to mitigate overplotting by drawing the smallest vectors on top, consider a <a href="./../transforms/sort">sort transform</a>.</p><h2 id="vector" tabindex="-1">vector(<em>data</em>, <em>options</em>) <a class="header-anchor" href="#vector" aria-label="Permalink to &quot;vector(*data*, *options*) {#vector}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(wind, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;longitude&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;latitude&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, length: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;speed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rotate: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;direction&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Returns a new vector with the given <em>data</em> and <em>options</em>. If neither the <strong>x</strong> nor <strong>y</strong> options are specified, <em>data</em> is assumed to be an array of pairs [[<em>x₀</em>, <em>y₀</em>], [<em>x₁</em>, <em>y₁</em>], [<em>x₂</em>, <em>y₂</em>], …] such that <strong>x</strong> = [<em>x₀</em>, <em>x₁</em>, <em>x₂</em>, …] and <strong>y</strong> = [<em>y₀</em>, <em>y₁</em>, <em>y₂</em>, …].</p><h2 id="vectorX" tabindex="-1">vectorX(<em>data</em>, <em>options</em>) <a class="header-anchor" href="#vectorX" aria-label="Permalink to &quot;vectorX(*data*, *options*) {#vectorX}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vectorX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;economy (mpg)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]))</span></span></code></pre></div><p>Equivalent to <a href="#vector">vector</a> except that if the <strong>x</strong> option is not specified, it defaults to the identity function and assumes that <em>data</em> = [<em>x₀</em>, <em>x₁</em>, <em>x₂</em>, …].</p><h2 id="vectorY" tabindex="-1">vectorY(<em>data</em>, <em>options</em>) <a class="header-anchor" href="#vectorY" aria-label="Permalink to &quot;vectorY(*data*, *options*) {#vectorY}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vectorY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;economy (mpg)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]))</span></span></code></pre></div><p>Equivalent to <a href="#vector">vector</a> except that if the <strong>y</strong> option is not specified, it defaults to the identity function and assumes that <em>data</em> = [<em>y₀</em>, <em>y₁</em>, <em>y₂</em>, …].</p>`,27),Ds={id:"spike",tabindex:"-1"},Vs=e("em",null,"data",-1),Ss=e("em",null,"options",-1),Ms=e("a",{class:"header-anchor",href:"#spike","aria-label":'Permalink to "spike(*data*, *options*) <VersionBadge version="0.6.2" /> {#spike}"'},"​",-1),Is=_('<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">spike</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(counties, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">geoCentroid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d.properties.population}))</span></span></code></pre></div><p>Equivalent to <a href="#vector">vector</a> except that the <strong>shape</strong> defaults to <em>spike</em>, the <strong>stroke</strong> defaults to <em>currentColor</em>, the <strong>strokeWidth</strong> defaults to 1, the <strong>fill</strong> defaults to <strong>stroke</strong>, the <strong>fillOpacity</strong> defaults to 0.3, and the <strong>anchor</strong> defaults to <em>start</em>.</p>',2),zs=JSON.parse('{"title":"Vector mark","description":"","frontmatter":{},"headers":[],"relativePath":"marks/vector.md","filePath":"marks/vector.md"}'),Rs={name:"marks/vector.md"},Xs=Object.assign(Rs,{setup(s){const h=ls(hs,2),k=W([{longitude:-9.875,latitude:45.125},{longitude:9.875,latitude:59.875},{u:0,v:0},{u:0,v:12.184501776503668}]),n=W(null),c=S(()=>n.value?L(n.value,n.value.objects.nation):{type:null}),d=S(()=>n.value?L(n.value,n.value.objects.states,(l,r)=>l!==r):{type:null}),p=S(()=>n.value?as(n.value,n.value.objects.counties).features:[]);return es(()=>{D("../data/wind.csv",Z).then(l=>k.value=l),Promise.all([$("../data/us-counties-10m.json"),D("../data/us-county-population.csv"),D("../data/us-presidential-election-2020.csv")]).then(([l,r,o])=>{const E=new Map(r.map(i=>[i.state+i.county,+i.population])),t=new Map(o.map(i=>[i.fips,i]));for(const i of l.objects.counties.geometries){i.properties.population=E.get(i.id);const u=t.get(i.id);u&&(i.properties.margin2020=+u.margin2020,i.properties.votes=+u.votes)}n.value=l})}),(l,r)=>{const o=J("VersionBadge"),E=J("PlotRender");return R(),M("div",null,[e("h1",os,[a("Vector mark "),v(o,{version:"0.4.0"}),a(),rs]),ks,v(E,{defer:"",options:{inset:10,aspectRatio:1,color:{label:"Speed (m/s)",zero:!0,legend:!0},marks:[V(k.value,{x:"longitude",y:"latitude",rotate:({u:t,v:i})=>Math.atan2(t,i)*180/Math.PI,length:({u:t,v:i})=>Math.hypot(t,i),stroke:({u:t,v:i})=>Math.hypot(t,i)})]}},null,8,["options"]),ds,e("p",null,[a("Vectors can be used with Plot’s "),Es,a(". The map below shows the margin by which the winner of the US presidential election of 2020 won the vote in each county. The arrow’s length encodes the difference in votes, and the orientation and color show who won ("),(R(),M("svg",gs,ys)),a(" for the Democratic candidate, and "),(R(),M("svg",us,Fs)),a(" for the Republican candidate).")]),v(E,{defer:"",options:{projection:"albers-usa",length:{type:"sqrt",transform:Math.abs},marks:[q(d.value,{strokeWidth:.5}),q(c.value),V(p.value,ss({anchor:"start",length:t=>t.properties.margin2020*t.properties.votes,stroke:t=>t.properties.margin2020>0?"var(--vp-c-red)":"var(--vp-c-blue)",rotate:t=>t.properties.margin2020>0?60:-60}))]}},null,8,["options"]),vs,e("p",null,[a("The "),fs,a(" option "),v(o,{version:"0.6.2"}),a(" controls the vector’s appearance, while the "),bs,a(" option positions the vector relative to its anchor point specified in "),_s,a(" and "),Cs,a(". The "),Bs,a(" sets the "),ws,a(" to "),As,a(" and the "),qs,a(" to "),xs,a(". For example, this can be used to produce a "),Ts,a(" of U.S. county population.")]),v(E,{defer:"",options:{width:688,projection:"albers-usa",length:{range:[0,200]},marks:[q(d.value,{strokeOpacity:.5}),q(c.value),is(p.value,ts({length:t=>t.properties.population,stroke:"var(--vp-c-green)"}))]}},null,8,["options"]),Ps,v(E,{defer:"",options:{inset:6,width:1024,aspectRatio:1,axis:null,marks:[V(I(ns)([0,0,2,2],4e3),{length:([t,i])=>(I(h)(t+2,i)+.5)*24,rotate:([t,i])=>I(h)(t,i)*360})]}},null,8,["options"]),js,e("h2",Ds,[a("spike("),Vs,a(", "),Ss,a(") "),v(o,{version:"0.6.2"}),a(),Ms]),Is])}}});export{zs as __pageData,Xs as default};
