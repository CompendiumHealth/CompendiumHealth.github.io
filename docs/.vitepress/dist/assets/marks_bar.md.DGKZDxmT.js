import{k as _,G as C,c as v,L as l,s as e,q as s,a as i,S as g,t as L,w as A,a8 as B,a6 as a,o as x}from"./chunks/framework.Bev6ATEH.js";import{b,x as E,k as h,G as o,t as S,a$ as c,aW as q,aX as T,b0 as y,o as D}from"./chunks/theme.DAWdUpF4.js";import{a as p}from"./chunks/alphabet.Chdqe_eo.js";import{h as I}from"./chunks/hadcrut.DdjdvQsX.js";import{p as u}from"./chunks/penguins.C-n8z74Q.js";const O=JSON.parse(`[{"civilization":"Aegean civilization","start":"-2000","end":"-1200","startLabel":"","endLabel":"","region":"Europe (and colonial offshoots)","timeline":"ANCIENT WORLD"},{"civilization":"Age of pre-colonial civilization (Christian, Islamic, and traditional kingdoms)","start":"650","end":"1880","startLabel":"","endLabel":"","region":"Sub-Saharan Africa","timeline":"MEDIEVAL WORLD"},{"civilization":"Age of Turkic empires","start":"500","end":"1200","startLabel":"","endLabel":"","region":"Middle East","timeline":"MEDIEVAL WORLD"},{"civilization":"Age of united Caliphate","start":"650","end":"900","startLabel":"","endLabel":"","region":"Middle East","timeline":"MEDIEVAL WORLD"},{"civilization":"Ancient Andean region","start":"-1000","end":"500","startLabel":"","endLabel":"","region":"pre-colonial Americas","timeline":"ANCIENT WORLD"},{"civilization":"Ancient China","start":"-2000","end":"500","startLabel":"","endLabel":"","region":"East Asia","timeline":"ANCIENT WORLD"},{"civilization":"Ancient Steppe empires","start":"-1000","end":"500","startLabel":"","endLabel":"","region":"the Steppe","timeline":"ANCIENT WORLD"},{"civilization":"British India","start":"1800","end":"1945","startLabel":"","endLabel":"WWII","region":"South Asia","timeline":"MODERN WORLD"},{"civilization":"Classic age of Mesoamerica","start":"100","end":"900","startLabel":"","endLabel":"","region":"pre-colonial Americas","timeline":"ANCIENT WORLD"},{"civilization":"Colonial Africa","start":"1880","end":"1980","startLabel":"","endLabel":"","region":"Sub-Saharan Africa","timeline":"MODERN WORLD"},{"civilization":"Colonial United States","start":"1500","end":"1776","startLabel":"","endLabel":"","region":"Europe (and colonial offshoots)","timeline":"MODERN WORLD"},{"civilization":"Early Islamic period","start":"1200","end":"1500","startLabel":"","endLabel":"","region":"South Asia","timeline":"MEDIEVAL WORLD"},{"civilization":"Early modern China","start":"1500","end":"1918","startLabel":"","endLabel":"WWI","region":"East Asia","timeline":"MODERN WORLD"},{"civilization":"Early modern Europe","start":"1500","end":"1800","startLabel":"","endLabel":"","region":"Europe (and colonial offshoots)","timeline":"MODERN WORLD"},{"civilization":"Early Nubian civilization","start":"-2000","end":"-1000","startLabel":"","endLabel":"","region":"Sub-Saharan Africa","timeline":"ANCIENT WORLD"},{"civilization":"Egyptian civilization","start":"-3000","end":"-550","startLabel":"","endLabel":"","region":"Middle East","timeline":"ANCIENT WORLD"},{"civilization":"First Persian Empire","start":"-550","end":"-330","startLabel":"","endLabel":"","region":"Middle East","timeline":"ANCIENT WORLD"},{"civilization":"Formative age of Mesoamerica","start":"-1500","end":"100","startLabel":"","endLabel":"","region":"pre-colonial Americas","timeline":"ANCIENT WORLD"},{"civilization":"Formative Japan (age of Yamato rule)","start":"500","end":"800","startLabel":"","endLabel":"","region":"East Asia","timeline":"MEDIEVAL WORLD"},{"civilization":"Formative US","start":"1776","end":"1865","startLabel":"","endLabel":"","region":"Europe (and colonial offshoots)","timeline":"MODERN WORLD"},{"civilization":"Fractured Islamic world","start":"900","end":"2018","startLabel":"","endLabel":"present","region":"Middle East","timeline":"MODERN WORLD"},{"civilization":"Great power US","start":"1865","end":"1945","startLabel":"","endLabel":"WWII","region":"Europe (and colonial offshoots)","timeline":"MODERN WORLD"},{"civilization":"Greek age","start":"-1200","end":"0","startLabel":"","endLabel":"","region":"Europe (and colonial offshoots)","timeline":"ANCIENT WORLD"},{"civilization":"Heian age","start":"800","end":"1200","startLabel":"","endLabel":"","region":"East Asia","timeline":"MEDIEVAL WORLD"},{"civilization":"Imperial Japan","start":"1870","end":"1945","startLabel":"","endLabel":"WWII","region":"East Asia","timeline":"MODERN WORLD"},{"civilization":"Indian kingdom age","start":"-500","end":"1200","startLabel":"","endLabel":"","region":"South Asia","timeline":"ANCIENT WORLD"},{"civilization":"Indus civilization","start":"-2500","end":"-1500","startLabel":"","endLabel":"","region":"South Asia","timeline":"ANCIENT WORLD"},{"civilization":"Inter-Persian period","start":"-330","end":"200","startLabel":"","endLabel":"","region":"Middle East","timeline":"ANCIENT WORLD"},{"civilization":"Kush","start":"-1000","end":"300","startLabel":"","endLabel":"","region":"Sub-Saharan Africa","timeline":"ANCIENT WORLD"},{"civilization":"Medieval Andean region","start":"500","end":"1530","startLabel":"","endLabel":"","region":"pre-colonial Americas","timeline":"MEDIEVAL WORLD"},{"civilization":"Medieval China","start":"500","end":"1500","startLabel":"","endLabel":"","region":"East Asia","timeline":"MEDIEVAL WORLD"},{"civilization":"Medieval Europe","start":"500","end":"1500","startLabel":"","endLabel":"","region":"Europe (and colonial offshoots)","timeline":"MEDIEVAL WORLD"},{"civilization":"Mesopotamian civilization","start":"-3500","end":"-550","startLabel":"","endLabel":"","region":"Middle East","timeline":"ANCIENT WORLD"},{"civilization":"Modern Africa","start":"1980","end":"2018","startLabel":"WWII","endLabel":"present","region":"Sub-Saharan Africa","timeline":"MODERN WORLD"},{"civilization":"Modern Europe","start":"1800","end":"2018","startLabel":"","endLabel":"present","region":"Europe (and colonial offshoots)","timeline":"MODERN WORLD"},{"civilization":"Modern India","start":"1945","end":"2018","startLabel":"","endLabel":"present","region":"South Asia","timeline":"MODERN WORLD"},{"civilization":"Modern Japan","start":"1945","end":"2018","startLabel":"","endLabel":"present","region":"East Asia","timeline":"MODERN WORLD"},{"civilization":"Mongol Empire","start":"1200","end":"1300","startLabel":"","endLabel":"","region":"the Steppe","timeline":"MEDIEVAL WORLD"},{"civilization":"Mughal Empire","start":"1500","end":"1800","startLabel":"","endLabel":"","region":"South Asia","timeline":"MODERN WORLD"},{"civilization":"Peak of Aksum","start":"300","end":"650","startLabel":"","endLabel":"","region":"Sub-Saharan Africa","timeline":"MEDIEVAL WORLD"},{"civilization":"People's Republic of China","start":"1945","end":"2018","startLabel":"WWII","endLabel":"present","region":"East Asia","timeline":"MODERN WORLD"},{"civilization":"Postclassic age of Mesoamerica","start":"900","end":"1520","startLabel":"","endLabel":"","region":"pre-colonial Americas","timeline":"MEDIEVAL WORLD"},{"civilization":"Ptolemaic Egypt","start":"-330","end":"0","startLabel":"","endLabel":"","region":"Middle East","timeline":"ANCIENT WORLD"},{"civilization":"Republic of China","start":"1918","end":"1945","startLabel":"","endLabel":"","region":"East Asia","timeline":"MODERN WORLD"},{"civilization":"Roman > Byzantine Egypt","start":"0","end":"650","startLabel":"","endLabel":"","region":"Middle East","timeline":"ANCIENT WORLD"},{"civilization":"Roman Empire","start":"0","end":"500","startLabel":"","endLabel":"","region":"Europe (and colonial offshoots)","timeline":"ANCIENT WORLD"},{"civilization":"Roman Republic","start":"-500","end":"0","startLabel":"","endLabel":"","region":"Europe (and colonial offshoots)","timeline":"ANCIENT WORLD"},{"civilization":"Second Persian Empire","start":"-200","end":"650","startLabel":"","endLabel":"","region":"Middle East","timeline":"ANCIENT WORLD"},{"civilization":"Shogunate","start":"1200","end":"1870","startLabel":"","endLabel":"","region":"East Asia","timeline":"MEDIEVAL WORLD"},{"civilization":"Superpower US","start":"1945","end":"2018","startLabel":"","endLabel":"present","region":"Europe (and colonial offshoots)","timeline":"MODERN WORLD"},{"civilization":"Vedic age","start":"-1500","end":"-500","startLabel":"","endLabel":"","region":"South Asia","timeline":"ANCIENT WORLD"}]`),m=O.map(({...r})=>b(r)),R=JSON.parse('[{"2010":"37254523","2019":"39512223","State":"California"},{"2010":"25145561","2019":"28995881","State":"Texas"},{"2010":"18801310","2019":"21477737","State":"Florida"},{"2010":"19378102","2019":"19453561","State":"New York"},{"2010":"12702379","2019":"12801989","State":"Pennsylvania"},{"2010":"12830632","2019":"12671821","State":"Illinois"},{"2010":"11536504","2019":"11689100","State":"Ohio"},{"2010":"9687653","2019":"10617423","State":"Georgia"},{"2010":"9535483","2019":"10488084","State":"North Carolina"},{"2010":"9883640","2019":"9986857","State":"Michigan"},{"2010":"8791894","2019":"8882190","State":"New Jersey"},{"2010":"8001024","2019":"8535519","State":"Virginia"},{"2010":"6724540","2019":"7614893","State":"Washington"},{"2010":"6392017","2019":"7278717","State":"Arizona"},{"2010":"6547629","2019":"6949503","State":"Massachusetts"},{"2010":"6346105","2019":"6833174","State":"Tennessee"},{"2010":"6483802","2019":"6732219","State":"Indiana"},{"2010":"5988927","2019":"6137428","State":"Missouri"},{"2010":"5773552","2019":"6045680","State":"Maryland"},{"2010":"5686986","2019":"5822434","State":"Wisconsin"},{"2010":"5029196","2019":"5758736","State":"Colorado"},{"2010":"5303925","2019":"5639632","State":"Minnesota"},{"2010":"4625364","2019":"5148714","State":"South Carolina"},{"2010":"4779736","2019":"4903185","State":"Alabama"},{"2010":"4533372","2019":"4648794","State":"Louisiana"},{"2010":"4339367","2019":"4467673","State":"Kentucky"},{"2010":"3831074","2019":"4217737","State":"Oregon"},{"2010":"3751351","2019":"3956971","State":"Oklahoma"},{"2010":"3574097","2019":"3565287","State":"Connecticut"},{"2010":"2763885","2019":"3205958","State":"Utah"},{"2010":"3725789","2019":"3193694","State":"Puerto Rico"},{"2010":"3046355","2019":"3155070","State":"Iowa"},{"2010":"2700551","2019":"3080156","State":"Nevada"},{"2010":"2915918","2019":"3017825","State":"Arkansas"},{"2010":"2967297","2019":"2976149","State":"Mississippi"},{"2010":"2853118","2019":"2913314","State":"Kansas"},{"2010":"2059179","2019":"2096829","State":"New Mexico"},{"2010":"1826341","2019":"1934408","State":"Nebraska"},{"2010":"1852994","2019":"1792065","State":"West Virginia"},{"2010":"1567582","2019":"1787147","State":"Idaho"},{"2010":"1360301","2019":"1415872","State":"Hawaii"},{"2010":"1316470","2019":"1359711","State":"New Hampshire"},{"2010":"1328361","2019":"1344212","State":"Maine"},{"2010":"989415","2019":"1068778","State":"Montana"},{"2010":"1052567","2019":"1059361","State":"Rhode Island"},{"2010":"897934","2019":"973764","State":"Delaware"},{"2010":"814180","2019":"884659","State":"South Dakota"},{"2010":"672591","2019":"762062","State":"North Dakota"},{"2010":"710231","2019":"731545","State":"Alaska"},{"2010":"601723","2019":"705749","State":"District of Columbia"},{"2010":"625741","2019":"623989","State":"Vermont"},{"2010":"563626","2019":"578759","State":"Wyoming"}]'),N=R.map(({...r})=>b(r)),z=a('<h1 id="bar-mark" tabindex="-1">Bar mark <a class="header-anchor" href="#bar-mark" aria-label="Permalink to &quot;Bar mark&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The bar mark is a variant of the <a href="./rect">rect mark</a> for use when one dimension is ordinal and the other is quantitative. See also the <a href="./cell">cell mark</a>.</p></div><p>The <strong>bar mark</strong> comes in two orientations: <a href="#barY">barY</a> extends vertically↑ as in a vertical bar chart or column chart, while <a href="#barX">barX</a> extends horizontally→. For example, the bar chart below shows the frequency of letters in the English language.</p>',3),P=a('<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-vertical-bars?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">barY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alphabet, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;letter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;frequency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Ordinal domains are sorted naturally (alphabetically) by default. Either set the <a href="./../features/scales">scale <strong>domain</strong></a> explicitly to change the order, or use the mark <a href="./../features/scales#sort-mark-option"><strong>sort</strong> option</a> to derive the scale domain from a channel. For example, to sort <strong>x</strong> by descending <strong>y</strong>:</p>',3),w=a('<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-vertical-bars?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">barY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alphabet, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;letter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;frequency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sort: {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-y&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}}).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>There is typically one ordinal value associated with each bar, such as a name (or above, letter), and two quantitative values defining a lower and upper bound; the lower bound is often not specified (as above) because it defaults to zero. For barY, <strong>x</strong> is ordinal and <strong>y1</strong> &amp; <strong>y2</strong> are quantitative, whereas for barX, <strong>y</strong> is ordinal and <strong>x1</strong> &amp; <strong>x2</strong> are quantitative.</p><p>Above, since <strong>y</strong> was specified instead of <strong>y1</strong> and <strong>y2</strong>, the bar spans from zero to the given <em>y</em> value: if you only specify a single quantitative value, barY applies an implicit <a href="./../transforms/stack">stackY transform</a> and likewise barX implicitly applies stackX. The stacked horizontal bar chart below draws one bar (of unit width in <strong>x</strong>) per penguin, colored and sorted by the penguin’s body mass, and grouped by species along <strong>y</strong>.</p>',4),W=a(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-stacked-unit-chart?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marginLeft: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  x: {label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Frequency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  y: {label: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  color: {legend: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">barX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(penguins, {y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;species&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, inset: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;body_mass_g&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sort: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;body_mass_g&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruleX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The <a href="./../transforms/group">group transform</a> with the <em>count</em> reducer could be used to produce one bar per species.</p></div><p>You can opt-out of the implicit stack transform by specifying the bar’s extent with two quantitative values: <strong>x1</strong> and <strong>x2</strong> for barX, or <strong>y1</strong> and <strong>y2</strong> for barY. For example, here is a historical timeline of civilizations, where each has a beginning and an end.</p>`,4),M=a(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-civilizations-timeline?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marginLeft: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">130</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  axis: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  x: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    axis: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;top&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    grid: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    tickFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`\${</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} BC\`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} AD\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">barX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(civilizations, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      x1: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      x2: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;end&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;civilization&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      sort: {y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;x1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(civilizations, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;civilization&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      text: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;civilization&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      textAnchor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;end&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      dx: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This uses a <a href="./../marks/text">text mark</a> to label the bars directly instead of a <em>y</em> axis. It also uses a custom tick format for the <em>x</em> axis to show the calendar era.</p></div>`,3),V=s("a",{class:"plot-fork no-icon",href:"https://observablehq.com/@observablehq/plot-state-population-change?intent=fork",target:"_blank",title:"Open on Observable"},"Fork",-1),X={class:"language-js vp-adaptive-theme"},Y=s("button",{title:"Copy Code",class:"copy"},null,-1),j=s("span",{class:"lang"},"js",-1),U={class:"shiki shiki-themes github-light github-dark vp-code"},$=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"Plot."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"plot"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({")],-1),J=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  label: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"null"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")],-1),G=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  x: {")],-1),H=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    axis: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"top"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")],-1),K=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    label: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"← decrease · Change in population, 2010–2019 (%) · increase →"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")],-1),Q=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    labelAnchor: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"center"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")],-1),Z=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    tickFormat: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"+"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")],-1),ss=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    percent: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true")],-1),is=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  },")],-1),as=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  color: {")],-1),ts=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    scheme: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"PiYg"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")],-1),es=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    type: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"ordinal"')],-1),ns=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  },")],-1),ls=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  marks: [")],-1),hs=a('<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">barX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(statepop, {y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;State&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (d[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2019</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2010</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2010</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2019</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2010</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]), sort: {y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;x&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}}),</span></span>',1),rs={class:"line"},os=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    Plot.",-1),ps=s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"gridX",-1),ks=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({stroke: ",-1),Es={style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},ds=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", strokeOpacity: ",-1),gs=s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"0.5",-1),cs=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}),",-1),ys=a('<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">axisY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({x: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>',1),us=a('<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruleX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>',1),ms=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  ]")],-1),bs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"})")],-1),Fs=a('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The <strong>percent</strong> scale option is useful for showing percentages; it applies a <a href="./../features/scales#scale-transforms">scale transform</a> that multiplies associated channel values by 100.</p></div><p>When ordinal data is regular, such as the yearly observations of the time-series bar chart of world population below, use the <strong>interval</strong> option to enforce uniformity and show gaps for missing data. It can be set to a named interval such as <em>hour</em> or <em>day</em>, a number for numeric intervals, a <a href="https://d3js.org/d3-time#_interval" target="_blank" rel="noreferrer">d3-time interval</a>, or a custom implementation.</p>',2),fs={class:"label-input"},_s=a(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-ordinal-scale-interval?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">barY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(timeseries, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;year&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;population&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({x: {tickFormat: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, interval: checked </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}})</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can also make a time-series bar chart with a <a href="./rect">rect mark</a>, possibly with the <a href="./../transforms/bin">bin transform</a> to bin observations at regular intervals.</p></div><p>A bar’s ordinal dimension is optional; if missing, the bar spans the chart along this dimension. Such bars typically also have a color encoding. For example, here are <a href="https://showyourstripes.info/" target="_blank" rel="noreferrer">warming stripes</a> showing the increase in average temperature globally over the last 172 years.</p>`,4),Cs=a(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-warming-stripes-2?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  x: {round: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tickFormat: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;d&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  color: {scheme: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;BuRd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">barX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hadcrut, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;year&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;anomaly&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      interval: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// annual observations</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      inset: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // no gaps</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>With the <a href="./../transforms/stack">stack transform</a>, a one-dimensional bar can show the proportions of each value relative to the whole, as a compact alternative to a pie or donut chart.</p>`,3),vs=a(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-stacked-percentages?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  x: {percent: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">barX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alphabet, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stackX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;frequency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fillOpacity: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, inset: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">textX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alphabet, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stackX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;frequency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, text: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;letter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, inset: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruleX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Although barX applies an implicit stackX transform, <a href="./text">textX</a> does not; this example uses an explicit stackX transform in both cases for clarity.</p></div><p>For a grouped bar chart, use <a href="./../features/facets">faceting</a>. The chart below uses <strong>fy</strong> to partition the bar chart of penguins by island.</p>`,4),Ls=a(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-grouped-unit-chart?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marginLeft: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marginRight: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  label: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  x: {label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Frequency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  y: {padding: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">barX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(penguins, {fy: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;island&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, inset: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruleX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="bar-options" tabindex="-1">Bar options <a class="header-anchor" href="#bar-options" aria-label="Permalink to &quot;Bar options&quot;">​</a></h2><p>For required channels, see <a href="#barX">barX</a> and <a href="#barY">barY</a>. The bar mark supports the <a href="./../features/marks">standard mark options</a>, including insets and rounded corners. The <strong>stroke</strong> defaults to <em>none</em>. The <strong>fill</strong> defaults to <em>currentColor</em> if the stroke is <em>none</em>, and to <em>none</em> otherwise.</p><h2 id="barX" tabindex="-1">barX(<em>data</em>, <em>options</em>) <a class="header-anchor" href="#barX" aria-label="Permalink to &quot;barX(*data*, *options*) {#barX}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">barX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alphabet, {y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;letter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;frequency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Returns a new horizontal→ bar with the given <em>data</em> and <em>options</em>. The following channels are required:</p><ul><li><strong>x1</strong> - the starting horizontal position; bound to the <em>x</em> scale</li><li><strong>x2</strong> - the ending horizontal position; bound to the <em>x</em> scale</li></ul><p>The following optional channels are supported:</p><ul><li><strong>y</strong> - the vertical position; bound to the <em>y</em> scale, which must be <em>band</em></li></ul><p>If neither the <strong>x1</strong> nor <strong>x2</strong> option is specified, the <strong>x</strong> option may be specified as shorthand to apply an implicit <a href="./../transforms/stack">stackX transform</a>; this is the typical configuration for a horizontal bar chart with bars aligned at <em>x</em> = 0. If the <strong>x</strong> option is not specified, it defaults to <a href="./../features/transforms#identity">identity</a>. If <em>options</em> is undefined, then it defaults to <strong>x2</strong> as identity and <strong>y</strong> as the zero-based index [0, 1, 2, …]; this allows an array of numbers to be passed to barX to make a quick sequential bar chart. If the <strong>y</strong> channel is not specified, the bar will span the full vertical extent of the plot (or facet).</p><p>If an <strong>interval</strong> is specified, such as d3.utcDay, <strong>x1</strong> and <strong>x2</strong> can be derived from <strong>x</strong>: <em>interval</em>.floor(<em>x</em>) is invoked for each <em>x</em> to produce <em>x1</em>, and <em>interval</em>.offset(<em>x1</em>) is invoked for each <em>x1</em> to produce <em>x2</em>. If the interval is specified as a number <em>n</em>, <em>x1</em> and <em>x2</em> are taken as the two consecutive multiples of <em>n</em> that bracket <em>x</em>. Named UTC intervals such as <em>day</em> are also supported; see <a href="./../features/scales#scale-options">scale options</a>.</p><h2 id="barY" tabindex="-1">barY(<em>data</em>, <em>options</em>) <a class="header-anchor" href="#barY" aria-label="Permalink to &quot;barY(*data*, *options*) {#barY}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">barY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alphabet, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;letter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;frequency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Returns a new vertical↑ bar with the given <em>data</em> and <em>options</em>. The following channels are required:</p><ul><li><strong>y1</strong> - the starting vertical position; bound to the <em>y</em> scale</li><li><strong>y2</strong> - the ending vertical position; bound to the <em>y</em> scale</li></ul><p>The following optional channels are supported:</p><ul><li><strong>x</strong> - the horizontal position; bound to the <em>x</em> scale, which must be <em>band</em></li></ul><p>If neither the <strong>y1</strong> nor <strong>y2</strong> option is specified, the <strong>y</strong> option may be specified as shorthand to apply an implicit <a href="./../transforms/stack">stackY transform</a>; this is the typical configuration for a vertical bar chart with bars aligned at <em>y</em> = 0. If the <strong>y</strong> option is not specified, it defaults to <a href="./../features/transforms#identity">identity</a>. If <em>options</em> is undefined, then it defaults to <strong>y2</strong> as identity and <strong>x</strong> as the zero-based index [0, 1, 2, …]; this allows an array of numbers to be passed to barY to make a quick sequential bar chart. If the <strong>x</strong> channel is not specified, the bar will span the full horizontal extent of the plot (or facet).</p><p>If an <strong>interval</strong> is specified, such as d3.utcDay, <strong>y1</strong> and <strong>y2</strong> can be derived from <strong>y</strong>: <em>interval</em>.floor(<em>y</em>) is invoked for each <em>y</em> to produce <em>y1</em>, and <em>interval</em>.offset(<em>y1</em>) is invoked for each <em>y1</em> to produce <em>y2</em>. If the interval is specified as a number <em>n</em>, <em>y1</em> and <em>y2</em> are taken as the two consecutive multiples of <em>n</em> that bracket <em>y</em>. Named UTC intervals such as <em>day</em> are also supported; see <a href="./../features/scales#scale-options">scale options</a>.</p>`,20),Ds=JSON.parse('{"title":"Bar mark","description":"","frontmatter":{},"headers":[],"relativePath":"marks/bar.md","filePath":"marks/bar.md"}'),As={name:"marks/bar.md"},Is=Object.assign(As,{setup(r){const k=_(!0),F=[{year:2014,population:7295.290765},{year:2015,population:7379.797139},{year:2016,population:7464.022049},{year:2017,population:7547.858925},{year:2019,population:7713.4681},{year:2020,population:7794.798739}];return(f,d)=>{const n=C("PlotRender");return x(),v("div",null,[z,l(n,{mark:E(e(p),{x:"letter",y:"frequency"}),options:{}},null,8,["mark"]),P,l(n,{mark:E(e(p),{x:"letter",y:"frequency",sort:{x:"-y"}}),options:{}},null,8,["mark"]),w,l(n,{defer:"",options:{marginLeft:60,x:{label:"Frequency"},y:{label:null},color:{legend:!0},marks:[h(e(u),{y:"species",x:1,inset:.5,fill:"body_mass_g",sort:"body_mass_g"}),o([0])]}},null,8,["options"]),W,l(n,{options:{marginLeft:130,axis:null,x:{axis:"top",grid:!0,tickFormat:t=>t<0?`${-t} BC`:`${t} AD`},marks:[h(e(m),{x1:"start",x2:"end",y:"civilization",sort:{y:"x1"}}),S(e(m),{x:"start",y:"civilization",text:"civilization",textAnchor:"end",dx:-3})]}},null,8,["options"]),M,s("p",null,[i("For a diverging bar chart, simply specify a negative value. The chart below shows change in population from 2010 to 2019. States whose population increased are "),s("span",{style:g({borderBottom:`solid ${c[3][2]} 3px`})},"green",4),i(", while states whose population decreased are "),s("span",{style:g({borderBottom:`solid ${c[3][0]} 3px`})},"pink",4),i(". (Puerto Rico’s population declined sharply after hurricanes Maria and Irma.)")]),l(n,{options:{label:null,x:{axis:"top",label:"← decrease · Change in population, 2010–2019 (%) · increase →",labelAnchor:"center",tickFormat:"+",percent:!0},color:{scheme:"PiYg",type:"ordinal"},marks:[h(e(N),{y:"State",x:t=>(t[2019]-t[2010])/t[2010],fill:t=>Math.sign(t[2019]-t[2010]),sort:{y:"x"}}),q({stroke:"var(--vp-c-bg)",strokeOpacity:.5}),T({x:0}),o([0])]}},null,8,["options"]),V,s("div",X,[Y,j,s("pre",U,[s("code",null,[$,i(`
`),J,i(`
`),G,i(`
`),H,i(`
`),K,i(`
`),Q,i(`
`),Z,i(`
`),ss,i(`
`),is,i(`
`),as,i(`
`),ts,i(`
`),es,i(`
`),ns,i(`
`),ls,i(`
`),hs,i(`
`),s("span",rs,[os,ps,ks,s("span",Es,'"'+L(f.$dark?"black":"white")+'"',1),ds,gs,cs]),i(`
`),ys,i(`
`),us,i(`
`),ms,i(`
`),bs])])]),Fs,s("p",null,[s("label",fs,[i(" Use interval: "),A(s("input",{type:"checkbox","onUpdate:modelValue":d[0]||(d[0]=t=>k.value=t)},null,512),[[B,k.value]])])]),l(n,{mark:E(F,{x:"year",y:"population"}),options:{x:{tickFormat:"",interval:k.value?1:void 0}}},null,8,["mark","options"]),_s,l(n,{options:{x:{round:!0,tickFormat:"d"},color:{scheme:"BuRd"},marks:[h(e(I),{x:"year",fill:"anomaly",interval:1,inset:0})]}},null,8,["options"]),Cs,l(n,{options:{x:{percent:!0},marks:[h(e(p),y({x:"frequency",fillOpacity:.3,inset:.5})),D(e(p),y({x:"frequency",text:"letter",inset:.5})),o([0,1])]}},null,8,["options"]),vs,l(n,{defer:"",options:{marginLeft:60,marginRight:60,label:null,x:{label:"Frequency"},y:{padding:0},marks:[h(e(u),{fy:"island",y:"sex",x:1,inset:.5}),o([0])]}},null,8,["options"]),Ls])}}});export{Ds as __pageData,Is as default};
