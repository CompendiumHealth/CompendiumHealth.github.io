import{k as F,J as v,p as B,G as m,c as T,q as s,a as i,L as n,s as l,w as u,a7 as P,a9 as b,t as _,a6 as t,o as q}from"./chunks/framework.Bev6ATEH.js";import{c as w,b as x,az as g,aC as h,y as A,M as S,w as V,e as o,bR as O,G as D,t as C}from"./chunks/theme.DAWdUpF4.js";import{c as p}from"./chunks/cars.Do83JJ0T.js";import{p as I}from"./chunks/penguins.C-n8z74Q.js";const j={id:"dodge-transform",tabindex:"-1"},M=s("a",{class:"header-anchor",href:"#dodge-transform","aria-label":'Permalink to "Dodge transform <VersionBadge version="0.5.0" />"'},"‚Äã",-1),Y=t('<p>Given one position dimension (either <strong>x</strong> or <strong>y</strong>), the <strong>dodge</strong> transform computes the other position dimension such that dots are packed densely without overlapping. The <a href="#dodgeX">dodgeX transform</a> computes <strong>x</strong> (horizontal position) given <strong>y</strong> (vertical position), while the <a href="#dodgeY">dodgeY transform</a> computes <strong>y</strong> given <strong>x</strong>.</p><p>The dodge transform is commonly used to produce beeswarm üêù plots, a way of showing a one-dimensional distribution that preserves the visual identity of individual data points. For example, the dots below represent the weights of cars; the rough shape of the pile gives a sense of the overall distribution (peaking around 2,100 pounds), and you can hover an individual dot to see which car it represents.</p>',2),N=t(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-dodge-cars?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">160</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dodgeY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight (lb)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;currentColor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Compare this to a conventional histogram using a <a href="./../marks/rect">rect mark</a>.</p>`,3),R=t(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-dodge-cars?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rectY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">binX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight (lb)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruleY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>The dodge transform works with Plot‚Äôs <a href="./../features/facets">faceting system</a>, allowing independent beeswarm plots on discrete partitions of the data. Below, penguins are grouped by species and colored by sex, while vertical‚ÜïÔ∏é position (<strong>y</strong>) encodes body mass.</p>`,3),X=t(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-dodge-penguins?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  y: {grid: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  color: {legend: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(penguins, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dodgeX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;middle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {fx: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;species&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;body_mass_g&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Beeswarm plots avoid the occlusion problem of dense scatterplots and barcode plots.</p>`,3),z=t('<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-dodge-cars?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight (lb)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div>',2),G=t('<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-dodge-cars?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruleX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight (lb)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>The <strong>anchor</strong> option specifies the layout baseline: the optimal output position. For the dodgeX transform, the supported anchors are: <em>left</em> (default), <em>middle</em>, <em>right</em>. For the dodgeY transform, the supported anchors are: <em>bottom</em> (default), <em>middle</em>, <em>top</em>. When the <em>middle</em> anchor is used, the dots are placed symmetrically around the baseline.</p>',3),U={class:"label-input"},$=s("option",null,"top",-1),W=s("option",null,"middle",-1),L=s("option",null,"bottom",-1),J=[$,W,L],H=t(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-dodge-cars?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dodgeY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(anchor, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight (lb)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;currentColor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>When using dodgeY, you must typically specify the plot‚Äôs <strong>height</strong> to create suitable space for the layout. The dodge transform is not currently able to set the height automatically. For dodgeX, the default <strong>width</strong> of 640 is often sufficient, though you may need to adjust it as well depending on your data.</p><p>The dodge transform differs from the <a href="./stack">stack transform</a> in that the dots do not need the exact same input position to avoid overlap; the dodge transform respects the radius <strong>r</strong> of each dot. Try adjusting the radius below to see the effect.</p>`,4),K={class:"label-input"},Q={style:{"font-variant-numeric":"tabular-nums"}},Z=t(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-variable-radius-dodge?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dodgeY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight (lb)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, r, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;currentColor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>The dodge transform also supports a <strong>padding</strong> option (default 1), which specifies the minimum separating distance between dots. Increase it for more breathing room.</p>`,3),ss={class:"label-input"},is={style:{"font-variant-numeric":"tabular-nums"}},as=t(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-variable-radius-dodge?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dodgeY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight (lb)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, padding, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;currentColor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>If <strong>r</strong> is a channel, the dodge transform will position circles of varying radius. The chart below shows twenty years of IPO offerings leading up to Facebook‚Äôs $104B offering in 2012; each circle is sized proportionally to the associated company‚Äôs valuation at IPO. (This data comes from <a href="https://archive.nytimes.com/www.nytimes.com/interactive/2012/05/17/business/dealbook/how-the-facebook-offering-compares.html?hp" target="_blank" rel="noreferrer">‚ÄúThe Facebook Offering: How It Compares‚Äù</a> by Jeremy Ashkenas, Matthew Bloch, Shan Carter, and Amanda Cox.) Facebook‚Äôs valuation was nearly four times that of Google, the previous record. The 2000 <a href="https://en.wikipedia.org/wiki/Dot-com_bubble" target="_blank" rel="noreferrer">dot-com bubble</a> is also visible.</p>`,3),ts=s("a",{class:"plot-fork no-icon",href:"https://observablehq.com/@observablehq/plot-the-facebook-ipo?intent=fork",target:"_blank",title:"Open on Observable"},"Fork",-1),ns={class:"language-js vp-adaptive-theme"},es=s("button",{title:"Copy Code",class:"copy"},null,-1),ls=s("span",{class:"lang"},"js",-1),hs={class:"shiki shiki-themes github-light github-dark vp-code"},ps=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"Plot."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"plot"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({")],-1),ks=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  insetRight: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"10"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")],-1),os=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  height: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"790"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")],-1),rs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  marks: [")],-1),ds=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    Plot."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dot"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(")],-1),Es=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      ipos,")],-1),gs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      Plot."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dodgeY"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({")],-1),cs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        x: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"date"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")],-1),ys=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        r: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"rMVOP"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")],-1),Fs=t('<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">${</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rMVOP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1e3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toFixed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}B`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>',1),us=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        fill: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"currentColor"')],-1),_s=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      })")],-1),ms=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ),")],-1),bs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    Plot."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"text"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(")],-1),Cs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      ipos,")],-1),fs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      Plot."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dodgeY"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({")],-1),vs=t('<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d.rMVOP </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5e3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>',1),Bs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        x: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"date"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")],-1),Ts=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        r: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"rMVOP"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")],-1),Ps=t('<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (d.rMVOP </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1e3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toFixed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>',1),qs={class:"line"},ws=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        fill: ",-1),xs={style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},As=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",",-1),Ss=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        pointerEvents: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"none"')],-1),Vs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      })")],-1),Os=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    )")],-1),Ds=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  ]")],-1),Is=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"})")],-1),js=s("p",null,[i("The dodge transform can be used with any mark that supports "),s("strong",null,"x"),i(" and "),s("strong",null,"y"),i(" position. Below, we use the "),s("a",{href:"./../marks/text"},"text mark"),i(" instead to show company valuations (in billions).")],-1),Ms=t(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-text-dodge?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  insetRight: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">790</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ipos,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dodgeY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        r: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rMVOP&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (d.rMVOP </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1e3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toFixed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;NAME&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        fontSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">min</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cbrt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d.rMVOP </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1e3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>The dodge transform places dots sequentially, each time finding the closest position to the baseline that avoids intersection with previously-placed dots. Because this is a <a href="https://en.wikipedia.org/wiki/Greedy_algorithm" target="_blank" rel="noreferrer">greedy algorithm</a>, the resulting layout depends on the input order. When <strong>r</strong> is a channel, dots are sorted by descending radius by default such that the largest dots are placed closest to the baseline. Otherwise, dots are placed in input order by default.</p><p>To adjust the dodge layout, use the <a href="./sort">sort transform</a>. For example, if the <strong>sort</strong> option uses the same column as <strong>x</strong>, the dots are arranged in piles leaning right.</p>`,4),Ys=t(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-dodge-sort?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dodgeY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight (lb)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;currentColor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sort: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight (lb)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Reversing the sort order produces piles leaning left.</p>`,3),Ns=t(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-dodge-sort?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dodgeY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight (lb)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;currentColor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sort: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight (lb)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, reverse: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>To avoid repeating a channel definition, you can also specify the <strong>sort</strong> option as <code>{channel: &quot;x&quot;}</code>.</p></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Unlike a <a href="https://observablehq.com/@harrystevens/force-directed-beeswarm" target="_blank" rel="noreferrer">force-directed beeswarm</a>, the dodge transform exactly preserves the input position dimension, resulting in a more accurate visualization. Also, the dodge transform tends to be faster than the iterative constraint relaxation used in the force-directed approach. We use Mikola Lysenko‚Äôs <a href="https://github.com/mikolalysenko/interval-tree-1d" target="_blank" rel="noreferrer">interval-tree-1d library</a> for fast intersection testing.</p></div><h2 id="dodge-options" tabindex="-1">Dodge options <a class="header-anchor" href="#dodge-options" aria-label="Permalink to &quot;Dodge options&quot;">‚Äã</a></h2><p>The dodge transforms accept the following options:</p><ul><li><strong>padding</strong> ‚Äî a number of pixels added to the radius of the mark to estimate its size</li><li><strong>anchor</strong> - the dodge anchor; defaults to <em>left</em> for dodgeX, or <em>bottom</em> for dodgeY</li></ul><p>The <strong>anchor</strong> option may one of <em>middle</em>, <em>right</em>, and <em>left</em> for dodgeX, and one of <em>middle</em>, <em>top</em>, and <em>bottom</em> for dodgeY. With the <em>middle</em> anchor the piles will grow from the center in both directions; with the other anchors, the piles will grow from the specified anchor towards the opposite direction.</p><h2 id="dodgeY" tabindex="-1">dodgeY(<em>dodgeOptions</em>, <em>options</em>) <a class="header-anchor" href="#dodgeY" aria-label="Permalink to &quot;dodgeY(*dodgeOptions*, *options*) {#dodgeY}&quot;">‚Äã</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dodgeY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Given marks arranged along the <em>x</em> axis, the dodgeY transform piles them vertically by defining a <em>y</em> position channel that avoids overlapping. The <em>x</em> position channel is unchanged.</p><h2 id="dodgeX" tabindex="-1">dodgeX(<em>dodgeOptions</em>, <em>options</em>) <a class="header-anchor" href="#dodgeX" aria-label="Permalink to &quot;dodgeX(*dodgeOptions*, *options*) {#dodgeX}&quot;">‚Äã</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dodgeX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Equivalent to Plot.dodgeY, but piling horizontally, creating a new <em>x</em> position channel that avoids overlapping. The <em>y</em> position channel is unchanged.</p>`,14),Ws=JSON.parse('{"title":"Dodge transform","description":"","frontmatter":{},"headers":[],"relativePath":"transforms/dodge.md","filePath":"transforms/dodge.md"}'),Rs={name:"transforms/dodge.md"},Ls=Object.assign(Rs,{setup(Xs){const c=F("middle"),r=F(3),d=F(2),E=v([]);return B(()=>{w("../data/ipos.csv",x).then(y=>E.value=y)}),(y,k)=>{const f=m("VersionBadge"),e=m("PlotRender");return q(),T("div",null,[s("h1",j,[i("Dodge transform "),n(f,{version:"0.5.0"}),i(),M]),Y,n(e,{options:{height:160,marks:[g(l(p),h({x:"weight (lb)",title:"name",fill:"currentColor"}))]}},null,8,["options"]),N,n(e,{options:{height:180,marks:[A(l(p),S({y:"count"},{x:"weight (lb)"})),V([0])]}},null,8,["options"]),R,n(e,{defer:"",options:{y:{grid:!0},color:{legend:!0},marks:[o(l(I),O("middle",{fx:"species",y:"body_mass_g",fill:"sex"}))]}},null,8,["options"]),X,n(e,{mark:g(l(p),{x:"weight (lb)"}),options:{}},null,8,["mark"]),z,n(e,{mark:D(l(p),{x:"weight (lb)"}),options:{}},null,8,["mark"]),G,s("p",null,[s("label",U,[i(" Anchor: "),u(s("select",{"onUpdate:modelValue":k[0]||(k[0]=a=>c.value=a)},J,512),[[P,c.value]])])]),n(e,{options:{height:180,marks:[o(l(p),h(c.value,{x:"weight (lb)",fill:"currentColor"}))]}},null,8,["options"]),H,s("p",null,[s("label",K,[i(" Radius (r): "),u(s("input",{type:"range","onUpdate:modelValue":k[1]||(k[1]=a=>r.value=a),min:"0.5",max:"10",step:"0.1"},null,512),[[b,r.value,void 0,{number:!0}]]),s("span",Q,_(r.value.toLocaleString("en-US",{minimumFractionDigits:1})),1)])]),n(e,{options:{height:180,marks:[o(l(p),h({x:"weight (lb)",r:r.value,fill:"currentColor"}))]}},null,8,["options"]),Z,s("p",null,[s("label",ss,[i(" Padding: "),u(s("input",{type:"range","onUpdate:modelValue":k[2]||(k[2]=a=>d.value=a),min:"-1",max:"5",step:"0.1"},null,512),[[b,d.value,void 0,{number:!0}]]),s("span",is,_(d.value.toLocaleString("en-US",{minimumFractionDigits:1})),1)])]),n(e,{options:{height:180,marks:[o(l(p),h({x:"weight (lb)",padding:d.value,fill:"currentColor"}))]}},null,8,["options"]),as,n(e,{defer:"",options:{insetRight:10,height:790,marks:[o(E.value,h({x:"date",r:"rMVOP",title:a=>`${a.NAME}
${(a.rMVOP/1e3).toFixed(1)}B`,fill:"currentColor"})),C(E.value,h({filter:a=>a.rMVOP>5e3,x:"date",r:"rMVOP",text:a=>(a.rMVOP/1e3).toFixed(),fill:"var(--vp-c-bg)",pointerEvents:"none"}))]}},null,8,["options"]),ts,s("div",ns,[es,ls,s("pre",hs,[s("code",null,[ps,i(`
`),ks,i(`
`),os,i(`
`),rs,i(`
`),ds,i(`
`),Es,i(`
`),gs,i(`
`),cs,i(`
`),ys,i(`
`),Fs,i(`
`),us,i(`
`),_s,i(`
`),ms,i(`
`),bs,i(`
`),Cs,i(`
`),fs,i(`
`),vs,i(`
`),Bs,i(`
`),Ts,i(`
`),Ps,i(`
`),s("span",qs,[ws,s("span",xs,'"'+_(y.$dark?"black":"white")+'"',1),As]),i(`
`),Ss,i(`
`),Vs,i(`
`),Os,i(`
`),Ds,i(`
`),Is])])]),js,n(e,{defer:"",options:{insetRight:10,height:790,marks:[C(E.value,h({x:"date",r:"rMVOP",text:a=>(a.rMVOP/1e3).toFixed(1),title:"NAME",fontSize:a=>Math.min(22,Math.cbrt(a.rMVOP/1e3)*6)}))]}},null,8,["options"]),Ms,n(e,{options:{height:180,marks:[g(l(p),h({x:"weight (lb)",title:"name",fill:"currentColor",sort:"weight (lb)"}))]}},null,8,["options"]),Ys,n(e,{options:{height:180,marks:[g(l(p),h({x:"weight (lb)",title:"name",fill:"currentColor",sort:"weight (lb)",reverse:!0}))]}},null,8,["options"]),Ns])}}});export{Ws as __pageData,Ls as default};
