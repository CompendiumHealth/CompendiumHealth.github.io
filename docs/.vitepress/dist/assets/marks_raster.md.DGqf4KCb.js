import{b6 as B,r as F,c as q,b as T,b9 as w,ba as A,bF as e,t as m,e as u,m as x,C as D,ay as d}from"./chunks/theme.DAWdUpF4.js";import{p as C}from"./chunks/penguins.C-n8z74Q.js";import{d as o}from"./chunks/volcano.data.DrSvnpSj.js";import{J as b,p as I,G as f,c as P,q as y,a as g,L as i,t as v,s as r,a6 as a,o as G}from"./chunks/framework.Bev6ATEH.js";const S={id:"raster-mark",tabindex:"-1"},R=y("a",{class:"header-anchor",href:"#raster-mark","aria-label":'Permalink to "Raster mark <VersionBadge version="0.6.2" />"'},"​",-1),N=a('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>To produce contours instead of a heatmap, see the <a href="./contour">contour mark</a>.</p></div><p>The <strong>raster mark</strong> renders a <a href="https://en.wikipedia.org/wiki/Raster_graphics" target="_blank" rel="noreferrer">raster image</a> — that is, an image formed by discrete pixels in a grid, not a vector graphic like other marks. And whereas the <a href="./image">image mark</a> shows an <em>existing</em> image, the raster mark <em>creates</em> one from abstract data, either by <a href="#spatial-interpolators">interpolating spatial samples</a> (arbitrary points in <strong>x</strong> and <strong>y</strong>) or by sampling a function <em>f</em>(<em>x</em>,<em>y</em>) along the grid.</p>',2),j=y("a",{href:"https://en.wikipedia.org/wiki/Maungawhau",target:"_blank",rel:"noreferrer"},"Maungawhau volcano",-1),O=a(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-volcano-raster?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  color: {label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Elevation (m)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, legend: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(volcano.values, {width: volcano.width, height: volcano.height})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>The grid (<code>volcano.values</code> above) is a list of numbers <code>[103, 104, 104, …]</code>. The first number <code>103</code> is the elevation of the bottom-left corner. This grid is in <a href="https://en.wikipedia.org/wiki/Row-_and_column-major_order" target="_blank" rel="noreferrer">row-major order</a>, meaning that the elevations of the first row are followed by the second row, then the third, and so on. Here’s a smaller grid to demonstrate the concept.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ({</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;width&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;height&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;values&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">21</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">27</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">28</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">35</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">45</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">42</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">48</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">54</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">21</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">28</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">35</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">42</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">49</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">56</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">63</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">48</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">56</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">72</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">27</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">45</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">54</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">63</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">72</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">81</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>We can visualize this small grid directly with a <a href="./text">text mark</a> using the same color encoding. Notice that the image below is flipped vertically relative to the data: the first row of the data is the <em>bottom</em> of the image because below <em>y</em> points up↑.</p>`,5),L=a(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-small-grid-raster?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  grid: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  x: {domain: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, grid.width], label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;column&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  y: {domain: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, grid.height], label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;row&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid.values, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      text: Plot.identity,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      fill: Plot.identity,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> grid.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">floor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> grid.width) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Also notice that the grid points are offset by 0.5: they represent the <em>middle</em> of each pixel rather than the corner. Below, the raster mark is laid under the text mark to show the raster image.</p>`,3),V=a(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-small-grid-raster?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid.values, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      width: grid.width,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      height: grid.height,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      imageRendering: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pixelated&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // to better show the grid</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid.values, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      text: Plot.identity,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;white&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> grid.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">floor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> grid.width) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">CAUTION</p><p>Safari does not currently support the <strong>imageRendering</strong> option.</p></div><p>While the raster mark provides convenient shorthand for strictly gridded data, as above, it <em>also</em> works with samples in arbitrary positions and arbitrary order. For example, in 1955 the <a href="https://www.bgs.ac.uk/datasets/gb-aeromagnetic-survey/" target="_blank" rel="noreferrer">Great Britain aeromagnetic survey</a> measured the Earth’s magnetic field by plane. Each sample recorded the longitude and latitude alongside the strength of the <a href="https://www.ncei.noaa.gov/products/international-geomagnetic-reference-field" target="_blank" rel="noreferrer">IGRF</a> in <a href="https://en.wikipedia.org/wiki/Tesla_(unit)" target="_blank" rel="noreferrer">nanoteslas</a>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>LONGITUDE,LATITUDE,MAG_IGRF90</span></span>
<span class="line"><span>-2.36216,51.70945,7</span></span>
<span class="line"><span>-2.36195,51.71727,6</span></span>
<span class="line"><span>-2.36089,51.72404,9</span></span>
<span class="line"><span>-2.35893,51.73758,12</span></span>
<span class="line"><span>-2.35715,51.7532,18</span></span>
<span class="line"><span>-2.35737,51.76636,24</span></span></code></pre></div><p>Using a <a href="./dot">dot mark</a>, we can make a quick scatterplot to see the irregular grid. We’ll use a <em>diverging</em> color scale to distinguish positive and negative values.</p>`,6),U=a('<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-igrf90-dots?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ca55, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LONGITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LATITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MAG_IGRF90&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({color: {type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;diverging&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}})</span></span></code></pre></div><p>And using a <a href="./line">line mark</a>, we can connect the line segments to reveal the flight paths.</p>',3),M=a('<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-igrf90-flight-paths?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ca55, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LONGITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LATITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MAG_IGRF90&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, z: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LINE_NUMB-SEG&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({color: {type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;diverging&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}})</span></span></code></pre></div><p>The image above starts to be readable, but it would be frustrating to not do more with this data given all the effort that went into collecting it! Fortunately the raster mark’s <strong>interpolate</strong> option can quickly produce a continuous image.</p><p>The <em>nearest</em> interpolator assigns the value of each pixel in the grid using the nearest sample in the data. In effect, this produces a Voronoi diagram.</p>',4),z=a('<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-igfr90-raster?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ca55, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LONGITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LATITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MAG_IGRF90&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, interpolate: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nearest&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({color: {type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;diverging&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}})</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can also make this Voronoi diagram with the <a href="./delaunay">voronoi mark</a>.</p></div><p>If the observed phenomenon is continuous, we can use the <em>barycentric</em> interpolator. This constructs a Delaunay triangulation of the samples, and then paints each triangle by interpolating the values of the triangle’s vertices in <a href="https://en.wikipedia.org/wiki/Barycentric_coordinate_system" target="_blank" rel="noreferrer">barycentric coordinates</a>. (Points outside the convex hull are extrapolated.)</p>',4),W=a('<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-igfr90-barycentric?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ca55, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LONGITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LATITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MAG_IGRF90&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, interpolate: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;barycentric&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({color: {type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;diverging&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}})</span></span></code></pre></div><p>Finally, the <em>random-walk</em> interpolator assigns the value at each grid location simply by taking a random walk that stops after reaching a minimum distance from any sample! The interpolator uses the <a href="https://observablehq.com/@fil/walk-on-spheres" target="_blank" rel="noreferrer">walk on spheres</a> algorithm, limited to 2 consecutive jumps.</p>',3),Y=a('<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-igrf90-random-walk?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ca55, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LONGITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LATITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MAG_IGRF90&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, interpolate: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;random-walk&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({color: {type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;diverging&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}})</span></span></code></pre></div><p>With the <em>random-walk</em> method, the image is grainy, reflecting the uncertainty of the random walk. Use the <strong>blur</strong> option to make it smoother.</p>',3),H=a('<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-igrf90-random-walk?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ca55, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LONGITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LATITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MAG_IGRF90&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, interpolate: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;random-walk&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, blur: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({color: {type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;diverging&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}})</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If none of the built-in <a href="#spatial-interpolators">spatial interpolators</a> suffice, you can write your own as a custom function!</p></div><p>The raster mark can interpolate categorical values, too! Below, this creates an interesting “map” of penguin species in the space of culmen length <em>vs.</em> depth.</p>',4),J=a(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-nominal-random-walk?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  color: {legend: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(penguins, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_length_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_depth_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;species&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, interpolate: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;random-walk&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(penguins, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_length_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_depth_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>As an alternative to interpolating discrete samples, you can supply values as a continuous function <em>f</em>(<em>x</em>,<em>y</em>); the raster mark will invoke this function for the midpoint of each pixel in the raster grid, similar to a WebGL fragment shader. For example, below we visualize the <a href="https://en.wikipedia.org/wiki/Mandelbrot_set" target="_blank" rel="noreferrer">Mandelbrot set</a> by counting the number of iterations needed until the point “escapes”.</p>`,3),K=a(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-mandelbrot-set?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({fill: mandelbrot, x1: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x2: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y1: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.164</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y2: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.164</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({aspectRatio: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mandelbrot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, zr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, zi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [zr, zi] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [zr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> zr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> zi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> zi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> zr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> zi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (zr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> zr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> zi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> zi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Or to visualize the arctangent function:</p>`,4),$=a('<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-arctangent-raster?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({x1: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x2: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y1: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y2: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">atan2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y, x)}).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>When faceting, the sample function <em>f</em>(<em>x</em>,<em>y</em>) is passed a third argument of the facet values {<em>fx</em>, <em>fy</em>}.</p></div><p>The raster mark supports Plot’s <a href="./../features/projections">projection system</a>. The chart below shows global atmospheric water vapor measurements from <a href="https://neo.gsfc.nasa.gov/view.php?datasetId=MYDAL2_M_SKY_WV" target="_blank" rel="noreferrer">NASA Earth Observations</a>.</p>',4),Q=a(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-raster-projection?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  projection: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;equal-earth&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  color: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    scheme: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;BuPu&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    domain: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    legend: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Water vapor (cm)&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vapor, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      fill: Plot.identity,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">360</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      x1: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      y1: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      x2: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      y2: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      interpolate: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;barycentric&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      clip: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sphere&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sphere</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;black&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="raster-options" tabindex="-1">Raster options <a class="header-anchor" href="#raster-options" aria-label="Permalink to &quot;Raster options&quot;">​</a></h2><p>If <em>data</em> is provided, it represents discrete samples in abstract coordinates <strong>x</strong> and <strong>y</strong>; the <strong>fill</strong> and <strong>fillOpacity</strong> channels specify further abstract values (<em>e.g.</em>, height in a topographic map) to be <a href="#spatial-interpolators">spatially interpolated</a> to produce an image.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(volcano.values, {width: volcano.width, height: volcano.height})</span></span></code></pre></div><p>The <strong>fill</strong> and <strong>fillOpacity</strong> channels may alternatively be specified as continuous functions <em>f</em>(<em>x</em>,<em>y</em>) to be evaluated at each pixel centroid of the raster grid (without interpolation).</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({x1: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x2: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y1: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y2: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">atan2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y, x)})</span></span></code></pre></div><p>The resolution of the rectangular raster image may be specified with the following options:</p><ul><li><strong>width</strong> - the number of pixels on each horizontal line</li><li><strong>height</strong> - the number of lines; a positive integer</li></ul><p>The raster dimensions may also be imputed from the extent of <em>x</em> and <em>y</em> and a pixel size:</p><ul><li><strong>x1</strong> - the starting horizontal position; bound to the <em>x</em> scale</li><li><strong>x2</strong> - the ending horizontal position; bound to the <em>x</em> scale</li><li><strong>y1</strong> - the starting vertical position; bound to the <em>y</em> scale</li><li><strong>y2</strong> - the ending vertical position; bound to the <em>y</em> scale</li><li><strong>pixelSize</strong> - the screen size of a raster pixel; defaults to 1</li></ul><p>If <strong>width</strong> is specified, <strong>x1</strong> defaults to 0 and <strong>x2</strong> defaults to <strong>width</strong>; likewise, if <strong>height</strong> is specified, <strong>y1</strong> defaults to 0 and <strong>y2</strong> defaults to <strong>height</strong>. Otherwise, if <strong>data</strong> is specified, <strong>x1</strong>, <strong>y1</strong>, <strong>x2</strong>, and <strong>y2</strong> respectively default to the frame’s left, top, right, and bottom coordinates. Lastly, if <strong>data</strong> is not specified (as when <strong>fill</strong> or <strong>fillOpacity</strong> is a function of <em>x</em> and <em>y</em>), you must specify all of <strong>x1</strong>, <strong>x2</strong>, <strong>y1</strong>, and <strong>y2</strong> to define the raster domain (see below). The <strong>pixelSize</strong> may be set to the inverse of the devicePixelRatio for a sharper image.</p><p>The following raster-specific constant options are supported:</p><ul><li><strong>interpolate</strong> - the <a href="#spatial-interpolators">spatial interpolation method</a></li><li><strong>imageRendering</strong> - the <a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/image-rendering" target="_blank" rel="noreferrer">image-rendering attribute</a>; defaults to <em>auto</em> (bilinear)</li><li><strong>blur</strong> - a non-negative pixel radius for smoothing; defaults to 0</li></ul><p>The <strong>imageRendering</strong> option may be set to <em>pixelated</em> for a sharper image. The <strong>interpolate</strong> option is ignored when <strong>fill</strong> or <strong>fillOpacity</strong> is a function of <em>x</em> and <em>y</em>.</p><h2 id="raster" tabindex="-1">raster(<em>data</em>, <em>options</em>) <a class="header-anchor" href="#raster" aria-label="Permalink to &quot;raster(*data*, *options*) {#raster}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(volcano.values, {width: volcano.width, height: volcano.height})</span></span></code></pre></div><p>Returns a new raster mark with the given (optional) <em>data</em> and <em>options</em>.</p><h2 id="spatial-interpolators" tabindex="-1">Spatial interpolators <a class="header-anchor" href="#spatial-interpolators" aria-label="Permalink to &quot;Spatial interpolators&quot;">​</a></h2><p>The <a href="#raster-mark">raster</a> and <a href="./contour">contour</a> marks use <strong>spatial interpolators</strong> to populate a raster grid from a discrete set of (often ungridded) spatial samples. The <strong>interpolate</strong> option controls how these marks compute the raster grid. The following built-in methods are provided:</p><ul><li><em>none</em> (or null) - assign each sample to the containing pixel</li><li><em>nearest</em> - assign each pixel to the closest sample’s value (Voronoi diagram)</li><li><em>barycentric</em> - apply barycentric interpolation over the Delaunay triangulation</li><li><em>random-walk</em> - apply a random walk from each pixel, stopping when near a sample</li></ul><p>The <strong>interpolate</strong> option can also be specified as a function with the following arguments:</p><ul><li><em>index</em> - an array of numeric indexes into the channels <em>x</em>, <em>y</em>, <em>value</em></li><li><em>width</em> - the width of the raster grid; a positive integer</li><li><em>height</em> - the height of the raster grid; a positive integer</li><li><em>x</em> - an array of values representing the <em>x</em>-position of samples</li><li><em>y</em> - an array of values representing the <em>y</em>-position of samples</li><li><em>value</em> - an array of values representing the sample’s observed value</li></ul><p>So, <em>x</em>[<em>index</em>[0]] represents the <em>x</em>-position of the first sample, <em>y</em>[<em>index</em>[0]] its <em>y</em>-position, and <em>value</em>[<em>index</em>[0]] its value (<em>e.g.</em>, the observed height for a topographic map).</p><h2 id="interpolateNone" tabindex="-1">interpolateNone(<em>index</em>, <em>width</em>, <em>height</em>, <em>x</em>, <em>y</em>, <em>value</em>) <a class="header-anchor" href="#interpolateNone" aria-label="Permalink to &quot;interpolateNone(*index*, *width*, *height*, *x*, *y*, *value*) {#interpolateNone}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ca55, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LONGITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LATITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MAG_IGRF90&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, interpolate: Plot.interpolateNone})</span></span></code></pre></div><p>Applies a simple forward mapping of samples, binning them into pixels in the raster grid without any blending or interpolation. If multiple samples map to the same pixel, the last one wins; this can introduce bias if the points are not in random order, so use <a href="./../transforms/sort#shuffle">Plot.shuffle</a> to randomize the input if needed.</p><h2 id="interpolateNearest" tabindex="-1">interpolateNearest(<em>index</em>, <em>width</em>, <em>height</em>, <em>x</em>, <em>y</em>, <em>value</em>) <a class="header-anchor" href="#interpolateNearest" aria-label="Permalink to &quot;interpolateNearest(*index*, *width*, *height*, *x*, *y*, *value*) {#interpolateNearest}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ca55, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LONGITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LATITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MAG_IGRF90&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, interpolate: Plot.interpolateNearest})</span></span></code></pre></div><p>Assigns each pixel in the raster grid the value of the closest sample; effectively a Voronoi diagram.</p><h2 id="interpolatorBarycentric" tabindex="-1">interpolatorBarycentric(<em>options</em>) <a class="header-anchor" href="#interpolatorBarycentric" aria-label="Permalink to &quot;interpolatorBarycentric(*options*) {#interpolatorBarycentric}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ca55, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LONGITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LATITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MAG_IGRF90&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, interpolate: Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">interpolatorBarycentric</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()})</span></span></code></pre></div><p>Constructs a Delaunay triangulation of the samples, and then for each pixel in the raster grid, determines the triangle that covers the pixel’s centroid and interpolates the values associated with the triangle’s vertices using <a href="https://en.wikipedia.org/wiki/Barycentric_coordinate_system" target="_blank" rel="noreferrer">barycentric coordinates</a>. If the interpolated values are ordinal or categorical (<em>i.e.</em>, anything other than numbers or dates), then one of the three values will be picked randomly weighted by the barycentric coordinates; the given <strong>random</strong> number generator will be used, which defaults to a <a href="https://d3js.org/d3-random#randomLcg" target="_blank" rel="noreferrer">linear congruential generator</a> with a fixed seed (for deterministic results).</p><h2 id="interpolatorRandomWalk" tabindex="-1">interpolatorRandomWalk(<em>options</em>) <a class="header-anchor" href="#interpolatorRandomWalk" aria-label="Permalink to &quot;interpolatorRandomWalk(*options*) {#interpolatorRandomWalk}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ca55, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LONGITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LATITUDE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MAG_IGRF90&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, interpolate: Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">interpolatorRandomWalk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()})</span></span></code></pre></div><p>For each pixel in the raster grid, initiates a random walk, stopping when either the walk is within a given distance (<strong>minDistance</strong>) of a sample or the maximum allowable number of steps (<strong>maxSteps</strong>) have been taken, and then assigning the current pixel the closest sample’s value. The random walk uses the “walk on spheres” algorithm in two dimensions described by <a href="https://www.cs.cmu.edu/~kmcrane/Projects/MonteCarloGeometryProcessing/index.html" target="_blank" rel="noreferrer">Sawhney and Crane</a>, SIGGRAPH 2020; the given <strong>random</strong> number generator will be used, which defaults to a <a href="https://d3js.org/d3-random#randomLcg" target="_blank" rel="noreferrer">linear congruential generator</a> with a fixed seed (for deterministic results).</p>`,36),ns=JSON.parse('{"title":"Raster mark","description":"","frontmatter":{},"headers":[],"relativePath":"marks/raster.md","filePath":"marks/raster.md"}'),X={name:"marks/raster.md"},es=Object.assign(X,{setup(Z){const p=b([]),c=b([]),n={width:10,height:10,values:B(F(10),F(10),(l,k)=>l*k)};I(()=>{q("../data/ca55-south.csv",T).then(l=>p.value=l),w("../data/MYDAL2_M_SKY_WV_2022-11-01_rgb_360x180.csv").then(l=>c.value=A(l).flat().map(k=>k==="99999.0"?NaN:+k))});function _(l,k){for(let E=0,s=0,t=0;E<80;++E)if([s,t]=[s*s-t*t+l,2*s*t+k],s*s+t*t>4)return E}return(l,k)=>{const E=f("VersionBadge"),s=f("PlotRender");return G(),P("div",null,[y("h1",S,[g("Raster mark "),i(E,{version:"0.6.2"}),g(),R]),N,y("p",null,[g("For example, the heatmap below shows the topography of the "),j,g(", produced from a "+v(r(o).width)+"×"+v(r(o).height)+" grid of elevation samples.",1)]),i(s,{defer:"",options:{color:{label:"Elevation (m)",legend:!0},marks:[e(r(o).values,{width:r(o).width,height:r(o).height})]}},null,8,["options"]),O,i(s,{options:{grid:!0,x:{domain:[0,n.width],label:"column"},y:{domain:[0,n.height],label:"row"},marks:[m(n.values,{text:d,fill:d,x:(t,h)=>h%n.width+.5,y:(t,h)=>Math.floor(h/n.width)+.5})]}},null,8,["options"]),L,i(s,{defer:"",options:{marks:[e(n.values,{width:n.width,height:n.height,imageRendering:"pixelated"}),m(n.values,{text:d,fill:"white",x:(t,h)=>h%n.width+.5,y:(t,h)=>Math.floor(h/n.width)+.5})]}},null,8,["options"]),V,i(s,{defer:"",mark:u(p.value,{x:"LONGITUDE",y:"LATITUDE",fill:"MAG_IGRF90"}),options:{color:{type:"diverging"}}},null,8,["mark"]),U,i(s,{defer:"",mark:x(p.value,{x:"LONGITUDE",y:"LATITUDE",stroke:"MAG_IGRF90",z:"LINE_NUMB-SEG"}),options:{color:{type:"diverging"}}},null,8,["mark"]),M,i(s,{defer:"",mark:e(p.value,{x:"LONGITUDE",y:"LATITUDE",fill:"MAG_IGRF90",interpolate:"nearest"}),options:{color:{type:"diverging"}}},null,8,["mark"]),z,i(s,{defer:"",mark:e(p.value,{x:"LONGITUDE",y:"LATITUDE",fill:"MAG_IGRF90",interpolate:"barycentric"}),options:{color:{type:"diverging"}}},null,8,["mark"]),W,i(s,{defer:"",mark:e(p.value,{x:"LONGITUDE",y:"LATITUDE",fill:"MAG_IGRF90",interpolate:"random-walk"}),options:{color:{type:"diverging"}}},null,8,["mark"]),Y,i(s,{defer:"",mark:e(p.value,{x:"LONGITUDE",y:"LATITUDE",fill:"MAG_IGRF90",interpolate:"random-walk",blur:5}),options:{color:{type:"diverging"}}},null,8,["mark"]),H,i(s,{defer:"",options:{color:{legend:!0},marks:[e(r(C),{x:"culmen_length_mm",y:"culmen_depth_mm",fill:"species",interpolate:"random-walk"}),u(r(C),{x:"culmen_length_mm",y:"culmen_depth_mm"})]}},null,8,["options"]),J,i(s,{defer:"",mark:e({fill:_,x1:-2,x2:1,y1:-1.164,y2:1.164}),options:{aspectRatio:1}},null,8,["mark"]),K,i(s,{defer:"",mark:e({x1:-1,x2:1,y1:-1,y2:1,fill:(t,h)=>Math.atan2(h,t)}),options:{}},null,8,["mark"]),$,i(s,{defer:"",options:{projection:"equal-earth",color:{scheme:"BuPu",domain:[0,6],legend:!0,label:"Water vapor (cm)"},marks:[e(c.value,{fill:d,width:360,height:180,x1:-180,y1:90,x2:180,y2:-90,interpolate:"barycentric",clip:"sphere"}),D({stroke:"black"})]}},null,8,["options"]),Q])}}});export{ns as __pageData,es as default};
