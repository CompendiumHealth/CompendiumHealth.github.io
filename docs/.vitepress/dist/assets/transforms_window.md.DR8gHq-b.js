import{k as E,J as v,p as b,G as f,c as C,q as s,a as i,t as y,w as g,a9 as _,L as o,s as a,aa as c,a8 as q,a6 as r,o as B}from"./chunks/framework.Bev6ATEH.js";import{c as T,b as x,j as P,a as t,L as k,w as Y,bW as S,b_ as A}from"./chunks/theme.DAWdUpF4.js";import{s as n}from"./chunks/sf-temperatures.CxkOsRYt.js";const V=s("h1",{id:"window-transform",tabindex:"-1"},[i("Window transform "),s("a",{class:"header-anchor",href:"#window-transform","aria-label":'Permalink to "Window transform"'},"​")],-1),j=s("p",null,[i("The "),s("strong",null,"window transform"),i(" is a specialized "),s("a",{href:"./map"},"map transform"),i(" that computes a moving window and then derives summary statistics from the current window, say to compute rolling averages, rolling minimums, or rolling maximums.")],-1),O=s("span",{style:{"border-bottom":"solid 2px var(--vp-c-red)"}},"red",-1),I=s("span",{style:{"border-bottom":"solid 2px var(--vp-c-blue)"}},"blue",-1),z={class:"label-input"},D=s("span",null,"Window size (k):",-1),N={style:{"font-variant-numeric":"tabular-nums"}},R=r(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-window-line-area?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  y: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    grid: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Temperature (°F)&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">areaY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sftemp, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y1: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;low&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y2: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;high&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fillOpacity: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sftemp, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">windowY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(k, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;low&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;blue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sftemp, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">windowY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(k, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;high&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;red&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>The <strong>k</strong> option specifies the window size: the number of consecutive elements in the rolling window. A larger window for the rolling mean above produces a smoother curve.</p><p>The <strong>anchor</strong> specifies how to align the rolling window with the data. If <em>middle</em> (the default), the window is centered around the current data point; for time-series data, this means the window will incorporate values from the future as well as the past. Setting <strong>anchor</strong> to <em>end</em> will compute a trailing moving average.</p>`,4),X={class:"label-input"},W={style:{"margin-left":"0.5em"}},U={style:{"margin-left":"0.5em"}},L={style:{"margin-left":"0.5em"}},M=r(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-window-anchor?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  y: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    grid: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Temperature (°F)&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sftemp, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;high&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, strokeOpacity: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sftemp, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">windowY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({k: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">28</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, anchor}, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;high&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>The window transform uses input order, not natural order by value, to determine the meaning of <em>start</em> and <em>end</em>. When the data is in reverse chronological order, the meaning of <em>start</em> and <em>end</em> is effectively reversed because the first data point is the most recent. Use a <a href="./sort">sort transform</a> to change the order as needed.</p>`,3),J=s("strong",null,"strict",-1),G=s("strong",null,"anchor",-1),H=s("strong",null,"strict",-1),K=s("strong",null,"strict",-1),Q={class:"label-input"},Z=r(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-window-anchor?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  y: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    grid: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Temperature (°F)&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sftemp, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;low&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, strokeOpacity: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sftemp, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">windowY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({k: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">28</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, anchor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;end&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, strict}, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;low&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>The <strong>reduce</strong> option specifies how to compute the output value for the current window. It defaults to <em>mean</em> for a rolling average. Below, the rolling <span style="border-bottom:solid 2px var(--vp-c-blue);">minimum</span>, <span style="border-bottom:solid 2px var(--vp-c-red);">maximum</span>, and <span style="border-bottom:solid 2px;">median</span> are shown. The window transform supports most of the same reducers as <a href="./bin">bin</a> and <a href="./group">group</a>, and you can implement a custom reducer as a function if needed.</p>`,3),$=r(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-window-reduce?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  y: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    grid: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Temperature (°F)&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sftemp, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;low&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, strokeOpacity: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sftemp, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">windowY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({k: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">28</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, reduce: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;min&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;low&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;blue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sftemp, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">windowY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({k: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">28</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, reduce: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;max&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;low&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;red&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sftemp, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">windowY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({k: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">28</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, reduce: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;median&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;low&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>While the windowY transform derives <strong>y</strong> (and <strong>y1</strong> and <strong>y2</strong>), and the windowX transform likewise derives <strong>x</strong>, <strong>x1</strong>, and <strong>x2</strong>, you can use the <a href="./map">map transform</a> directly for other channels. For example, the chart below uses a variable <strong>stroke</strong> to encode slope: the monthly change in unemployment rate for each metropolitan division. The slope is computed with a window of size 2 and the <em>difference</em> reducer.</p>`,3),ss=r(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-window-and-map?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  y: {grid: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  color: {scheme: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;BuYlRd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, domain: [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruleY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      bls,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {stroke: Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">window</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({k: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, reduce: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;difference&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;unemployment&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, z: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;division&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;unemployment&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>As shown above, the window transform also understands the <strong>z</strong> channel: each metropolitan division is treated as a separate series.</p><h2 id="window-options" tabindex="-1">Window options <a class="header-anchor" href="#window-options" aria-label="Permalink to &quot;Window options&quot;">​</a></h2><p>The window transform supports the following options:</p><ul><li><strong>k</strong> - the window size (the number of elements in the window)</li><li><strong>anchor</strong> - how to align the window: <em>start</em>, <em>middle</em> (default), or <em>end</em></li><li><strong>reduce</strong> - the window reducer; defaults to <em>mean</em></li><li><strong>strict</strong> - if true, output undefined if any window value is undefined; defaults to false</li></ul><p>If the <strong>strict</strong> option is false (the default), the window will be automatically truncated as needed, and undefined input values are ignored. For example, if <strong>k</strong> is 24 and <strong>anchor</strong> is <em>middle</em>, then the initial 11 values have effective window sizes of 13, 14, 15, … 23, and likewise the last 12 values have effective window sizes of 23, 22, 21, … 12. Values computed with a truncated window may be noisy; if you would prefer to not show this data, set the <strong>strict</strong> option to true.</p><p>If the <strong>strict</strong> option is true, the output start values or end values or both (depending on the <strong>anchor</strong>) of each series may be undefined since there are not enough elements to create a window of size <strong>k</strong>; output values may also be undefined if some of the input values in the corresponding window are undefined.</p><p>The following named reducers are supported:</p><ul><li><em>min</em> - the minimum</li><li><em>max</em> - the maximum</li><li><em>mean</em> - the mean (average)</li><li><em>median</em> - the median</li><li><em>mode</em> - the mode (most common occurrence)</li><li><em>pXX</em> - the percentile value, where XX is a number in [00,99]</li><li><em>sum</em> - the sum of values</li><li><em>deviation</em> - the standard deviation</li><li><em>variance</em> - the variance per <a href="https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance#Welford&#39;s_online_algorithm" target="_blank" rel="noreferrer">Welford’s algorithm</a></li><li><em>difference</em> - the difference between the last and first window value</li><li><em>ratio</em> - the ratio of the last and first window value</li><li><em>first</em> - the first value</li><li><em>last</em> - the last value</li></ul><p>A reducer may also be specified as a function to be passed an index of size <strong>k</strong> and the corresponding input channel array; or if the function only takes one argument, an array of <strong>k</strong> values.</p>`,11),is={id:"window",tabindex:"-1"},as=s("em",null,"k",-1),ts=s("a",{class:"header-anchor",href:"#window","aria-label":'Permalink to "window(*k*) <VersionBadge version="0.2.3" /> {#window}"'},"​",-1),ns=r('<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({y: Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">window</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)}, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Close&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Symbol&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Returns a window map method for the given window size <em>k</em>, suitable for use with Plot.map. For additional options to the window transform, replace the number <em>k</em> with an object with properties <strong>k</strong>, <strong>anchor</strong>, <strong>reduce</strong>, or <strong>strict</strong>.</p><h2 id="windowX" tabindex="-1">windowX(<em>k</em>, <em>options</em>) <a class="header-anchor" href="#windowX" aria-label="Permalink to &quot;windowX(*k*, *options*) {#windowX}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">windowX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Anomaly&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Like <a href="./map#mapX">mapX</a>, but applies the window map method with the given window size <em>k</em>. For additional options to the window transform, replace the number <em>k</em> with an object with properties <strong>k</strong>, <strong>anchor</strong>, or <strong>reduce</strong>.</p><h2 id="windowY" tabindex="-1">windowY(<em>k</em>, <em>options</em>) <a class="header-anchor" href="#windowY" aria-label="Permalink to &quot;windowY(*k*, *options*) {#windowY}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">windowY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Anomaly&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Like <a href="./map#mapY">mapY</a>, but applies the window map method with the given window size <em>k</em>. For additional options to the window transform, replace the number <em>k</em> with an object with properties <strong>k</strong>, <strong>anchor</strong>, or <strong>reduce</strong>.</p>',8),ks=JSON.parse('{"title":"Window transform","description":"","frontmatter":{},"headers":[],"relativePath":"transforms/window.md","filePath":"transforms/window.md"}'),es={name:"transforms/window.md"},rs=Object.assign(es,{setup(ls){const h=E(7);E(.01);const p=E("end"),u=E(!0);E("mean");const m=v([]);return b(()=>{T("../data/bls-metro-unemployment.csv",x).then(F=>m.value=F)}),(F,e)=>{const d=f("PlotRender"),w=f("VersionBadge");return B(),C("div",null,[V,j,s("p",null,[i("For example, the band chart below shows the daily high and low temperature in San Francisco. The "),O,i(" line represents the "+y(h.value)+"-day average high, and the ",1),I,i(" line the "+y(h.value)+"-day average low.",1)]),s("p",null,[s("label",z,[D,g(s("input",{type:"range","onUpdate:modelValue":e[0]||(e[0]=l=>h.value=l),min:"1",max:"100",step:"1"},null,512),[[_,h.value,void 0,{number:!0}]]),s("span",N,y(h.value.toLocaleString("en-US")),1)])]),o(d,{options:{y:{grid:!0,label:"Temperature (°F)"},marks:[P(a(n),{x:"date",y1:"low",y2:"high",fillOpacity:.3}),t(a(n),k(h.value,{x:"date",y:"low",stroke:"var(--vp-c-blue)"})),t(a(n),k(h.value,{x:"date",y:"high",stroke:"var(--vp-c-red)"}))]}},null,8,["options"]),R,s("p",null,[s("span",X,[i(" Anchor: "),s("label",W,[g(s("input",{type:"radio",name:"anchor",value:"start","onUpdate:modelValue":e[1]||(e[1]=l=>p.value=l)},null,512),[[c,p.value]]),i(" start ")]),s("label",U,[g(s("input",{type:"radio",name:"anchor",value:"middle","onUpdate:modelValue":e[2]||(e[2]=l=>p.value=l)},null,512),[[c,p.value]]),i(" middle ")]),s("label",L,[g(s("input",{type:"radio",name:"anchor",value:"end","onUpdate:modelValue":e[3]||(e[3]=l=>p.value=l)},null,512),[[c,p.value]]),i(" end ")])])]),o(d,{options:{y:{grid:!0,label:"Temperature (°F)"},marks:[t(a(n),{x:"date",y:"high",strokeOpacity:.3}),t(a(n),k({k:28,anchor:p.value},{x:"date",y:"high"}))]}},null,8,["options"]),M,s("p",null,[i("If "),J,i(" is false (the default), the window size is effectively reduced at the start or end of each series or both, depending on the "),G,i(". Values computed with a truncated window may be noisy; if you would prefer to not show this data instead, set the "),H,i(" option to true. "),o(w,{version:"0.6.0"}),i(" The "),K,i(" option can also have a dramatic effect if some data is missing: when strict, the reducer will be skipped if any of the values in the current window are null, undefined, or NaN.")]),s("p",null,[s("label",Q,[i(" Strict: "),g(s("input",{type:"checkbox","onUpdate:modelValue":e[4]||(e[4]=l=>u.value=l)},null,512),[[q,u.value]])])]),o(d,{options:{y:{grid:!0,label:"Temperature (°F)"},marks:[t(a(n),{x:"date",y:"low",strokeOpacity:.3}),t(a(n),k({k:28,anchor:"end",strict:u.value},{x:"date",y:"low"}))]}},null,8,["options"]),Z,o(d,{options:{y:{grid:!0,label:"Temperature (°F)"},marks:[t(a(n),{x:"date",y:"low",strokeOpacity:.3}),t(a(n),k({k:28,reduce:"min"},{x:"date",y:"low",stroke:"var(--vp-c-blue)"})),t(a(n),k({k:28,reduce:"max"},{x:"date",y:"low",stroke:"var(--vp-c-red)"})),t(a(n),k({k:28,reduce:"median"},{x:"date",y:"low"}))]}},null,8,["options"]),$,o(d,{defer:"",options:{y:{grid:!0},color:{scheme:"BuYlRd",domain:[-.5,.5]},marks:[Y([0]),t(m.value,S({stroke:A({k:2,reduce:"difference"})},{x:"date",y:"unemployment",z:"division",stroke:"unemployment"}))]}},null,8,["options"]),ss,s("h2",is,[i("window("),as,i(") "),o(w,{version:"0.2.3"}),i(),ts]),ns])}}});export{ks as __pageData,rs as default};
