import{c as o,b as r,G as E,I as h,bm as d,x as c,bJ as g,w as u,aH as y,l as m}from"./chunks/theme.DAWdUpF4.js";import{a as p}from"./chunks/alphabet.Chdqe_eo.js";import{J as b,p as F,G as f,c as _,L as n,s as k,a6 as i,o as C}from"./chunks/framework.Bev6ATEH.js";const v=i('<h1 id="tick-mark" tabindex="-1">Tick mark <a class="header-anchor" href="#tick-mark" aria-label="Permalink to &quot;Tick mark&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The tick mark is one of two marks in Plot for drawing horizontal or vertical lines; it should be used when the secondary position dimension, if any, is ordinal. When it is quantitative, use a <a href="./rule">rule</a>.</p></div><p>The <strong>tick mark</strong> comes in two orientations: <a href="#tickY">tickY</a> draws a horizontal↔︎ line with a given <em>y</em> value, while <a href="#tickX">tickX</a> draws a vertical↕︎ line with a given <em>x</em> value. Ticks have an optional secondary position dimension (<strong>x</strong> for tickY and <strong>y</strong> for tickX); this second dimension is ordinal, unlike a <a href="./rule">rule</a>, and requires a corresponding <a href="./../features/scales">band scale</a>.</p><p>Ticks are often used to show one-dimensional distributions, as in the “barcode” plot below showing the proportion of the population in each age bracket across U.S. states.</p>',4),q=i(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-barcode?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  x: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    grid: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Population (%)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    percent: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  y: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    domain: stateage.ages, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// in age order</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    reverse: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Age (years)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    labelAnchor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;top&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruleX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tickX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(stateage, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">normalizeX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sum&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {z: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;state&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;population&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Both ticks and <a href="./bar">bars</a> have an ordinal secondary position dimension; a tick is therefore convenient for stroking the upper bound of a bar for emphasis, as in the bar chart below. A separate <a href="./rule">rule</a> is also used to denote <em>y</em> = 0.</p>`,3),B=i(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-bar-and-tick?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  x: {label: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  y: {percent: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">barY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alphabet, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;letter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;frequency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fillOpacity: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tickY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alphabet, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;letter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;frequency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruleY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>When there is no secondary position dimension, a tick behaves identically to a <a href="./rule">rule</a>. While a one-dimensional rule and tick are equivalent, a one-dimensional rule is generally preferred, if only because the name “rule” is more descriptive. But as an example below, a random normal distribution is plotted below with ticks.</p>`,3),T=i(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-random-ticks?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  x: {domain: [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tickX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({length: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, {x: d3.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">randomNormal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), strokeOpacity: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Reducing opacity allows better perception of density when ticks overlap.</p></div><p>Ticks are also used by the <a href="./box">box mark</a> to denote the median value for each group.</p><h2 id="tick-options" tabindex="-1">Tick options <a class="header-anchor" href="#tick-options" aria-label="Permalink to &quot;Tick options&quot;">​</a></h2><p>For the required channels, see <a href="#tickX">tickX</a> and <a href="#tickY">tickY</a>. The tick mark supports the <a href="./../features/marks#mark-options">standard mark options</a>, including insets, and <a href="./../features/markers">marker options</a> to add a marker (such as a dot or an arrowhead) to the start or end of the rule. The <strong>stroke</strong> defaults to <em>currentColor</em>.</p><h2 id="tickX" tabindex="-1">tickX(<em>data</em>, <em>options</em>) <a class="header-anchor" href="#tickX" aria-label="Permalink to &quot;tickX(*data*, *options*) {#tickX}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tickX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(stateage, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;population&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Returns a new vertical↕︎ tick with the given <em>data</em> and <em>options</em>. The following channels are required:</p><ul><li><strong>x</strong> - the horizontal position; bound to the <em>x</em> scale</li></ul><p>The following optional channels are supported:</p><ul><li><strong>y</strong> - the vertical position; bound to the <em>y</em> scale, which must be <em>band</em></li></ul><p>If the <strong>y</strong> channel is not specified, the tick will span the full vertical extent of the frame.</p><h2 id="tickY" tabindex="-1">tickY(<em>data</em>, <em>options</em>) <a class="header-anchor" href="#tickY" aria-label="Permalink to &quot;tickY(*data*, *options*) {#tickY}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tickY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(stateage, {y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;population&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Returns a new horizontal↔︎ tick with the given <em>data</em> and <em>options</em>. The following channels are required:</p><ul><li><strong>y</strong> - the vertical position; bound to the <em>y</em> scale</li></ul><p>The following optional channels are supported:</p><ul><li><strong>x</strong> - the horizontal position; bound to the <em>x</em> scale, which must be <em>band</em></li></ul><p>If the <strong>x</strong> channel is not specified, the tick will span the full vertical extent of the frame.</p>`,20),Y=JSON.parse('{"title":"Tick mark","description":"","frontmatter":{},"headers":[],"relativePath":"marks/tick.md","filePath":"marks/tick.md"}'),x={name:"marks/tick.md"},S=Object.assign(x,{setup(w){const a=b([]);return F(()=>{o("../data/us-population-state-age.csv",r).then(t=>{const e=t.columns.slice(1);a.value=Object.assign(e.flatMap(s=>t.map(l=>({state:l.name,age:s,population:l[s]}))),{ages:e})})}),(t,e)=>{const s=f("PlotRender");return C(),_("div",null,[v,n(s,{defer:"",options:{x:{grid:!0,label:"Population (%)",percent:!0},y:{domain:a.value.ages,reverse:!0,label:"Age (years)",labelAnchor:"top"},marks:[E([0]),h(a.value,d("sum",{z:"state",x:"population",y:"age"}))]}},null,8,["options"]),q,n(s,{options:{x:{label:null},y:{percent:!0},marks:[c(k(p),{x:"letter",y:"frequency",fillOpacity:.2}),g(k(p),{x:"letter",y:"frequency"}),u([0])]}},null,8,["options"]),B,n(s,{options:{x:{domain:[-4,4]},marks:[h({length:500},{x:y.source(m(42))(),strokeOpacity:.2})]}},null,8,["options"]),T])}}});export{Y as __pageData,S as default};
