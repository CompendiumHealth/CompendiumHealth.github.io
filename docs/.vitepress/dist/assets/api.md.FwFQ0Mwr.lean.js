import{_ as u,c as a,q as e,H as i,I as f,s as h,n as p,a as n,o as r,t as m,f as g}from"./chunks/framework.Bev6ATEH.js";const l=JSON.parse('{"methods":[{"name":"area","comment":"Returns a new area mark with the given data and options","href":"marks/area"},{"name":"areaX","comment":"Returns a new vertically-oriented area mark for the given data and options, where the baseline and topline share y values, as in a time-series area chart where time goes up↑","href":"marks/area"},{"name":"areaY","comment":"Returns a new horizontally-oriented area mark for the given data and options, where the baseline and topline share x values, as in a time-series area chart where time goes right→","href":"marks/area"},{"name":"arrow","comment":"Returns a new arrow mark for the given data and options, drawing (possibly swoopy) arrows connecting pairs of points","href":"marks/arrow"},{"name":"auto","comment":"Returns a new mark whose implementation is chosen dynamically to best represent the dimensions of the given data specified in options, according to a few simple heuristics","href":"marks/auto"},{"name":"autoSpec","comment":"Returns a fully-specified options object for the auto mark, with nothing left undefined","href":"marks/auto"},{"name":"axisFx","comment":"Returns a new compound axis mark to document the visual encoding of the horizontal facet position fx scale, comprised of (up to) three marks","href":"marks/axis"},{"name":"axisFy","comment":"Returns a new compound axis mark to document the visual encoding of the vertical facet position fy scale, comprised of (up to) three marks","href":"marks/axis"},{"name":"axisX","comment":"Returns a new compound axis mark to document the visual encoding of the horizontal position x scale, comprised of (up to) three marks","href":"marks/axis"},{"name":"axisY","comment":"Returns a new compound axis mark to document the visual encoding of the vertical position y scale, comprised of (up to) three marks","href":"marks/axis"},{"name":"barX","comment":"Returns a new horizontal bar mark for the given data and options; the required x values should be quantitative or temporal, and the optional y values should be ordinal","href":"marks/bar"},{"name":"barY","comment":"Returns a new vertical bar mark for the given data and options; the required y values should be quantitative or temporal, and the optional x values should be ordinal","href":"marks/bar"},{"name":"bin","comment":"Bins on the x and y channels; then subdivides bins on the first channel of z, fill, or stroke, if any; and lastly for each channel in the specified outputs, applies the corresponding reduce method to produce new channel values from the binned input channel values","href":"transforms/bin"},{"name":"binX","comment":"Bins on the x channel; then subdivides bins on the first channel of z, fill, or stroke, if any; then further subdivides bins on the y channel, if any and if none of y, y1, and y2 are in outputs; and lastly for each channel in the specified outputs, applies the corresponding reduce method to produce new channel values from the binned input channel values","href":"transforms/bin"},{"name":"binY","comment":"Bins on the y channel; then subdivides bins on the first channel of z, fill, or stroke, if any; then further subdivides bins on the x channel, if any and if none of x, x1, and x2 are in outputs; and lastly for each channel in the specified outputs, applies the corresponding reduce method to produce new channel values from the binned input channel values","href":"transforms/bin"},{"name":"bollinger","comment":"Given the specified bollinger options, returns a corresponding map implementation for use with the map transform, allowing the bollinger transform to be applied to arbitrary channels instead of only x and y","href":"marks/bollinger"},{"name":"bollingerX","comment":"Returns a new vertically-oriented bollinger mark for the given data and options, as in a time-series area chart where time goes up↑ (or down↓)","href":"marks/bollinger"},{"name":"bollingerY","comment":"Returns a new horizontally-oriented bollinger mark for the given data and options, as in a time-series area chart where time goes right→ (or ←left)","href":"marks/bollinger"},{"name":"boxX","comment":"Returns a box mark that draws horizontal boxplots where x is quantitative or temporal and y, if present, is ordinal","href":"marks/box"},{"name":"boxY","comment":"Returns a box mark that draws vertical boxplots where y is quantitative or temporal and x, if present, is ordinal","href":"marks/box"},{"name":"cell","comment":"Returns a rectangular cell mark for the given data and options","href":"marks/cell"},{"name":"cellX","comment":"Like cell, but x defaults to the zero-based index [0, 1, 2, …], and if stroke is not a channel, fill defaults to the identity function, assuming that data = [x₀, x₁, x₂, …]","href":"marks/cell"},{"name":"cellY","comment":"Like cell, but y defaults to the zero-based index [0, 1, 2, …], and if stroke is not a channel, fill defaults to the identity function, assuming that data = [y₀, y₁, y₂, …]","href":"marks/cell"},{"name":"centroid","comment":"Given a geometry input channel of GeoJSON geometry, derives x and y output channels representing the planar (projected) centroids of the geometry","href":"transforms/centroid"},{"name":"circle","comment":"Like dot, except that the symbol option is set to circle","href":"marks/dot"},{"name":"cluster","comment":"Shorthand for the tree mark using d3.cluster as the treeLayout option, placing leaf nodes of the tree at the same depth","href":"marks/tree"},{"name":"column","comment":"Returns a [column, setColumn] helper for deriving columns; column is a channel transform that returns whatever value was most recently passed to setColumn","href":"features/transforms"},{"name":"contour","comment":"Returns a new contour mark, which creates contour polygons from spatial samples","href":"marks/contour"},{"name":"crosshair","comment":"Returns a new crosshair mark for the given data and options, drawing horizontal and vertical rules centered at the point closest to the pointer","href":"interactions/crosshair"},{"name":"crosshairX","comment":"Like crosshair, but uses the pointerX transform","href":"interactions/crosshair"},{"name":"crosshairY","comment":"Like crosshair, but uses the pointerY transform","href":"interactions/crosshair"},{"name":"delaunayLink","comment":"Returns a mark that draws links for each edge of the Delaunay triangulation of the points given by the x and y channels","href":"marks/delaunay"},{"name":"delaunayMesh","comment":"Returns a mark that draws a mesh of the Delaunay triangulation of the points given by the x and y channels","href":"marks/delaunay"},{"name":"density","comment":"Returns a mark that draws contours representing the estimated density of the two-dimensional points given by x and y, and possibly weighted by weight","href":"marks/density"},{"name":"differenceY","comment":"Returns a new vertical difference mark for the given the specified data and options, as in a time-series chart where time goes right→ (or ←left)","href":"marks/difference"},{"name":"dodgeX","comment":"Given a y position channel, derives a new x position channel that places circles of the given radius r to avoid overlap","href":"transforms/dodge"},{"name":"dodgeY","comment":"Given an x position channel, derives a new y position channel that places circles of the given radius r to avoid overlap","href":"transforms/dodge"},{"name":"dot","comment":"Returns a new dot mark for the given data and options that draws circles, or other symbols, as in a scatterplot","href":"marks/dot"},{"name":"dotX","comment":"Like dot, except that x defaults to the identity function, assuming that data = [x₀, x₁, x₂, …]","href":"marks/dot"},{"name":"dotY","comment":"Like dot, except that y defaults to the identity function, assuming that data = [y₀, y₁, y₂, …]","href":"marks/dot"},{"name":"filter","comment":"Applies a transform to options to filter the mark’s index according to the given test, which can be a function (receiving the datum d and index i) or a channel value definition such as a field name; only truthy values are retained in the index","href":"transforms/filter"},{"name":"find","comment":"Given the specified test function, returns a corresponding reducer implementation for use with the group or bin transform","href":"transforms/group"},{"name":"formatIsoDate","comment":"Given a date, returns the shortest equivalent ISO 8601 UTC string","href":"features/formats"},{"name":"formatMonth","comment":"Returns a function that formats a given month number (from 0 = January to 11 = December) according to the specified locale and format","href":"features/formats"},{"name":"formatWeekday","comment":"Returns a function that formats a given week day number (from 0 = Sunday to 6 = Saturday) according to the specified locale and format","href":"features/formats"},{"name":"frame","comment":"Draws a rectangle around the plot’s frame, or if an anchor is given, a line on the given side","href":"marks/frame"},{"name":"geo","comment":"Returns a new geo mark with the given data and options","href":"marks/geo"},{"name":"geoCentroid","comment":"Given a geometry input channel of spherical GeoJSON geometry, derives x and y output channels representing the spherical centroids of the geometry","href":"transforms/centroid"},{"name":"graticule","comment":"Returns a new geo mark whose data is a 10° global graticule","href":"marks/geo"},{"name":"gridFx","comment":"Returns a new horizontally-positioned ruleX mark (a vertical line, |) that renders a grid for the fx scale","href":"marks/grid"},{"name":"gridFy","comment":"Returns a new vertically-positioned ruleY mark (a horizontal line, —) that renders a grid for the fy scale","href":"marks/grid"},{"name":"gridX","comment":"Returns a new horizontally-positioned ruleX mark (a vertical line, |) that renders a grid for the x scale","href":"marks/grid"},{"name":"gridY","comment":"Returns a new vertically-positioned ruleY mark (a horizontal line, —) that renders a grid for the y scale","href":"marks/grid"},{"name":"group","comment":"Groups on the x and y channels; then subdivides groups on the first channel of z, fill, or stroke, if any; and then for each channel in the specified outputs, applies the corresponding reduce method to produce new channel values from the grouped input channel values","href":"transforms/group"},{"name":"groupX","comment":"Groups on the x channel; then subdivides groups on the first channel of z, fill, or stroke, if any; and then for each channel in the specified outputs, applies the corresponding reduce method to produce new channel values from the grouped input channel values","href":"transforms/group"},{"name":"groupY","comment":"Groups on the y channel; then subdivides groups on the first channel of z, fill, or stroke, if any; and then for each channel in the specified outputs, applies the corresponding reduce method to produce new channel values from the grouped input channel values","href":"transforms/group"},{"name":"groupZ","comment":"Groups on the first channel of z, fill, or stroke, if any, and then for each channel in the specified outputs, applies the corresponding reduce method to produce new channel values from the grouped input channel values","href":"transforms/group"},{"name":"hexagon","comment":"Like dot, except that the symbol option is set to hexagon","href":"marks/dot"},{"name":"hexbin","comment":"Bins hexagonally on the scaled x and y channels; then subdivides bins on the first channel of z, fill, or stroke, if any; and lastly for each channel in the specified outputs, applies the corresponding reduce method to produce new channel values from the binned input channel values","href":"transforms/hexbin"},{"name":"hexgrid","comment":"The hexgrid decoration mark complements the hexbin transform, showing the outlines of all hexagons spanning the frame with a default stroke of currentColor and a default strokeOpacity of 0.1, similar to the the default axis grids","href":"marks/hexgrid"},{"name":"hull","comment":"Returns a mark that draws a convex hull around the points given by the x and y channels","href":"marks/delaunay"},{"name":"identity","comment":"A channel transform that returns the data as-is, avoiding an extra copy when defining a channel as being equal to the data","href":"features/transforms"},{"name":"image","comment":"Returns a new image mark for the given data and options that draws images as in a scatterplot","href":"marks/image"},{"name":"indexOf","comment":"A channel transform that returns the zero-based index [0, 1, 2, …] of the data; often used as a default for mark shorthand","href":"features/transforms"},{"name":"initializer","comment":"Given an options object that may specify some basic initializers (filter, sort, or reverse) or a custom initializer, composes those initializers with the given initializer function, returning a new options object","href":"features/transforms"},{"name":"interpolateNearest","comment":"Assigns each pixel in the raster grid the value of the closest sample; effectively a Voronoi diagram","href":"marks/raster"},{"name":"interpolateNone","comment":"Applies a simple forward mapping of samples, binning them into pixels in the raster grid without any blending or interpolation","href":"marks/raster"},{"name":"interpolatorBarycentric","comment":"Constructs a Delaunay triangulation of the samples, and then for each pixel in the raster grid, determines the triangle that covers the pixel’s centroid and interpolates the values associated with the triangle’s vertices using barycentric coordinates","href":"marks/raster"},{"name":"interpolatorRandomWalk","comment":"For each pixel in the raster grid, initiates a random walk, stopping when either the walk is within a given distance (minDistance) of a sample or the maximum allowable number of steps (maxSteps) have been taken, and then assigning the current pixel the closest sample’s value","href":"marks/raster"},{"name":"legend","comment":"Generates a standalone legend for the scale defined by the given options, returning either an SVG or HTML element depending on the scale and the desired legend type","href":"features/legends"},{"name":"line","comment":"Returns a new line mark for the given data and options by connecting control points","href":"marks/line"},{"name":"lineX","comment":"Like line, except that x defaults to the identity function assuming that data = [x₀, x₁, x₂, …] and y defaults to the zero-based index [0, 1, 2, …]","href":"marks/line"},{"name":"lineY","comment":"Like line, except y defaults to the identity function and assumes that data = [y₀, y₁, y₂, …] and x defaults to the zero-based index [0, 1, 2, …]","href":"marks/line"},{"name":"linearRegressionX","comment":"Like linearRegressionY, but where x is the dependent variable and y is the independent variable","href":"marks/linear-regression"},{"name":"linearRegressionY","comment":"Returns a mark that draws linear regression lines with confidence bands, representing the estimated relation of a dependent variable (y) on an independent variable (x)","href":"marks/linear-regression"},{"name":"link","comment":"Returns a new link mark for the given data and options, drawing line segments (curves) connecting pairs of points","href":"marks/link"},{"name":"map","comment":"Groups on the first channel of z, fill, or stroke, if any, and then for each channel in the specified outputs, applies the corresponding map method to produce new channel values for each series","href":"transforms/map"},{"name":"mapX","comment":"Groups on the first channel of z, fill, or stroke, if any, and then applies the specified map method to each of the x, x1, and x2 channels in the specified options to produce new channel values for each series","href":"transforms/map"},{"name":"mapY","comment":"Groups on the first channel of z, fill, or stroke, if any, and then applies the specified map method to each of the y, y1, and y2 channels in the specified options to produce new channel values for each series","href":"transforms/map"},{"name":"marks","comment":"Given an array of marks, returns a compound mark; supports mark.plot shorthand","href":"features/marks"},{"name":"normalize","comment":"Given a normalize basis, returns a corresponding map implementation for use with the map transform, allowing the normalization of arbitrary channels instead of only x and y","href":"transforms/normalize"},{"name":"normalizeX","comment":"Groups data into series using the first channel of z, fill, or stroke (if any), then derives new x, x1, and x2 channels for each corresponding input channel by normalizing to the given basis","href":"transforms/normalize"},{"name":"normalizeY","comment":"Groups data into series using the first channel of z, fill, or stroke (if any), then derives new y, y1, and y2 channels for each corresponding input channel by normalizing to the given basis","href":"transforms/normalize"},{"name":"plot","comment":"Renders a new plot given the specified options and returns the corresponding SVG element, or an HTML figure element if a caption or legend is requested","href":"features/plots"},{"name":"pointer","comment":"Applies a render transform to the specified options to filter the mark index such that only the point closest to the pointer is rendered; the mark will re-render interactively in response to pointer events","href":"interactions/pointer"},{"name":"pointerX","comment":"Like the pointer transform, except the determination of the closest point considers mostly the x (horizontal↔︎) position; this should be used for plots where x is the dominant dimension, such as time in a time-series chart, the binned quantitative dimension in a histogram, or the categorical dimension of a bar chart","href":"interactions/pointer"},{"name":"pointerY","comment":"Like the pointer transform, except the determination of the closest point considers mostly the y (vertical↕︎) position; this should be used for plots where y is the dominant dimension, such as time in a time-series chart, the binned quantitative dimension in a histogram, or the categorical dimension of a bar chart","href":"interactions/pointer"},{"name":"raster","comment":"Returns a raster mark which renders a raster image from spatial samples","href":"marks/raster"},{"name":"rect","comment":"Returns a rect mark for the given data and options","href":"marks/rect"},{"name":"rectX","comment":"Like rect, but if neither x1 nor x2 is specified, an implicit stackX transform is applied to x, and if x is not specified, it defaults to the identity function, assuming that data is an array of numbers [x₀, x₁, x₂, …]","href":"marks/rect"},{"name":"rectY","comment":"Like rect, but if neither y1 nor y2 is specified, apply an implicit stackY transform is applied to y, and if y is not specified, it defaults to the identity function, assuming that data is an array of numbers [y₀, y₁, y₂, …]","href":"marks/rect"},{"name":"reverse","comment":"Applies a transform to options to reverse the order of the mark’s index, say for reverse input order","href":"transforms/sort"},{"name":"ruleX","comment":"Returns a new horizontally-positioned ruleX mark (a vertical line, |) for the given data and options","href":"marks/rule"},{"name":"ruleY","comment":"Returns a new vertically-positioned ruleY mark (a horizontal line, —) for the given data and options","href":"marks/rule"},{"name":"scale","comment":"Returns a standalone scale given the specified scale options, which must define exactly one named scale","href":"features/scales"},{"name":"select","comment":"Groups on the first channel of z, fill, or stroke, if any, and then selects points from each series based on the given selector","href":"transforms/select"},{"name":"selectFirst","comment":"Groups on the first channel of z, fill, or stroke, if any, and then selects the first point from each series in input order","href":"transforms/select"},{"name":"selectLast","comment":"Groups on the first channel of z, fill, or stroke, if any, and then selects the last point from each series in input order","href":"transforms/select"},{"name":"selectMaxX","comment":"Groups on the first channel of z, fill, or stroke, if any, and then selects the maximum point from each series based on x channel value","href":"transforms/select"},{"name":"selectMaxY","comment":"Groups on the first channel of z, fill, or stroke, if any, and then selects the maximum point from each series based on y channel value","href":"transforms/select"},{"name":"selectMinX","comment":"Groups on the first channel of z, fill, or stroke, if any, and then selects the minimum point from each series based on x channel value","href":"transforms/select"},{"name":"selectMinY","comment":"Groups on the first channel of z, fill, or stroke, if any, and then selects the minimum point from each series based on y channel value","href":"transforms/select"},{"name":"shiftX","comment":"Groups data into series using the first channel of z, fill, or stroke (if any), then derives x1 and x2 output channels by shifting the input x channel according to the specified interval","href":"transforms/shift"},{"name":"shuffle","comment":"Applies a transform to options to randomly shuffles the mark’s index","href":"transforms/sort"},{"name":"sort","comment":"Applies a transform to options to sort the mark’s index by the specified order","href":"transforms/sort"},{"name":"sphere","comment":"Returns a new geo mark whose data is the outline of the sphere on the projection’s plane","href":"marks/geo"},{"name":"spike","comment":"Like vector, but with default options suitable for drawing a spike map","href":"marks/vector"},{"name":"stackX","comment":"Transforms a length channel x into starting and ending position channels x1 and x2 by “stacking” elements that share a given y position","href":"transforms/stack"},{"name":"stackX1","comment":"Like stackX, but returns the starting position x1 as the x channel, for example to position a dot on the left-hand side of each element of a stack","href":"transforms/stack"},{"name":"stackX2","comment":"Like stackX, but returns the starting position x2 as the x channel, for example to position a dot on the right-hand side of each element of a stack","href":"transforms/stack"},{"name":"stackY","comment":"Transforms a length channel y into starting and ending position channels y1 and y2 by “stacking” elements that share a given x position","href":"transforms/stack"},{"name":"stackY1","comment":"Like stackY, but returns the starting position y1 as the y channel, for example to position a dot at the bottom of each element of a stack","href":"transforms/stack"},{"name":"stackY2","comment":"Like stackY, but returns the ending position y2 as the y channel, for example to position a dot at the top of each element of a stack","href":"transforms/stack"},{"name":"text","comment":"Returns a new text mark for the given data and options","href":"marks/text"},{"name":"textX","comment":"Like text, but x defaults to the identity function, assuming that data = [x₀, x₁, x₂, …]","href":"marks/text"},{"name":"textY","comment":"Like text, but y defaults to the identity function, assuming that data = [y₀, y₁, y₂, …]","href":"marks/text"},{"name":"tickX","comment":"Returns a new horizontally-positioned tickX mark (a vertical line, |) for the given data and options","href":"marks/tick"},{"name":"tickY","comment":"Returns a new vertically-positioned tickY mark (a horizontal line, —) for the given data and options","href":"marks/tick"},{"name":"tip","comment":"Returns a new tip mark for the given data and options","href":"marks/tip"},{"name":"transform","comment":"Given an options object that may specify some basic transforms (filter, sort, or reverse) or a custom transform, composes those transforms with the given transform function, returning a new options object","href":"features/transforms"},{"name":"tree","comment":"Returns a compound tree mark, with a link to display edges from parent to child, a dot to display nodes, and a text to display node labels","href":"marks/tree"},{"name":"treeLink","comment":"Populates the x1, y1, x2, and y2 channels, and applies the following defaults","href":"transforms/tree"},{"name":"treeNode","comment":"Populates the x and y channels with the positions for each node, and applies a default frameAnchor based on the specified treeAnchor","href":"transforms/tree"},{"name":"valueof","comment":"Given some data and a channel value definition (such as a field name or function accessor), returns an array of the specified type containing the corresponding values derived from data","href":"features/transforms"},{"name":"vector","comment":"Returns a new vector mark for the given data and options","href":"marks/vector"},{"name":"vectorX","comment":"Like vector, but x instead defaults to the identity function and y defaults to null, assuming that data is an array of numbers [x₀, x₁, x₂, …]","href":"marks/vector"},{"name":"vectorY","comment":"Like vector, but y instead defaults to the identity function and x defaults to null, assuming that data is an array of numbers [y₀, y₁, y₂, …]","href":"marks/vector"},{"name":"voronoi","comment":"Returns a mark that draws polygons for each cell of the Voronoi tesselation of the points given by the x and y channels","href":"marks/delaunay"},{"name":"voronoiMesh","comment":"Returns a mark that draws a mesh for the cell boundaries of the Voronoi tesselation of the points given by the x and y channels","href":"marks/delaunay"},{"name":"window","comment":"Given the specified window options, returns a corresponding map implementation for use with the map transform, allowing the window transform to be applied to arbitrary channels instead of only x and y","href":"transforms/window"},{"name":"windowX","comment":"Groups data into series using the first channel of z, fill, or stroke (if any), then derives new x, x1, and x2 channels by computing a moving window of channel values and deriving reduced values from the window","href":"transforms/window"},{"name":"windowY","comment":"Groups data into series using the first channel of z, fill, or stroke (if any), then derives new y, y1, and y2 channels by computing a moving window of channel values and deriving reduced values from the window","href":"transforms/window"}],"options":[["align",[{"name":"scale","href":"features/scales"}]],["anchor",[{"name":"bollinger map method","href":"marks/bollinger"},{"name":"dodge transform","href":"transforms/dodge"},{"name":"frame mark","href":"marks/frame"},{"name":"grid mark","href":"marks/axis"},{"name":"tip mark","href":"marks/tip"},{"name":"vector mark","href":"marks/vector"},{"name":"window transform","href":"transforms/window"}]],["ariaDescription",[{"name":"mark","href":"features/marks"},{"name":"plot","href":"features/plots"},{"name":"scale","href":"features/scales"}]],["ariaHidden",[{"name":"mark","href":"features/marks"}]],["ariaLabel",[{"name":"mark","href":"features/marks"},{"name":"plot","href":"features/plots"},{"name":"scale","href":"features/scales"}]],["aspectRatio",[{"name":"plot","href":"features/plots"}]],["axis",[{"name":"scale","href":"features/scales"}]],["bandwidth",[{"name":"density mark","href":"marks/density"}]],["base",[{"name":"scale","href":"features/scales"}]],["basis",[{"name":"normalize transform","href":"transforms/normalize"}]],["bend",[{"name":"arrow mark","href":"marks/arrow"}]],["binWidth",[{"name":"hexbin transform","href":"transforms/hexbin"},{"name":"hexgrid mark","href":"marks/hexgrid"}]],["blur",[{"name":"raster mark","href":"marks/raster"}]],["caption",[{"name":"plot","href":"features/plots"}]],["channels",[{"name":"mark","href":"features/marks"}]],["ci",[{"name":"linear regression mark","href":"marks/linear-regression"}]],["clamp",[{"name":"scale","href":"features/scales"}]],["className",[{"name":"legend","href":"features/legends"},{"name":"plot","href":"features/plots"}]],["clip",[{"name":"mark","href":"features/marks"},{"name":"plot","href":"features/plots"},{"name":"projection","href":"features/projections"}]],["color",[{"name":"auto mark","href":"marks/auto"},{"name":"bollinger mark","href":"marks/bollinger"},{"name":"crosshair mark","href":"interactions/crosshair"},{"name":"grid mark","href":"marks/axis"},{"name":"legend","href":"features/legends"},{"name":"plot","href":"features/plots"}]],["columns",[{"name":"legend","href":"features/legends"}]],["constant",[{"name":"scale","href":"features/scales"}]],["crossOrigin",[{"name":"image mark","href":"marks/image"}]],["cumulative",[{"name":"bin transform","href":"transforms/bin"}]],["curve",[{"name":"curve","href":"features/curves"},{"name":"link mark","href":"marks/link"}]],["data",[{"name":"group transform","href":"transforms/group"},{"name":"plot","href":"features/plots"}]],["delimiter",[{"name":"tree transform","href":"transforms/tree"}]],["document",[{"name":"plot","href":"features/plots"}]],["domain",[{"name":"bin transform","href":"transforms/bin"},{"name":"projection","href":"features/projections"},{"name":"scale","href":"features/scales"}]],["dot",[{"name":"tree mark","href":"marks/tree"}]],["dx",[{"name":"mark","href":"features/marks"}]],["dy",[{"name":"mark","href":"features/marks"}]],["exponent",[{"name":"scale","href":"features/scales"}]],["facet",[{"name":"mark","href":"features/marks"},{"name":"plot","href":"features/plots"}]],["facetAnchor",[{"name":"mark","href":"features/marks"}]],["figure",[{"name":"plot","href":"features/plots"}]],["fill",[{"name":"legend","href":"features/legends"},{"name":"mark","href":"features/marks"},{"name":"raster mark","href":"marks/raster"}]],["fillOpacity",[{"name":"difference mark","href":"marks/difference"},{"name":"legend","href":"features/legends"},{"name":"mark","href":"features/marks"},{"name":"raster mark","href":"marks/raster"}]],["filter",[{"name":"group transform","href":"transforms/group"},{"name":"mark","href":"features/marks"}]],["fontFamily",[{"name":"text mark","href":"marks/text"}]],["fontSize",[{"name":"text mark","href":"marks/text"}]],["fontStyle",[{"name":"text mark","href":"marks/text"}]],["fontVariant",[{"name":"legend","href":"features/legends"},{"name":"scale","href":"features/scales"},{"name":"text mark","href":"marks/text"}]],["fontWeight",[{"name":"text mark","href":"marks/text"}]],["format",[{"name":"tip mark","href":"marks/tip"}]],["frameAnchor",[{"name":"dot mark","href":"marks/dot"},{"name":"image mark","href":"marks/image"},{"name":"text mark","href":"marks/text"},{"name":"tip mark","href":"marks/tip"},{"name":"vector mark","href":"marks/vector"}]],["fx",[{"name":"auto mark","href":"marks/auto"},{"name":"mark","href":"features/marks"},{"name":"plot","href":"features/plots"}]],["fy",[{"name":"auto mark","href":"marks/auto"},{"name":"mark","href":"features/marks"},{"name":"plot","href":"features/plots"}]],["geometry",[{"name":"centroid transform","href":"transforms/centroid"},{"name":"geo mark","href":"marks/geo"}]],["grid",[{"name":"plot","href":"features/plots"},{"name":"scale","href":"features/scales"}]],["headAngle",[{"name":"arrow mark","href":"marks/arrow"}]],["headLength",[{"name":"arrow mark","href":"marks/arrow"}]],["height",[{"name":"image mark","href":"marks/image"},{"name":"legend","href":"features/legends"},{"name":"plot","href":"features/plots"},{"name":"raster mark","href":"marks/raster"}]],["href",[{"name":"mark","href":"features/marks"}]],["imageFilter",[{"name":"mark","href":"features/marks"}]],["imageRendering",[{"name":"image mark","href":"marks/image"},{"name":"raster mark","href":"marks/raster"}]],["initializer",[{"name":"mark","href":"features/marks"}]],["inset",[{"name":"arrow mark","href":"marks/arrow"},{"name":"inset","href":"features/scales"}]],["insetBottom",[{"name":"inset","href":"features/scales"}]],["insetEnd",[{"name":"arrow mark","href":"marks/arrow"}]],["insetLeft",[{"name":"inset","href":"features/scales"}]],["insetRight",[{"name":"inset","href":"features/scales"}]],["insetStart",[{"name":"arrow mark","href":"marks/arrow"}]],["insetTop",[{"name":"inset","href":"features/scales"}]],["interpolate",[{"name":"raster mark","href":"marks/raster"},{"name":"scale","href":"features/scales"}]],["interval",[{"name":"bar mark","href":"marks/bar"},{"name":"bin transform","href":"transforms/bin"},{"name":"contour mark","href":"marks/contour"},{"name":"dot mark","href":"marks/dot"},{"name":"rect mark","href":"marks/rect"},{"name":"rule mark","href":"marks/rule"},{"name":"scale","href":"features/scales"},{"name":"text mark","href":"marks/text"}]],["k",[{"name":"bollinger map method","href":"marks/bollinger"},{"name":"window transform","href":"transforms/window"}]],["label",[{"name":"legend","href":"features/legends"},{"name":"plot","href":"features/plots"},{"name":"scale","href":"features/scales"}]],["labelAnchor",[{"name":"scale","href":"features/scales"}]],["labelArrow",[{"name":"scale","href":"features/scales"}]],["labelOffset",[{"name":"scale","href":"features/scales"}]],["legend",[{"name":"legend","href":"features/legends"},{"name":"scale","href":"features/scales"}]],["length",[{"name":"plot","href":"features/plots"},{"name":"vector mark","href":"marks/vector"}]],["line",[{"name":"scale","href":"features/scales"}]],["lineAnchor",[{"name":"text mark","href":"marks/text"}]],["lineHeight",[{"name":"text mark","href":"marks/text"}]],["lineWidth",[{"name":"text mark","href":"marks/text"}]],["margin",[{"name":"mark","href":"features/marks"},{"name":"plot","href":"features/plots"}]],["marginBottom",[{"name":"legend","href":"features/legends"},{"name":"mark","href":"features/marks"},{"name":"plot","href":"features/plots"}]],["marginLeft",[{"name":"legend","href":"features/legends"},{"name":"mark","href":"features/marks"},{"name":"plot","href":"features/plots"}]],["marginRight",[{"name":"legend","href":"features/legends"},{"name":"mark","href":"features/marks"},{"name":"plot","href":"features/plots"}]],["marginTop",[{"name":"legend","href":"features/legends"},{"name":"mark","href":"features/marks"},{"name":"plot","href":"features/plots"}]],["mark",[{"name":"auto mark","href":"marks/auto"}]],["marker",[{"name":"marker","href":"features/markers"}]],["markerEnd",[{"name":"marker","href":"features/markers"}]],["markerMid",[{"name":"marker","href":"features/markers"}]],["markerStart",[{"name":"marker","href":"features/markers"}]],["marks",[{"name":"plot","href":"features/plots"}]],["maxRadius",[{"name":"crosshair mark","href":"interactions/crosshair"},{"name":"pointer","href":"interactions/pointer"}]],["mixBlendMode",[{"name":"mark","href":"features/marks"}]],["monospace",[{"name":"text mark","href":"marks/text"}]],["n",[{"name":"bollinger map method","href":"marks/bollinger"},{"name":"scale","href":"features/scales"}]],["negativeFill",[{"name":"difference mark","href":"marks/difference"}]],["negativeFillOpacity",[{"name":"difference mark","href":"marks/difference"}]],["nice",[{"name":"scale","href":"features/scales"}]],["offset",[{"name":"stack transform","href":"transforms/stack"}]],["opacity",[{"name":"crosshair mark","href":"interactions/crosshair"},{"name":"grid mark","href":"marks/axis"},{"name":"legend","href":"features/legends"},{"name":"mark","href":"features/marks"},{"name":"plot","href":"features/plots"}]],["order",[{"name":"stack transform","href":"transforms/stack"}]],["padding",[{"name":"dodge transform","href":"transforms/dodge"},{"name":"scale","href":"features/scales"}]],["paddingInner",[{"name":"scale","href":"features/scales"}]],["paddingOuter",[{"name":"scale","href":"features/scales"}]],["paintOrder",[{"name":"mark","href":"features/marks"}]],["parallels",[{"name":"projection","href":"features/projections"}]],["path",[{"name":"tree transform","href":"transforms/tree"}]],["pathFilter",[{"name":"tip mark","href":"marks/tip"}]],["percent",[{"name":"scale","href":"features/scales"}]],["pivot",[{"name":"scale","href":"features/scales"}]],["pixelSize",[{"name":"raster mark","href":"marks/raster"}]],["pointerEvents",[{"name":"mark","href":"features/marks"}]],["pointerSize",[{"name":"tip mark","href":"marks/tip"}]],["positiveFill",[{"name":"difference mark","href":"marks/difference"}]],["positiveFillOpacity",[{"name":"difference mark","href":"marks/difference"}]],["precision",[{"name":"linear regression mark","href":"marks/linear-regression"},{"name":"projection","href":"features/projections"}]],["preferredAnchor",[{"name":"tip mark","href":"marks/tip"}]],["preserveAspectRatio",[{"name":"image mark","href":"marks/image"}]],["projection",[{"name":"plot","href":"features/plots"}]],["px",[{"name":"pointer","href":"interactions/pointer"}]],["py",[{"name":"pointer","href":"interactions/pointer"}]],["r",[{"name":"dodge transform","href":"transforms/dodge"},{"name":"dot mark","href":"marks/dot"},{"name":"geo mark","href":"marks/geo"},{"name":"image mark","href":"marks/image"},{"name":"legend","href":"features/legends"},{"name":"plot","href":"features/plots"},{"name":"vector mark","href":"marks/vector"}]],["range",[{"name":"scale","href":"features/scales"}]],["reduce",[{"name":"area mark","href":"marks/area"},{"name":"line mark","href":"marks/line"},{"name":"linear regression mark","href":"marks/linear-regression"},{"name":"window transform","href":"transforms/window"}]],["render",[{"name":"mark","href":"features/marks"}]],["reverse",[{"name":"group transform","href":"transforms/group"},{"name":"mark","href":"features/marks"},{"name":"scale","href":"features/scales"},{"name":"stack transform","href":"transforms/stack"}]],["rotate",[{"name":"dot mark","href":"marks/dot"},{"name":"image mark","href":"marks/image"},{"name":"projection","href":"features/projections"},{"name":"text mark","href":"marks/text"},{"name":"vector mark","href":"marks/vector"}]],["round",[{"name":"legend","href":"features/legends"},{"name":"scale","href":"features/scales"}]],["ruleStroke",[{"name":"crosshair mark","href":"interactions/crosshair"}]],["ruleStrokeOpacity",[{"name":"crosshair mark","href":"interactions/crosshair"}]],["ruleStrokeWidth",[{"name":"crosshair mark","href":"interactions/crosshair"}]],["rx",[{"name":"rect mark","href":"marks/rect"}]],["ry",[{"name":"rect mark","href":"marks/rect"}]],["scheme",[{"name":"scale","href":"features/scales"}]],["shape",[{"name":"vector mark","href":"marks/vector"}]],["shapeRendering",[{"name":"mark","href":"features/marks"}]],["size",[{"name":"auto mark","href":"marks/auto"}]],["smooth",[{"name":"contour mark","href":"marks/contour"}]],["sort",[{"name":"group transform","href":"transforms/group"},{"name":"mark","href":"features/marks"}]],["src",[{"name":"image mark","href":"marks/image"}]],["strict",[{"name":"bollinger map method","href":"marks/bollinger"},{"name":"window transform","href":"transforms/window"}]],["stroke",[{"name":"legend","href":"features/legends"},{"name":"mark","href":"features/marks"}]],["strokeDasharray",[{"name":"mark","href":"features/marks"}]],["strokeDashoffset",[{"name":"mark","href":"features/marks"}]],["strokeLinecap",[{"name":"mark","href":"features/marks"}]],["strokeLinejoin",[{"name":"mark","href":"features/marks"}]],["strokeMiterlimit",[{"name":"mark","href":"features/marks"}]],["strokeOpacity",[{"name":"legend","href":"features/legends"},{"name":"mark","href":"features/marks"}]],["strokeWidth",[{"name":"legend","href":"features/legends"},{"name":"mark","href":"features/marks"}]],["style",[{"name":"legend","href":"features/legends"},{"name":"plot","href":"features/plots"}]],["subtitle",[{"name":"plot","href":"features/plots"}]],["swatchHeight",[{"name":"legend","href":"features/legends"}]],["swatchSize",[{"name":"legend","href":"features/legends"}]],["swatchWidth",[{"name":"legend","href":"features/legends"}]],["sweep",[{"name":"arrow mark","href":"marks/arrow"}]],["symbol",[{"name":"dot mark","href":"marks/dot"},{"name":"plot","href":"features/plots"}]],["symmetric",[{"name":"scale","href":"features/scales"}]],["target",[{"name":"mark","href":"features/marks"}]],["tension",[{"name":"curve","href":"features/curves"}]],["text",[{"name":"text mark","href":"marks/text"}]],["textAnchor",[{"name":"text mark","href":"marks/text"}]],["textFill",[{"name":"crosshair mark","href":"interactions/crosshair"}]],["textLayout",[{"name":"tree mark","href":"marks/tree"}]],["textOverflow",[{"name":"text mark","href":"marks/text"}]],["textPadding",[{"name":"tip mark","href":"marks/tip"}]],["textStroke",[{"name":"axis mark","href":"marks/axis"},{"name":"crosshair mark","href":"interactions/crosshair"},{"name":"tree mark","href":"marks/tree"}]],["textStrokeOpacity",[{"name":"axis mark","href":"marks/axis"},{"name":"crosshair mark","href":"interactions/crosshair"}]],["textStrokeWidth",[{"name":"axis mark","href":"marks/axis"},{"name":"crosshair mark","href":"interactions/crosshair"}]],["thresholds",[{"name":"bin transform","href":"transforms/bin"},{"name":"contour mark","href":"marks/contour"},{"name":"density mark","href":"marks/density"}]],["tickFormat",[{"name":"legend","href":"features/legends"},{"name":"scale","href":"features/scales"}]],["tickPadding",[{"name":"scale","href":"features/scales"}]],["tickRotate",[{"name":"scale","href":"features/scales"}]],["tickSize",[{"name":"legend","href":"features/legends"},{"name":"scale","href":"features/scales"}]],["tickSpacing",[{"name":"scale","href":"features/scales"}]],["ticks",[{"name":"legend","href":"features/legends"},{"name":"scale","href":"features/scales"}]],["tip",[{"name":"mark","href":"features/marks"}]],["title",[{"name":"mark","href":"features/marks"},{"name":"plot","href":"features/plots"}]],["transform",[{"name":"mark","href":"features/marks"},{"name":"scale","href":"features/scales"}]],["treeAnchor",[{"name":"tree transform","href":"transforms/tree"}]],["treeLayout",[{"name":"tree transform","href":"transforms/tree"}]],["treeSeparation",[{"name":"tree transform","href":"transforms/tree"}]],["treeSort",[{"name":"tree transform","href":"transforms/tree"}]],["type",[{"name":"projection","href":"features/projections"},{"name":"scale","href":"features/scales"}]],["unknown",[{"name":"scale","href":"features/scales"}]],["value",[{"name":"contour mark","href":"marks/contour"}]],["weight",[{"name":"density mark","href":"marks/density"}]],["width",[{"name":"image mark","href":"marks/image"},{"name":"legend","href":"features/legends"},{"name":"plot","href":"features/plots"},{"name":"raster mark","href":"marks/raster"}]],["x",[{"name":"area mark","href":"marks/area"},{"name":"arrow mark","href":"marks/arrow"},{"name":"auto mark","href":"marks/auto"},{"name":"bar mark","href":"marks/bar"},{"name":"cell mark","href":"marks/cell"},{"name":"crosshair mark","href":"interactions/crosshair"},{"name":"delaunay mark","href":"marks/delaunay"},{"name":"density mark","href":"marks/density"},{"name":"difference mark","href":"marks/difference"},{"name":"dodge transform","href":"transforms/dodge"},{"name":"dot mark","href":"marks/dot"},{"name":"image mark","href":"marks/image"},{"name":"line mark","href":"marks/line"},{"name":"linear regression mark","href":"marks/linear-regression"},{"name":"link mark","href":"marks/link"},{"name":"plot","href":"features/plots"},{"name":"pointer","href":"interactions/pointer"},{"name":"raster mark","href":"marks/raster"},{"name":"rect mark","href":"marks/rect"},{"name":"rule mark","href":"marks/rule"},{"name":"text mark","href":"marks/text"},{"name":"tick mark","href":"marks/tick"},{"name":"tip mark","href":"marks/tip"},{"name":"vector mark","href":"marks/vector"}]],["x1",[{"name":"area mark","href":"marks/area"},{"name":"arrow mark","href":"marks/arrow"},{"name":"bar mark","href":"marks/bar"},{"name":"difference mark","href":"marks/difference"},{"name":"link mark","href":"marks/link"},{"name":"pointer","href":"interactions/pointer"},{"name":"raster mark","href":"marks/raster"},{"name":"rect mark","href":"marks/rect"},{"name":"rule mark","href":"marks/rule"},{"name":"tip mark","href":"marks/tip"}]],["x2",[{"name":"area mark","href":"marks/area"},{"name":"arrow mark","href":"marks/arrow"},{"name":"bar mark","href":"marks/bar"},{"name":"difference mark","href":"marks/difference"},{"name":"link mark","href":"marks/link"},{"name":"pointer","href":"interactions/pointer"},{"name":"raster mark","href":"marks/raster"},{"name":"rect mark","href":"marks/rect"},{"name":"rule mark","href":"marks/rule"},{"name":"tip mark","href":"marks/tip"}]],["y",[{"name":"area mark","href":"marks/area"},{"name":"arrow mark","href":"marks/arrow"},{"name":"auto mark","href":"marks/auto"},{"name":"bar mark","href":"marks/bar"},{"name":"cell mark","href":"marks/cell"},{"name":"crosshair mark","href":"interactions/crosshair"},{"name":"delaunay mark","href":"marks/delaunay"},{"name":"density mark","href":"marks/density"},{"name":"difference mark","href":"marks/difference"},{"name":"dodge transform","href":"transforms/dodge"},{"name":"dot mark","href":"marks/dot"},{"name":"image mark","href":"marks/image"},{"name":"line mark","href":"marks/line"},{"name":"linear regression mark","href":"marks/linear-regression"},{"name":"link mark","href":"marks/link"},{"name":"plot","href":"features/plots"},{"name":"pointer","href":"interactions/pointer"},{"name":"raster mark","href":"marks/raster"},{"name":"rect mark","href":"marks/rect"},{"name":"rule mark","href":"marks/rule"},{"name":"text mark","href":"marks/text"},{"name":"tick mark","href":"marks/tick"},{"name":"tip mark","href":"marks/tip"},{"name":"vector mark","href":"marks/vector"}]],["y1",[{"name":"area mark","href":"marks/area"},{"name":"arrow mark","href":"marks/arrow"},{"name":"bar mark","href":"marks/bar"},{"name":"difference mark","href":"marks/difference"},{"name":"link mark","href":"marks/link"},{"name":"pointer","href":"interactions/pointer"},{"name":"raster mark","href":"marks/raster"},{"name":"rect mark","href":"marks/rect"},{"name":"rule mark","href":"marks/rule"},{"name":"tip mark","href":"marks/tip"}]],["y2",[{"name":"area mark","href":"marks/area"},{"name":"arrow mark","href":"marks/arrow"},{"name":"bar mark","href":"marks/bar"},{"name":"difference mark","href":"marks/difference"},{"name":"link mark","href":"marks/link"},{"name":"pointer","href":"interactions/pointer"},{"name":"raster mark","href":"marks/raster"},{"name":"rect mark","href":"marks/rect"},{"name":"rule mark","href":"marks/rule"},{"name":"tip mark","href":"marks/tip"}]],["z",[{"name":"area mark","href":"marks/area"},{"name":"bin transform","href":"transforms/bin"},{"name":"delaunay mark","href":"marks/delaunay"},{"name":"density mark","href":"marks/density"},{"name":"difference mark","href":"marks/difference"},{"name":"group transform","href":"transforms/group"},{"name":"hexbin transform","href":"transforms/hexbin"},{"name":"line mark","href":"marks/line"},{"name":"linear regression mark","href":"marks/linear-regression"},{"name":"map transform","href":"transforms/map"},{"name":"select transform","href":"transforms/select"},{"name":"stack transform","href":"transforms/stack"}]],["zero",[{"name":"scale","href":"features/scales"}]]]}'),y="_oneline_a22ah_3",x={oneline:y},v=e("h1",{id:"api-index",tabindex:"-1"},[n("API index "),e("a",{class:"header-anchor",href:"#api-index","aria-label":'Permalink to "API index"'},"​")],-1),b=e("h2",{id:"methods",tabindex:"-1"},[n("Methods "),e("a",{class:"header-anchor",href:"#methods","aria-label":'Permalink to "Methods"'},"​")],-1),w=["href"],z=e("h2",{id:"options",tabindex:"-1"},[n("Options "),e("a",{class:"header-anchor",href:"#options","aria-label":'Permalink to "Options"'},"​")],-1),R=["href"],L={key:0},j=JSON.parse('{"title":"API index","description":"","frontmatter":{},"headers":[],"relativePath":"api.md","filePath":"api.md"}'),Y={name:"api.md"},G=Object.assign(Y,{setup(_){return(c,S)=>(r(),a("div",null,[v,b,e("ul",{class:p(c.$style.oneline)},[(r(!0),a(i,null,f(h(l).methods,({name:t,href:s,comment:o})=>(r(),a("li",null,[e("span",null,[e("a",{href:`${s}#${t}`},m(t),9,w),n(" - "+m(o),1)])]))),256))],2),z,e("ul",null,[(r(!0),a(i,null,f(h(l).options,([t,s])=>(r(),a("li",null,[e("b",null,m(t),1),n(" - "),(r(!0),a(i,null,f(s,({name:o,href:d},k)=>(r(),a("span",null,[e("a",{href:d},m(o),9,R),k<s.length-1?(r(),a("span",L,", ")):g("",!0)]))),256))]))),256))])]))}}),X={$style:x},O=u(G,[["__cssModules",X]]);export{j as __pageData,O as default};
