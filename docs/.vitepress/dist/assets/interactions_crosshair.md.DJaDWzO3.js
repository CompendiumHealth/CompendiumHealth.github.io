import{e as h,v as o,a as d,aI as r,I as c}from"./chunks/theme.DAWdUpF4.js";import{a as p}from"./chunks/aapl.DY7i4a9z.js";import{p as t}from"./chunks/penguins.C-n8z74Q.js";import{G as k,c as g,q as i,a,L as e,s,a6 as l,o as m}from"./chunks/framework.Bev6ATEH.js";const u={id:"crosshair-mark",tabindex:"-1"},y=i("a",{class:"header-anchor",href:"#crosshair-mark","aria-label":'Permalink to "Crosshair mark <VersionBadge version="0.6.7" />"'},"​",-1),_=i("p",null,[a("The "),i("strong",null,"crosshair mark"),a(" shows the "),i("em",null,"x"),a(" (horizontal↔︎ position) and "),i("em",null,"y"),a(" (vertical↕︎ position) value of the point closest to the "),i("a",{href:"./pointer"},"pointer"),a(" on the bottom and left sides of the frame, respectively.")],-1),F=l(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-crosshair?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(penguins, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_length_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_depth_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">crosshair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(penguins, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_length_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_depth_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>For charts which have a “dominant” dimension, such as time in a time-series chart, use the crosshairX or crosshairY mark for the <a href="./pointer#pointerX">pointerX</a> or <a href="./pointer#pointerY">pointerY</a> transform as appropriate.</p>`,3),b=l(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-crosshairx?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(aapl, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Close&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">crosshairX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(aapl, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Close&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>If either <strong>x</strong> or <strong>y</strong> is not specified, the crosshair is one-dimensional.</p>`,3),f=l(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-one-dimensional-crosshair?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tickX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(penguins, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;body_mass_g&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">crosshairX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(penguins, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;body_mass_g&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>The <strong>color</strong> option sets the fill color of the text and the stroke color of the rule. This option can be specified as a channel to reinforce a color encoding.</p>`,3),C=l(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-color-crosshair?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(penguins, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_length_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_depth_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">crosshair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(penguins, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_length_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_depth_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, color: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, opacity: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>The crosshair mark does not currently support any format options; values are displayed with the default format. If you are interested in this feature, please upvote <a href="https://github.com/observablehq/plot/issues/1596" target="_blank" rel="noreferrer">#1596</a>. In the meantime, you can implement a custom crosshair using the <a href="./pointer">pointer transform</a> and a <a href="./../marks/text">text mark</a>.</p><h2 id="crosshair-options" tabindex="-1">Crosshair options <a class="header-anchor" href="#crosshair-options" aria-label="Permalink to &quot;Crosshair options&quot;">​</a></h2><p>The following options are supported:</p><ul><li><strong>x</strong> - the horizontal position; bound to the <em>x</em> scale</li><li><strong>y</strong> - the vertical position; bound to the <em>y</em> scale</li><li><strong>color</strong> - shorthand for setting both <strong>ruleStroke</strong> and <strong>textFill</strong></li><li><strong>opacity</strong> - shorthand for setting <strong>ruleStrokeOpacity</strong></li><li><strong>ruleStroke</strong> - the rule stroke color</li><li><strong>ruleStrokeOpacity</strong> - the rule stroke opacity; defaults to 0.2</li><li><strong>ruleStrokeWidth</strong> - the rule stroke width; defaults to 1</li><li><strong>textFill</strong> - the text fill color</li><li><strong>textFillOpacity</strong> - the text fill opacity</li><li><strong>textStroke</strong> - the text stroke color; defaults to <em>white</em> to improve legibility</li><li><strong>textStrokeOpacity</strong> - the text stroke opacity; defaults to 1</li><li><strong>textStrokeWidth</strong> - the text stroke width; defaults to 5</li><li><strong>maxRadius</strong> - the maximum pointing distance, in pixels; defaults to 40</li></ul><p>The crosshair mark supports faceting, but most other mark options are ignored.</p><h2 id="crosshair" tabindex="-1">crosshair(<em>data</em>, <em>options</em>) <a class="header-anchor" href="#crosshair" aria-label="Permalink to &quot;crosshair(*data*, *options*) {#crosshair}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">crosshair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;economy (mpg)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cylinders&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Returns a new crosshair for the given <em>data</em> and <em>options</em>, drawing horizontal and vertical rules. The corresponding <strong>x</strong> and <strong>y</strong> values are also drawn just outside the bottom and left sides of the frame, respectively, typically on top of the axes. If either <strong>x</strong> or <strong>y</strong> is not specified, the crosshair will be one-dimensional.</p><h2 id="crosshairX" tabindex="-1">crosshairX(<em>data</em>, <em>options</em>) <a class="header-anchor" href="#crosshairX" aria-label="Permalink to &quot;crosshairX(*data*, *options*) {#crosshairX}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">crosshairX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(aapl, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Close&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Like crosshair, but using <a href="./pointer#pointerX">pointerX</a> when <em>x</em> is the dominant dimension, like time in a time-series chart.</p><h2 id="crosshairY" tabindex="-1">crosshairY(<em>data</em>, <em>options</em>) <a class="header-anchor" href="#crosshairY" aria-label="Permalink to &quot;crosshairY(*data*, *options*) {#crosshairY}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">crosshairY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(aapl, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Close&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Like crosshair, but using <a href="./pointer#pointerY">pointerY</a> when <em>y</em> is the dominant dimension.</p>`,16),X=JSON.parse('{"title":"Crosshair mark","description":"","frontmatter":{},"headers":[],"relativePath":"interactions/crosshair.md","filePath":"interactions/crosshair.md"}'),v={name:"interactions/crosshair.md"},V=Object.assign(v,{setup(q){return(x,B)=>{const E=k("VersionBadge"),n=k("PlotRender");return m(),g("div",null,[i("h1",u,[a("Crosshair mark "),e(E,{version:"0.6.7"}),a(),y]),_,e(n,{defer:"",options:{marks:[h(s(t),{x:"culmen_length_mm",y:"culmen_depth_mm",stroke:"sex"}),o(s(t),{x:"culmen_length_mm",y:"culmen_depth_mm"})]}},null,8,["options"]),F,e(n,{defer:"",options:{marks:[d(s(p),{x:"Date",y:"Close"}),r(s(p),{x:"Date",y:"Close"})]}},null,8,["options"]),b,e(n,{defer:"",options:{marks:[c(s(t),{x:"body_mass_g"}),r(s(t),{x:"body_mass_g"})]}},null,8,["options"]),f,e(n,{defer:"",options:{marks:[h(s(t),{x:"culmen_length_mm",y:"culmen_depth_mm",stroke:"sex"}),o(s(t),{x:"culmen_length_mm",y:"culmen_depth_mm",color:"sex",opacity:.5})]}},null,8,["options"]),C])}}});export{X as __pageData,V as default};
