import{k as c,G as E,c as y,q as i,a,L as t,s,w as u,a9 as m,t as F,a6 as p,o as b}from"./chunks/framework.Bev6ATEH.js";import{e as l,bA as h,bB as _}from"./chunks/theme.DAWdUpF4.js";import{c as e}from"./chunks/cars.Do83JJ0T.js";import{p as o}from"./chunks/penguins.C-n8z74Q.js";const f={id:"linear-regression-mark",tabindex:"-1"},C=i("a",{class:"header-anchor",href:"#linear-regression-mark","aria-label":'Permalink to "Linear regression mark <VersionBadge version="0.5.1" />"'},"​",-1),q=i("p",null,[a("The "),i("strong",null,"linear regression"),a(" mark draws "),i("a",{href:"https://en.wikipedia.org/wiki/Linear_regression",target:"_blank",rel:"noreferrer"},"linear regression"),a(" lines with confidence bands, representing the estimated linear relation of a dependent variable (typically "),i("strong",null,"y"),a(") on an independent variable (typically "),i("strong",null,"x"),a("). Below we can see that, in this example dataset at least, the weight of a car is a good linear predictor of its power.")],-1),v=p(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-cars-linear-regression?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight (lb)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;power (hp)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linearRegressionY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight (lb)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;power (hp)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;red&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>A linear model posits that <em>y</em> is determined by an underlying affine function <em>y</em> = <em>a</em> ﹢ <em>b x</em>, where <em>a</em> is a constant (intercept of the line on the <em>y</em>-axis when <em>x</em> = 0) and <em>b</em> is the slope. Given a set of points in <strong>x</strong> and <strong>y</strong>, the linear regression method returns the most likely parameters <em>a</em> and <em>b</em> for the linear model, as well as a confidence band showing the range where these parameters lie with a certain probability, called <strong>ci</strong> (for confidence interval), which defaults to 0.95.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The regression line is fit using the <a href="https://en.wikipedia.org/wiki/Least_squares" target="_blank" rel="noreferrer">least squares</a> approach. See Torben Jansen’s <a href="https://observablehq.com/@toja/linear-regression-with-confidence-bands" target="_blank" rel="noreferrer">“Linear regression with confidence bands”</a> and <a href="https://stats.stackexchange.com/questions/101318/understanding-shape-and-calculation-of-confidence-bands-in-linear-regression" target="_blank" rel="noreferrer">this StatExchange question</a> for details.</p></div><p>Use the slider below to build a linear model from a subset of the data with <strong>m</strong> points. As you can see, the model gives a line as soon as two points are available, and gets more refined and stable as the size of the subset increases.</p>`,5),w={class:"label-input"},B=["max"],x={style:{"font-variant-numeric":"tabular-nums"}},T=p(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-linear-regression-confidence-band?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight (lb)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;power (hp)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;currentColor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fillOpacity: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">slice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, m), {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight (lb)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;power (hp)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linearRegressionY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">slice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, m), {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight (lb)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;power (hp)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;red&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>When operating on a subset of the data (the “training dataset”, in machine learning parlance), randomly shuffling the data can reduce bias.</p></div><p>This type of model is regularly criticized for pushing people to the wrong conclusions about their data when the actual underlying structure or process is nonlinear. For example, if you measure the relationship between culmen depth and length in a mixed population of penguins, it is positively correlated in each of the three species (bigger penguins with the longer culmens also tend to have the deeper ones); however, the Gentoo population has a smaller aspect ratio of depth against length, and the overall correlation across the three species is negative. This is called <a href="https://en.wikipedia.org/wiki/Simpson%27s_paradox" target="_blank" rel="noreferrer">Simpson’s paradox</a>, and it applies to any data that contains underlying populations with different properties or outcomes.</p>`,4),P=p(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-linear-regression-simpson?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  grid: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  color: {legend: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(penguins, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_length_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_depth_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;species&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linearRegressionY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(penguins, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_length_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_depth_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;species&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linearRegressionY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(penguins, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_length_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_depth_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Finally, note that regression is not a symmetric method: the model computed to express <em>y</em> as a function of <em>x</em> (linearRegressionY) doesn’t give the same result as the regression of <em>x</em> as a function of <em>y</em> (linearRegressionX) unless the points are all perfectly aligned. In the worst case, where the two variables are statistically independent, the linear regression of <em>y</em> against <em>x</em> is an horizontal line, whereas the linear regression of <em>x</em> against <em>y</em> is a vertical line.</p>`,3),R=p(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-linear-regression-is-not-symmetric?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight (lb)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;power (hp)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, strokeOpacity: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, r: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linearRegressionY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight (lb)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;power (hp)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;steelblue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linearRegressionX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cars, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight (lb)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;power (hp)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;orange&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="linear-regression-options" tabindex="-1">Linear regression options <a class="header-anchor" href="#linear-regression-options" aria-label="Permalink to &quot;Linear regression options&quot;">​</a></h2><p>The given <em>options</em> are passed through to these underlying marks, with the exception of the following options:</p><ul><li><strong>stroke</strong> - the stroke color of the regression line; defaults to <em>currentColor</em></li><li><strong>fill</strong> - the fill color of the confidence band; defaults to the line’s <em>stroke</em></li><li><strong>fillOpacity</strong> - the fill opacity of the confidence band; defaults to 0.1</li><li><strong>ci</strong> - the confidence interval in [0, 1), or 0 to hide bands; defaults to 0.95</li><li><strong>precision</strong> - the distance (in pixels) between samples of the confidence band; defaults to 4</li></ul><p>Multiple regressions can be defined by specifying <strong>z</strong>, <strong>fill</strong>, or <strong>stroke</strong>.</p><h2 id="linearRegressionX" tabindex="-1">linearRegressionX(<em>data</em>, <em>options</em>) <a class="header-anchor" href="#linearRegressionX" aria-label="Permalink to &quot;linearRegressionX(*data*, *options*) {#linearRegressionX}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linearRegressionX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mtcars, {y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Returns a linear regression mark where <strong>x</strong> is the dependent variable and <strong>y</strong> is the independent variable. (This is the uncommon orientation.)</p><h2 id="linearRegressionY" tabindex="-1">linearRegressionY(<em>data</em>, <em>options</em>) <a class="header-anchor" href="#linearRegressionY" aria-label="Permalink to &quot;linearRegressionY(*data*, *options*) {#linearRegressionY}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linearRegressionY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mtcars, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Returns a linear regression mark where <strong>y</strong> is the dependent variable and <strong>x</strong> is the independent variable. (This is the common orientation.)</p>`,12),N=JSON.parse('{"title":"Linear regression mark","description":"","frontmatter":{},"headers":[],"relativePath":"marks/linear-regression.md","filePath":"marks/linear-regression.md"}'),S={name:"marks/linear-regression.md"},L=Object.assign(S,{setup(O){const n=c(0);return(V,k)=>{const d=E("VersionBadge"),r=E("PlotRender");return b(),y("div",null,[i("h1",f,[a("Linear regression mark "),t(d,{version:"0.5.1"}),a(),C]),q,t(r,{options:{marks:[l(s(e),{x:"weight (lb)",y:"power (hp)"}),h(s(e),{x:"weight (lb)",y:"power (hp)",stroke:"var(--vp-c-red)"})]}},null,8,["options"]),v,i("p",null,[i("label",w,[a(" Number of points (m): "),u(i("input",{type:"range","onUpdate:modelValue":k[0]||(k[0]=g=>n.value=g),min:"0",max:s(e).length,step:"1"},null,8,B),[[m,n.value,void 0,{number:!0}]]),i("span",x,F(n.value.toLocaleString("en-US")),1)])]),t(r,{options:{marks:[l(s(e),{x:"weight (lb)",y:"power (hp)",fill:"currentColor",fillOpacity:.2}),l(s(e).slice(0,n.value),{x:"weight (lb)",y:"power (hp)"}),h(s(e).slice(0,n.value),{x:"weight (lb)",y:"power (hp)",stroke:"var(--vp-c-red)"})]}},null,8,["options"]),T,t(r,{options:{grid:!0,color:{legend:!0},marks:[l(s(o),{x:"culmen_length_mm",y:"culmen_depth_mm",fill:"species"}),h(s(o),{x:"culmen_length_mm",y:"culmen_depth_mm",stroke:"species"}),h(s(o),{x:"culmen_length_mm",y:"culmen_depth_mm"})]}},null,8,["options"]),P,t(r,{options:{marks:[l(s(e),{x:"weight (lb)",y:"power (hp)",strokeOpacity:.5,r:2}),h(s(e),{x:"weight (lb)",y:"power (hp)",stroke:"steelblue"}),_(s(e),{x:"weight (lb)",y:"power (hp)",stroke:"orange"})]}},null,8,["options"]),R])}}});export{N as __pageData,L as default};
