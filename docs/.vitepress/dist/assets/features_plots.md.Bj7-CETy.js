import{k as E,J as f,m as S,p as V,G as w,c as j,L as a,q as s,a as i,t as h,s as C,w as g,a9 as m,a8 as I,a6 as e,o as O}from"./chunks/framework.Bev6ATEH.js";import{c as v,b as B,f as c,t as P,a as F,w as A,x as q,e as R}from"./chunks/theme.DAWdUpF4.js";import{a as x}from"./chunks/alphabet.Chdqe_eo.js";const L=s("h1",{id:"plots",tabindex:"-1"},[i("Plots "),s("a",{class:"header-anchor",href:"#plots","aria-label":'Permalink to "Plots"'},"‚Äã")],-1),N=s("p",null,[i("To render a "),s("strong",null,"plot"),i(" in Observable Plot, call "),s("a",{href:"#plot"},"plot"),i(" (typically as "),s("code",null,"Plot.plot"),i("), passing in the desired "),s("em",null,"options"),i(". This function returns an SVG or HTML figure element.")],-1),Y=e(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-hello-world?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">frame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, world!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], {frameAnchor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;middle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The returned plot element is detached; it must be inserted into the page to be visible. For help, see the <a href="./../getting-started">getting started guide</a>.</p></div><h2 id="marks-option" tabindex="-1">Marks option <a class="header-anchor" href="#marks-option" aria-label="Permalink to &quot;Marks option&quot;">‚Äã</a></h2><p>The <strong>marks</strong> option specifies an array of <a href="./marks">marks</a> to render. Above, there are two marks: a <a href="./../marks/frame">frame</a> to draw the outline of the plot frame, and a <a href="./../marks/text">text</a> to say hello. üëã</p><p>Each mark supplies its own tabular data. For example, the table below shows the first five rows of a daily dataset of Apple stock price (<code>aapl</code>).</p><table><thead><tr><th>Date</th><th style="text-align:right;">Open</th><th style="text-align:right;">High</th><th style="text-align:right;">Low</th><th style="text-align:right;">Close</th><th style="text-align:right;">Volume</th></tr></thead><tbody><tr><td>2013-05-13</td><td style="text-align:right;">64.501427</td><td style="text-align:right;">65.414284</td><td style="text-align:right;">64.500000</td><td style="text-align:right;">64.962860</td><td style="text-align:right;">79237200</td></tr><tr><td>2013-05-14</td><td style="text-align:right;">64.835716</td><td style="text-align:right;">65.028572</td><td style="text-align:right;">63.164288</td><td style="text-align:right;">63.408573</td><td style="text-align:right;">111779500</td></tr><tr><td>2013-05-15</td><td style="text-align:right;">62.737144</td><td style="text-align:right;">63.000000</td><td style="text-align:right;">60.337143</td><td style="text-align:right;">61.264286</td><td style="text-align:right;">185403400</td></tr><tr><td>2013-05-16</td><td style="text-align:right;">60.462856</td><td style="text-align:right;">62.549999</td><td style="text-align:right;">59.842857</td><td style="text-align:right;">62.082859</td><td style="text-align:right;">150801000</td></tr><tr><td>2013-05-17</td><td style="text-align:right;">62.721428</td><td style="text-align:right;">62.869999</td><td style="text-align:right;">61.572857</td><td style="text-align:right;">61.894287</td><td style="text-align:right;">106976100</td></tr></tbody></table><p>In JavaScript, we can represent tabular data as an array of objects. Each object records a daily observation, with properties <em>Date</em>, <em>Open</em>, <em>High</em>, and so on. This is known as a ‚Äúrow-based‚Äù format since each object corresponds to a row in the table.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">aapl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {Date: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2013-05-13&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), Open: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64.501427</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, High: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">65.414284</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Low: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64.500000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Close: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64.962860</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Volume: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">79237200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {Date: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2013-05-14&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), Open: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64.835716</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, High: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">65.028572</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Low: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">63.164288</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Close: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">63.408573</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Volume: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">111779500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {Date: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2013-05-15&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), Open: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">62.737144</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, High: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">63.000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Low: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60.337143</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Close: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">61.264286</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Volume: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">185403400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {Date: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2013-05-16&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), Open: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60.462856</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, High: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">62.549999</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Low: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">59.842857</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Close: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">62.082859</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Volume: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">150801000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {Date: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2013-05-17&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), Open: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">62.721428</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, High: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">62.869999</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Low: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">61.572857</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Close: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">61.894287</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Volume: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">106976100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Rather than baking data into JavaScript, use <a href="https://en.wikipedia.org/wiki/JSON" target="_blank" rel="noreferrer">JSON</a> or <a href="https://en.wikipedia.org/wiki/Comma-separated_values" target="_blank" rel="noreferrer">CSV</a> files to store data. You can use <a href="https://d3js.org/d3-fetch#json" target="_blank" rel="noreferrer">d3.json</a>, <a href="https://d3js.org/d3-fetch#csv" target="_blank" rel="noreferrer">d3.csv</a>, or <a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API" target="_blank" rel="noreferrer">fetch</a> to load a file. On Observable, you can also use a <a href="https://observablehq.com/@observablehq/file-attachments" target="_blank" rel="noreferrer">file attachment</a> or <a href="https://observablehq.com/@observablehq/sql-cell" target="_blank" rel="noreferrer">SQL cell</a>.</p></div><p>To use data with Plot, pass the data as the first argument to the mark constructor. We can then assign columns of data such as <em>Date</em> and <em>Close</em> to visual properties of the mark (or ‚Äúchannels‚Äù) such as horizontal‚ÜîÔ∏é position <strong>x</strong> and vertical‚ÜïÔ∏é position <strong>y</strong>.</p>`,11),H=e(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-first-line-chart?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(aapl, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Close&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>A plot can have multiple marks, and each mark has its own data. For example, say we had a similar table <code>goog</code> representing the daily price of Google stock for the same period. Below, the <span style="border-bottom:solid 2px var(--vp-c-red);">red</span> line represents Google stock, while the <span style="border-bottom:solid 2px var(--vp-c-blue);">blue</span> line represents Apple stock.</p>`,3),M=e(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-layered-marks?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruleY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(goog, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Close&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;red&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(aapl, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Close&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;blue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>When comparing the performance of different stocks, we typically want to normalize the return relative to a purchase price. See the <a href="./../transforms/normalize">normalize transform</a> for an example.</p></div><p>Alternatively, the tables can be combined, say with a <em>Symbol</em> column to distinguish AAPL from GOOG. This allows the use of a categorical <em>color</em> scale and legend.</p>`,4),z=e(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-stocks-multiline-chart?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  color: {legend: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruleY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(stocks, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Close&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Symbol&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Each mark has its own options, and different mark types support different options. See the respective mark type (such as <a href="./../marks/bar">bar</a> or <a href="./../marks/dot">dot</a>) for details.</p>`,3),G=s("span",{style:{"border-bottom":"solid 2px var(--vp-c-green)"}},"green",-1),U={style:{"border-bottom":"solid 2px"}},W=e(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-marks-z-order?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  x: {padding: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">barY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alphabet, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;letter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;frequency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dx: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dy: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">barY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alphabet, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;letter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;frequency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;green&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dx: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dy: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="layout-options" tabindex="-1">Layout options <a class="header-anchor" href="#layout-options" aria-label="Permalink to &quot;Layout options&quot;">‚Äã</a></h2><p>The layout options determine the overall size of the plot; all are specified as numbers in pixels:</p><ul><li><strong>marginTop</strong> - the top margin</li><li><strong>marginRight</strong> - the right margin</li><li><strong>marginBottom</strong> - the bottom margin</li><li><strong>marginLeft</strong> - the left margin</li><li><strong>margin</strong> - shorthand for the four margins</li><li><strong>width</strong> - the outer width of the plot (including margins)</li><li><strong>height</strong> - the outer height of the plot (including margins)</li></ul><p>Experiment with the margins by adjusting the sliders below. Note that because the <em>x</em> scale is a <em>band</em> scale, the <strong>round</strong> option defaults to true, so the bars may jump when you adjust the horizontal margins to snap to crisp edges.</p>`,6),J={class:"label-input",style:{display:"flex"}},Q=s("span",{style:{display:"inline-block",width:"7em"}},"marginTop:",-1),$={style:{"font-variant-numeric":"tabular-nums"}},K={class:"label-input",style:{display:"flex"}},X=s("span",{style:{display:"inline-block",width:"7em"}},"marginRight:",-1),Z={style:{"font-variant-numeric":"tabular-nums"}},ss={class:"label-input",style:{display:"flex"}},is=s("span",{style:{display:"inline-block",width:"7em"}},"marginBottom:",-1),as={style:{"font-variant-numeric":"tabular-nums"}},ts={class:"label-input",style:{display:"flex"}},es=s("span",{style:{display:"inline-block",width:"7em"}},"marginLeft:",-1),ns={style:{"font-variant-numeric":"tabular-nums"}},ls=e(`<div style="display:none;"><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marginTop,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marginRight,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marginBottom,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marginLeft,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  grid: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">frame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;var(--vp-c-text-2)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      strokeOpacity: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      insetTop: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">marginTop,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      insetRight: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">marginRight,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      insetBottom: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">marginBottom,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      insetLeft: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">marginLeft,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">barY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alphabet, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;letter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;frequency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;green&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">frame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></div>`,1),hs={class:"language-js vp-adaptive-theme"},ps=s("button",{title:"Copy Code",class:"copy"},null,-1),os=s("span",{class:"lang"},"js",-1),rs={class:"shiki shiki-themes github-light github-dark vp-code"},ks=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"Plot."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"plot"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({")],-1),ds={class:"line"},Es={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},gs={class:"line"},cs={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},ys={class:"line"},us={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},ms={class:"line"},Fs={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},bs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  grid: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")],-1),_s=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  marks: [")],-1),fs=e('<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">barY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alphabet, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;letter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;frequency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;green&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>',1),Cs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    Plot."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"frame"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")],-1),vs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  ]")],-1),Bs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"})")],-1),qs=e('<div class="info custom-block"><p class="custom-block-title">INFO</p><p>To assist the explanation, the plot above is drawn with a light gray border.</p></div><p>The default <strong>width</strong> is 640. On Observable, the width can be set to the <a href="https://github.com/observablehq/stdlib/blob/main/README.md#width" target="_blank" rel="noreferrer">standard width</a> to make responsive plots. The default <strong>height</strong> is chosen automatically based on the plot‚Äôs associated scales; for example, if <em>y</em> is linear and there is no <em>fy</em> scale, it might be 396. The default margins depend on the maximum margins of the plot‚Äôs constituent <a href="#marks-option">marks</a>. While most marks default to zero margins (because they are drawn inside the chart area), Plot‚Äôs <a href="./../marks/axis">axis mark</a> has non-zero default margins.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Plot does not adjust margins automatically to make room for long tick labels. If your <em>y</em> axis labels are too long, you can increase the <strong>marginLeft</strong> to make more room. Also consider using a different <strong>tickFormat</strong> for short labels (<em>e.g.</em>, <code>s</code> for SI prefix notation), or a scale <strong>transform</strong> (say to convert units to millions or billions).</p></div>',3),xs=s("strong",null,"aspectRatio",-1),Ts=s("a",{id:"aspectRatio",class:"header-anchor",href:"#aspectRatio","aria-label":'Permalink to "aspectRatio"'},null,-1),ws=s("strong",null,"height",-1),Ps=s("em",null,"x",-1),As=s("em",null,"y",-1),Ds={class:"label-input"},Ss=e(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-intro-to-aspectratio?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  grid: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  inset: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  aspectRatio: fixed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  color: {legend: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">frame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(penguins, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_length_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;culmen_depth_mm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;species&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>When using facets, set the <em>fx</em> and <em>fy</em> scales‚Äô <strong>round</strong> option to false if you need an exact aspect ratio.</p></div><h2 id="other-options" tabindex="-1">Other options <a class="header-anchor" href="#other-options" aria-label="Permalink to &quot;Other options&quot;">‚Äã</a></h2>`,4),Vs=s("a",{href:"#plot"},"plot",-1),js=s("a",{href:"./legends"},"legend",-1),Is=s("strong",null,"figure",-1),Os=s("strong",null,"title",-1),Rs=s("strong",null,"subtitle",-1),Ls=s("strong",null,"caption",-1),Ns=s("a",{href:"http://github.com/observablehq/htl",target:"_blank",rel:"noreferrer"},[s("code",null,"html"),i(" tagged template literal")],-1),Ys=e(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-caption?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;For charts, an informative title&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  subtitle: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Subtitle to follow with additional context&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  caption: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Figure 1. A chart with a title, subtitle, and caption.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">frame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Titles, subtitles, captions, and annotations assist inter¬≠pretation by telling the reader what‚Äôs interesting. Don‚Äôt make the reader work to find what you already know.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], {lineWidth: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, frameAnchor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;middle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>The <strong>style</strong> option allows custom styles to override Plot‚Äôs defaults. It may be specified either as a string of inline styles (<em>e.g.</em>, <code>&quot;color: red;&quot;</code>, in the same fashion as assigning <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style" target="_blank" rel="noreferrer"><em>element</em>.style</a>) or an object of properties (<em>e.g.</em>, <code>{color: &quot;red&quot;}</code>, in the same fashion as assigning <a href="https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration" target="_blank" rel="noreferrer"><em>element</em>.style properties</a>). By default, the returned plot has a max-width of 100%, and the system-ui font. Plot‚Äôs marks and axes default to <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#currentcolor_keyword" target="_blank" rel="noreferrer">currentColor</a>, meaning that they will inherit the surrounding content‚Äôs color.</p><div class="warning custom-block"><p class="custom-block-title">CAUTION</p><p>Unitless numbers (<a href="https://www.w3.org/TR/css-values-4/#deprecated-quirky-length" target="_blank" rel="noreferrer">quirky lengths</a>) such as <code>{padding: 20}</code> are not supported by some browsers; you should instead specify a string with units such as <code>{padding: &quot;20px&quot;}</code>.</p></div><p>The generated SVG element has a class name which applies a default stylesheet. Use the top-level <strong>className</strong> option to specify that class name.</p>`,5),Hs=s("strong",null,"clip",-1),Ms=s("a",{href:"./marks#mark-options"},[i("mark "),s("strong",null,"clip"),i(" option")],-1),zs=s("a",{href:"./../marks/axis"},"axis",-1),Gs=s("a",{href:"./../marks/grid"},"grid",-1),Us=s("a",{href:"./../marks/frame"},"frame",-1),Ws=s("strong",null,"clip",-1),Js=e(`<p>The <strong>document</strong> option specifies the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document" target="_blank" rel="noreferrer">document</a> used to create plot elements. It defaults to window.document, but can be changed to another document, say when using a virtual DOM implementation for server-side rendering in Node.</p><h2 id="plot" tabindex="-1">plot(<em>options</em>) <a class="header-anchor" href="#plot" aria-label="Permalink to &quot;plot(*options*) {#plot}&quot;">‚Äã</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">barY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alphabet, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;letter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;frequency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Renders a new plot with the specified <em>options</em>, returning a SVG or HTML figure element. This element can then be inserted into the page as described in the <a href="./../getting-started">getting started guide</a>.</p><h2 id="mark_plot" tabindex="-1"><em>mark</em>.plot(<em>options</em>) <a class="header-anchor" href="#mark_plot" aria-label="Permalink to &quot;*mark*.plot(*options*) {#mark_plot}&quot;">‚Äã</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">barY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alphabet, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;letter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;frequency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Given a <a href="./marks"><em>mark</em></a>, this is a convenience shorthand for calling <a href="#plot">plot</a> where the <strong>marks</strong> option includes this <em>mark</em>. Any additional <strong>marks</strong> in <em>options</em> are drawn on top of this <em>mark</em>.</p><h2 id="plot_scale" tabindex="-1"><em>plot</em>.scale(<em>name</em>) <a class="header-anchor" href="#plot_scale" aria-label="Permalink to &quot;*plot*.scale(*name*) {#plot_scale}&quot;">‚Äã</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// render a plot</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;color&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// get the color scale</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(color.range); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// inspect the scale‚Äôs range</span></span></code></pre></div><p>Returns the <a href="./scales#scale-options">scale object</a> for the scale with the specified <em>name</em> (such as <em>x</em> or <em>color</em>) on the given <em>plot</em>, where <em>plot</em> is a rendered plot element returned by <a href="#plot">plot</a>. If the associated <em>plot</em> has no scale with the given <em>name</em>, returns undefined.</p><h2 id="plot_legend" tabindex="-1"><em>plot</em>.legend(<em>name</em>, <em>options</em>) <a class="header-anchor" href="#plot_legend" aria-label="Permalink to &quot;*plot*.legend(*name*, *options*) {#plot_legend}&quot;">‚Äã</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// render a plot</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> legend</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">legend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;color&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// render a color legend</span></span></code></pre></div><p>Renders a standalone legend for the scale with the specified <em>name</em> (such as <em>x</em> or <em>color</em>) on the given <em>plot</em>, where <em>plot</em> is a rendered plot element returned by <a href="#plot">plot</a>, returning a SVG or HTML figure element. This element can then be inserted into the page as described in the <a href="./../getting-started">getting started guide</a>. If the associated <em>plot</em> has no scale with the given <em>name</em>, returns undefined. Legends are currently only supported for <em>color</em>, <em>opacity</em>, and <em>symbol</em> scales.</p>`,13),si=JSON.parse('{"title":"Plots","description":"","frontmatter":{},"headers":[],"relativePath":"features/plots.md","filePath":"features/plots.md"}'),Qs={name:"features/plots.md"},ii=Object.assign(Qs,{setup($s){const o=E(20),r=E(20),k=E(30),d=E(40),b=E(!0),y=f([]),_=f([]),T=f([]),D=S(()=>[...y.value.map(t=>({...t,Symbol:"AAPL"})),..._.value.map(t=>({...t,Symbol:"GOOG"}))]);return V(()=>{v("../data/aapl.csv",B).then(t=>y.value=t),v("../data/goog.csv",B).then(t=>_.value=t),v("../data/penguins.csv",B).then(t=>T.value=t)}),(t,n)=>{const p=w("PlotRender"),u=w("VersionBadge");return O(),j("div",null,[L,N,a(p,{options:{marks:[c(),P(["Hello, world!"],{frameAnchor:"middle"})]}},null,8,["options"]),Y,a(p,{defer:"",options:{marks:[F(y.value,{x:"Date",y:"Close"})]}},null,8,["options"]),H,a(p,{defer:"",options:{marks:[A([0]),F(_.value,{x:"Date",y:"Close",stroke:"var(--vp-c-red)"}),F(y.value,{x:"Date",y:"Close",stroke:"var(--vp-c-blue)"})]}},null,8,["options"]),M,a(p,{defer:"",options:{color:{legend:!0},marks:[A([0]),F(D.value,{x:"Date",y:"Close",stroke:"Symbol"})]}},null,8,["options"]),z,s("p",null,[i("Marks are drawn in the given order, with the last mark drawn on top. For example, below "),G,i(" bars are drawn on top of "),s("span",U,h(t.$dark?"white":"black"),1),i(" bars.")]),a(p,{options:{x:{padding:.4},marks:[q(C(x),{x:"letter",y:"frequency",dx:2,dy:2}),q(C(x),{x:"letter",y:"frequency",fill:"var(--vp-c-green)",dx:-2,dy:-2})]}},null,8,["options"]),W,s("p",null,[s("label",J,[Q,g(s("input",{type:"range","onUpdate:modelValue":n[0]||(n[0]=l=>o.value=l),min:"0",max:"60",step:"1"},null,512),[[m,o.value,void 0,{number:!0}]]),s("span",$,h(o.value),1)]),s("label",K,[X,g(s("input",{type:"range","onUpdate:modelValue":n[1]||(n[1]=l=>r.value=l),min:"0",max:"60",step:"1"},null,512),[[m,r.value,void 0,{number:!0}]]),s("span",Z,h(r.value),1)]),s("label",ss,[is,g(s("input",{type:"range","onUpdate:modelValue":n[2]||(n[2]=l=>k.value=l),min:"0",max:"60",step:"1"},null,512),[[m,k.value,void 0,{number:!0}]]),s("span",as,h(k.value),1)]),s("label",ts,[es,g(s("input",{type:"range","onUpdate:modelValue":n[3]||(n[3]=l=>d.value=l),min:"0",max:"60",step:"1"},null,512),[[m,d.value,void 0,{number:!0}]]),s("span",ns,h(d.value),1)])]),a(p,{defer:"",options:{marginTop:o.value,marginRight:r.value,marginBottom:k.value,marginLeft:d.value,grid:!0,marks:[c({stroke:"var(--vp-c-text-2)",strokeOpacity:.5,insetTop:-o.value,insetRight:-r.value,insetBottom:-k.value,insetLeft:-d.value}),q(C(x),{x:"letter",y:"frequency",fill:"var(--vp-c-green)"}),c()]}},null,8,["options"]),ls,s("div",hs,[ps,os,s("pre",rs,[s("code",null,[ks,i(`
`),s("span",ds,[s("span",Es,"  marginTop: "+h(o.value)+",",1)]),i(`
`),s("span",gs,[s("span",cs,"  marginRight: "+h(r.value)+",",1)]),i(`
`),s("span",ys,[s("span",us,"  marginBottom: "+h(k.value)+",",1)]),i(`
`),s("span",ms,[s("span",Fs,"  marginLeft: "+h(d.value)+",",1)]),i(`
`),bs,i(`
`),_s,i(`
`),fs,i(`
`),Cs,i(`
`),vs,i(`
`),Bs])])]),qs,s("p",null,[i("The "),xs,i(" option"),Ts,i(),a(u,{version:"0.6.4"}),i(", if not null, computes a default "),ws,i(" such that a variation of one unit in the "),Ps,i(" dimension is represented by the corresponding number of pixels as a variation in the "),As,i(" dimension of one unit.")]),s("p",null,[s("label",Ds,[i(" Use fixed aspect ratio: "),g(s("input",{type:"checkbox","onUpdate:modelValue":n[4]||(n[4]=l=>b.value=l)},null,512),[[I,b.value]])])]),a(p,{defer:"",options:{grid:!0,inset:10,aspectRatio:b.value?1:void 0,color:{legend:!0},marks:[c(),R(T.value,{x:"culmen_length_mm",y:"culmen_depth_mm",stroke:"species"})]}},null,8,["options"]),Ss,s("p",null,[i("By default, "),Vs,i(" returns an SVG element; however, if the plot includes a title, subtitle, "),js,i(", or caption, plot wraps the SVG element with an HTML figure element. You can also force Plot to generate a figure element by setting the "),Is,i(" option "),a(u,{version:"0.6.10",pr:"1761"}),i(" to true.")]),s("p",null,[i("The "),Os,i(" & "),Rs,i(" options "),a(u,{version:"0.6.10",pr:"1761"}),i(" and the "),Ls,i(" option accept either a string or an HTML element. If given an HTML element, say using the "),Ns,i(", the title and subtitle are used as-is while the caption is wrapped in a figcaption element; otherwise, the specified text will be escaped and wrapped in an h2, h3, or figcaption, respectively.")]),a(p,{options:{title:"For charts, an informative title",subtitle:"Subtitle to follow with additional context",caption:"Figure 1. A chart with a title, subtitle, and caption.",marks:[c(),P(["Titles, subtitles, captions, and annotations assist inter¬≠pretation by telling the reader what‚Äôs interesting. Don‚Äôt make the reader work to find what you already know."],{lineWidth:30,frameAnchor:"middle"})]}},null,8,["options"]),Ys,s("p",null,[i("The "),Hs,i(" option "),a(u,{version:"0.6.10",pr:"1792"}),i(" determines the default clipping behavior if the "),Ms,i(" is not specified; set it to true to enable clipping. This option does not affect "),zs,i(", "),Gs,i(", and "),Us,i(" marks, whose "),Ws,i(" option defaults to false.")]),Js])}}});export{si as __pageData,ii as default};
