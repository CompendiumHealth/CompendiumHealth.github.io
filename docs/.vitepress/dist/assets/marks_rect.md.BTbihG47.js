import{aG as x,r as m,aH as _,l as C,c as o,b as E,z as T,bG as c,y as l,M as d,w as g,bn as P,b0 as A,q as w,bH as S}from"./chunks/theme.DAWdUpF4.js";import{f as D}from"./chunks/feature.DXDMwmIR.js";import{J as p,m as b,p as j,G as I,c as Y,L as h,s as R,q as s,a as i,t as f,a6 as t,o as V}from"./chunks/framework.Bev6ATEH.js";const N=t('<h1 id="rect-mark" tabindex="-1">Rect mark <a class="header-anchor" href="#rect-mark" aria-label="Permalink to &quot;Rect mark&quot;">​</a></h1><p>The <strong>rect mark</strong> draws axis-aligned rectangles defined by <strong>x1</strong>, <strong>y1</strong>, <strong>x2</strong>, and <strong>y2</strong>. For example, here we display geographic bounding boxes of U.S. counties represented as [<em>x1</em>, <em>y1</em>, <em>x2</em>, <em>y2</em>] tuples, where <em>x1</em> &amp; <em>x2</em> are degrees longitude and <em>y1</em> &amp; <em>y2</em> are degrees latitude.</p>',2),O=t(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-county-boxes?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  projection: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;albers-usa&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(countyboxes, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      x1: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// or ([x1]) =&gt; x1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      y1: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// or ([, y1]) =&gt; y1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      x2: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// or ([,, x2]) =&gt; x2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      y2: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// or ([,,, y2]) =&gt; y2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;currentColor&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>More commonly, the rect mark is used to produce histograms or heatmaps of quantitative data. For example, given some binned observations computed by <a href="https://d3js.org/d3-array/bin" target="_blank" rel="noreferrer">d3.bin</a>, we can produce a basic histogram with <a href="#rectY">rectY</a> as follows:</p>`,3),X=t('<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-rects-and-bins?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rectY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bins, {x1: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;x0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x2: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;x1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;length&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({round: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bins </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d3.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()(d3.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d3.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">randomNormal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()))</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>d3.bin uses <em>x0</em> and <em>x1</em> to represent the lower and upper bound of each bin, whereas the rect mark uses <strong>x1</strong> and <strong>x2</strong>. The <em>length</em> field is the count of values in each bin, which is encoded as <strong>y</strong>.</p></div><p>Most often, the rect mark is paired with the <a href="./../transforms/bin">bin transform</a> to bin quantitative values as part of the plot itself. As an added bonus, this sets default <a href="./../features/marks#mark-options">inset options</a> for a 1px gap separating adjacent rects, improving readability.</p>',5),M=t('<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-rects-and-bins?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rectY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d3.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d3.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">randomNormal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()), Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">binX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Like the <a href="./bar">bar mark</a>, the rect mark has two convenience constructors for common orientations: <a href="#rectX">rectX</a> is for horizontal→ rects and applies an implicit <a href="./../transforms/stack#stackX">stackX transform</a>, while <a href="#rectY">rectY</a> is for vertical↑ rects and applies an implicit <a href="./../transforms/stack#stackY">stackY transform</a>.</p>',3),$=t(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-vertical-histogram?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  color: {legend: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rectY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(olympians, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">binX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruleY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>For overlapping rects, you can opt-out of the implicit stack transform by specifying either <strong>x1</strong> or <strong>x2</strong> for rectX, and likewise either <strong>y1</strong> or <strong>y2</strong> for rectY.</p>`,3),U=s("a",{class:"plot-fork no-icon",href:"https://observablehq.com/@observablehq/plot-overlapping-histogram?intent=fork",target:"_blank",title:"Open on Observable"},"Fork",-1),H={class:"language-js vp-adaptive-theme"},z=s("button",{title:"Copy Code",class:"copy"},null,-1),L=s("span",{class:"lang"},"js",-1),G={class:"shiki shiki-themes github-light github-dark vp-code"},J=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"Plot."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"plot"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({")],-1),W=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  round: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")],-1),K=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  color: {legend: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"},")],-1),Q=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  marks: [")],-1),Z={class:"line"},ss=t('<span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rectY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(olympians, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">binX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({y2: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mixBlendMode: </span>',11),is={style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},as=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"})),",-1),ts=t('<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruleY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>',1),ns=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  ]")],-1),es=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"})")],-1),hs=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"CAUTION"),s("p",null,[i("While the "),s("strong",null,"mixBlendMode"),i(" option is useful for mitigating occlusion, it can be slow to render if there are many elements. More than two overlapping histograms may also be hard to read.")])],-1),ls=s("p",null,[i("The rect mark and bin transform naturally support "),s("a",{href:"./../features/facets"},"faceting"),i(", too.")],-1),ps=t(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-overlapping-histogram?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rectY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(olympians, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">binX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fy: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruleY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>The <a href="#rect">rect constructor</a>, again with the <a href="./../transforms/bin">bin transform</a>, can produce two-dimensional histograms (heatmaps) where density is represented by the <strong>fill</strong> color encoding.</p>`,3),ks=s("a",{class:"plot-fork no-icon",href:"https://observablehq.com/@observablehq/plot-continuous-dimensions-heatmap?intent=fork",target:"_blank",title:"Open on Observable"},"Fork",-1),rs={class:"language-js vp-adaptive-theme"},os=s("button",{title:"Copy Code",class:"copy"},null,-1),Es=s("span",{class:"lang"},"js",-1),ds={class:"shiki shiki-themes github-light github-dark vp-code"},gs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"Plot."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"plot"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({")],-1),cs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  height: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"640"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")],-1),ys=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  marginLeft: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"60"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")],-1),us=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  color: {")],-1),Fs={class:"line"},ms=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    scheme: ",-1),_s={style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},Cs=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",",-1),bs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    type: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"symlog"')],-1),fs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  },")],-1),vs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  marks: [")],-1),Bs=t('<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(diamonds, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;carat&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;price&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, thresholds: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>',1),qs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  ]")],-1),xs=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"})")],-1),Ts=t('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>A similar plot can be made with the <a href="./dot">dot mark</a>, if you’d prefer a size encoding.</p></div><p>Below we recreate an uncommon <a href="https://ourworldindata.org/poverty-minimum-growth-needed" target="_blank" rel="noreferrer">chart by Max Roser</a> that visualizes global poverty. Each rect represents a country: <em>x</em> encodes the country’s population, while <em>y</em> encodes the proportion of that population living in poverty; hence area represents the number of people living in poverty. Rects are <a href="./../transforms/stack">stacked</a> along <em>x</em> in order of descending <em>y</em>.</p>',2),Ps=t(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-cumulative-distribution-of-poverty?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  x: {label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Population (millions)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  y: {percent: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Proportion living on less than $30 per day (%)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rectY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(povcalnet, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stackX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;N&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">includes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d.CoverageType),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ReqYearPopulation&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      order: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;HeadCount&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      reverse: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      y2: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;HeadCount&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// y2 to avoid stacking by y</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CountryName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HeadCount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toFixed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}%\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      insetLeft: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      insetRight: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruleY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>The <a href="./../transforms/interval">interval transform</a> may be used to convert a single value in <strong>x</strong> or <strong>y</strong> (or both) into an extent. For example, the chart below shows the observed daily maximum temperature in Seattle for the year 2015. The day-in-month and month-in-year numbers are expanded to unit intervals by setting the <strong>interval</strong> option to 1.</p>`,3),As=t(`<a class="plot-fork no-icon" href="https://observablehq.com/@observablehq/plot-seattle-heatmap-quantitative?intent=fork" target="_blank" title="Open on Observable">Fork</a><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  aspectRatio: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  y: {ticks: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tickFormat: Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">formatMonth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;en&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;narrow&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  marks: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(seattle, {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d.date.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUTCFullYear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2015</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d.date.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUTCDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d.date.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUTCMonth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      interval: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;temp_max&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      inset: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>A similar chart could be made with the <a href="./cell">cell mark</a> using ordinal <em>x</em> and <em>y</em> scales instead, or with the <a href="./dot">dot mark</a> as a scatterplot.</p></div><h2 id="rect-options" tabindex="-1">Rect options <a class="header-anchor" href="#rect-options" aria-label="Permalink to &quot;Rect options&quot;">​</a></h2><p>The following channels are optional:</p><ul><li><strong>x1</strong> - the starting horizontal position; bound to the <em>x</em> scale</li><li><strong>y1</strong> - the starting vertical position; bound to the <em>y</em> scale</li><li><strong>x2</strong> - the ending horizontal position; bound to the <em>x</em> scale</li><li><strong>y2</strong> - the ending vertical position; bound to the <em>y</em> scale</li></ul><p>If <strong>x1</strong> is specified but <strong>x2</strong> is not specified, then <em>x</em> must be a <em>band</em> scale; if <strong>y1</strong> is specified but <strong>y2</strong> is not specified, then <em>y</em> must be a <em>band</em> scale.</p><p>If an <strong>interval</strong> is specified, such as d3.utcDay, <strong>x1</strong> and <strong>x2</strong> can be derived from <strong>x</strong>: <em>interval</em>.floor(<em>x</em>) is invoked for each <strong>x</strong> to produce <strong>x1</strong>, and <em>interval</em>.offset(<em>x1</em>) is invoked for each <strong>x1</strong> to produce <strong>x2</strong>. The same is true for <strong>y</strong>, <strong>y1</strong>, and <strong>y2</strong>, respectively. If the interval is specified as a number <em>n</em>, <strong>x1</strong> and <strong>x2</strong> are taken as the two consecutive multiples of <em>n</em> that bracket <strong>x</strong>. Named UTC intervals such as <em>day</em> are also supported; see <a href="./../features/scales#scale-options">scale options</a>.</p><p>The rect mark supports the <a href="./../features/marks#mark-options">standard mark options</a>, including insets and rounded corners. The <strong>stroke</strong> defaults to <em>none</em>. The <strong>fill</strong> defaults to <em>currentColor</em> if the stroke is <em>none</em>, and to <em>none</em> otherwise.</p><h2 id="rect" tabindex="-1">rect(<em>data</em>, <em>options</em>) <a class="header-anchor" href="#rect" aria-label="Permalink to &quot;rect(*data*, *options*) {#rect}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(olympians, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;height&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span></code></pre></div><p>Returns a new rect with the given <em>data</em> and <em>options</em>.</p><h2 id="rectX" tabindex="-1">rectX(<em>data</em>, <em>options</em>) <a class="header-anchor" href="#rectX" aria-label="Permalink to &quot;rectX(*data*, *options*) {#rectX}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rectX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(olympians, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">binY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, {y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span></code></pre></div><p>Equivalent to <a href="#rect">rect</a>, except that if neither the <strong>x1</strong> nor <strong>x2</strong> option is specified, the <strong>x</strong> option may be specified as shorthand to apply an implicit <a href="./../transforms/stack">stackX transform</a>; this is the typical configuration for a histogram with horizontal→ rects aligned at <em>x</em> = 0. If the <strong>x</strong> option is not specified, it defaults to the identity function.</p><h2 id="rectY" tabindex="-1">rectY(<em>data</em>, <em>options</em>) <a class="header-anchor" href="#rectY" aria-label="Permalink to &quot;rectY(*data*, *options*) {#rectY}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rectY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(olympians, Plot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">binX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({y: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, {x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weight&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span></code></pre></div><p>Equivalent to <a href="#rect">rect</a>, except that if neither the <strong>y1</strong> nor <strong>y2</strong> option is specified, the <strong>y</strong> option may be specified as shorthand to apply an implicit <a href="./../transforms/stack">stackY transform</a>; this is the typical configuration for a histogram with vertical↑ rects aligned at <em>y</em> = 0. If the <strong>y</strong> option is not specified, it defaults to the identity function.</p>`,18),Rs=JSON.parse('{"title":"Rect mark","description":"","frontmatter":{},"headers":[],"relativePath":"marks/rect.md","filePath":"marks/rect.md"}'),ws={name:"marks/rect.md"},Vs=Object.assign(ws,{setup(Ss){const y=p([]),u=p([]),k=p([{weight:31,height:1.21,sex:"female"},{weight:170,height:2.21,sex:"male"}]),F=p([]),r=p(null),v=b(()=>r.value?D(r.value,r.value.objects.counties).features:[]),B=b(()=>v.value.map(a=>S(a).flat())),q=x()(m(1e3).map(_.source(C(42))()));return j(()=>{o("../data/athletes.csv",E).then(a=>k.value=a),o("../data/diamonds.csv",E).then(a=>y.value=a),o("../data/seattle-weather.csv",E).then(a=>u.value=a),o("../data/povcalnet.csv",E).then(a=>F.value=a),T("../data/us-counties-10m.json").then(a=>r.value=a)}),(a,Ds)=>{const e=I("PlotRender");return V(),Y("div",null,[N,h(e,{defer:"",options:{projection:"albers-usa",marks:[c(B.value,{x1:"0",y1:"1",x2:"2",y2:"3",stroke:"currentColor"})]}},null,8,["options"]),O,h(e,{mark:l(R(q),{x1:"x0",x2:"x1",y:"length"}),options:{round:!0}},null,8,["mark"]),X,h(e,{mark:l(m(1e3).map(_.source(C(42))()),d()),options:{}},null,8,["mark"]),M,h(e,{defer:"",options:{color:{legend:!0},marks:[l(k.value,d({y:"count"},{x:"weight",fill:"sex"})),g([0])]}},null,8,["options"]),$,h(e,{defer:"",options:{round:!0,color:{legend:!0},marks:[l(k.value,d({y2:"count"},{x:"weight",fill:"sex",mixBlendMode:a.$dark?"screen":"multiply"})),g([0])]}},null,8,["options"]),U,s("div",H,[z,L,s("pre",G,[s("code",null,[J,i(`
`),W,i(`
`),K,i(`
`),Q,i(`
`),s("span",Z,[ss,s("span",is,'"'+f(a.$dark?"screen":"multiply")+'"',1),as]),i(`
`),ts,i(`
`),ns,i(`
`),es])])]),hs,ls,h(e,{defer:"",options:{marks:[l(k.value,d({y:"count"},{x:"weight",fy:"sex"})),g([0])]}},null,8,["options"]),ps,h(e,{defer:"",options:{height:640,marginLeft:60,color:{scheme:a.$dark?"turbo":"YlGnBu",type:"symlog"},marks:[c(y.value,P({fill:"count"},{x:"carat",y:"price",thresholds:100}))]}},null,8,["options"]),ks,s("div",rs,[os,Es,s("pre",ds,[s("code",null,[gs,i(`
`),cs,i(`
`),ys,i(`
`),us,i(`
`),s("span",Fs,[ms,s("span",_s,'"'+f(a.$dark?"turbo":"YlGnBu")+'"',1),Cs]),i(`
`),bs,i(`
`),fs,i(`
`),vs,i(`
`),Bs,i(`
`),qs,i(`
`),xs])])]),Ts,h(e,{defer:"",options:{x:{label:"Population (millions)"},y:{percent:!0,label:"Proportion living on less than $30 per day (%)"},marks:[l(F.value,A({filter:n=>["N","A"].includes(n.CoverageType),x:"ReqYearPopulation",order:"HeadCount",reverse:!0,y2:"HeadCount",title:n=>`${n.CountryName}
${(n.HeadCount*100).toFixed(1)}%`,insetLeft:.2,insetRight:.2})),g([0])]}},null,8,["options"]),Ps,h(e,{defer:"",options:{aspectRatio:1,y:{ticks:12,tickFormat:w("en","narrow")},marks:[c(u.value,{filter:n=>n.date.getUTCFullYear()===2015,x:n=>n.date.getUTCDate(),y:n=>n.date.getUTCMonth(),interval:1,fill:"temp_max",inset:.5})]}},null,8,["options"]),As])}}});export{Rs as __pageData,Vs as default};
